{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/app/feature/company-policy/company-policy.route.ts", "apps/findqo-ireland/src/app/feature/company-policy/company-policy.page.ts", "apps/findqo-ireland/src/app/feature/company-policy/company-policy.page.html", "apps/findqo-ireland/src/app/feature/company-policy/company-policy-routing.module.ts", "apps/findqo-ireland/src/app/feature/company-policy/company-policy.module.ts"],
  "sourcesContent": ["import { APP_ROUTE } from '@core/constants';\n\n// TODO: PDFs should be fetch from the server side.\nexport const COMPANY_POLICY_NAV_LIST = [\n\t{\n\t\tpath: APP_ROUTE.terms,\n\t\tdata: {\n\t\t\ttitle: 'n61',\n\t\t\tpageContent: 'n3163',\n\t\t\tpageContent2: 'n3190',\n\t\t\tpageContent3: 'n3164',\n\t\t\tcompanyLink: 'http://findqo.ie',\n\t\t\treadText: 'n3165',\n\t\t\tpdfLink: 'assets/policies-pdf/terms-of-service.pdf',\n\t\t},\n\t},\n\t{\n\t\tpath: APP_ROUTE.privacyPolicy,\n\t\tdata: {\n\t\t\ttitle: 'n62',\n\t\t\tpageContent: 'n3191',\n\t\t\tpageContent2: 'n3167',\n\t\t\tpageContent3: 'n3189',\n\t\t\tcompanyEmail: 'n2316',\n\t\t\treadText: 'n3168',\n\t\t\tpdfLink: 'assets/policies-pdf/privacy-statement.pdf',\n\t\t},\n\t},\n\t{\n\t\tpath: APP_ROUTE.cookiePolicy,\n\t\tdata: {\n\t\t\ttitle: 'n3124',\n\t\t\tpageContent: 'n3169',\n\t\t\tpageContent2: '',\n\t\t\treadText: 'n3170',\n\t\t\tpdfLink: 'assets/policies-pdf/cookies-policy.pdf',\n\t\t},\n\t},\n];\n", "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { APP_ROUTE } from '@core/constants';\nimport { ButtonType } from '@shared/components/button/button.component';\nimport { COMPANY_POLICY_NAV_LIST } from './company-policy.route';\n\ninterface PageContent {\n\tpath: string;\n\tdata?: {\n\t\ttitle: string;\n\t\tpageContent: string;\n\t\tpageContent2?: string;\n\t\tpageContent3?: string;\n\t\tcompanyLink?: string;\n\t\treadText?: string;\n\t\tpdfLink?: string;\n\t\tcompanyEmail?: string;\n\t};\n}\n\n@Component({\n    selector: 'findqo-company-policy',\n    templateUrl: './company-policy.page.html',\n    styleUrls: ['./company-policy.page.scss'],\n    standalone: false\n})\nexport class CompanyPolicyPage implements OnInit {\n\tconstructor(private readonly router: Router) {}\n\n\tcurrentUrl: string;\n\tpageData: PageContent;\n\tshowCompanyUrl = false;\n\tshowEmail = false;\n\n\treadonly buttonType = ButtonType;\n\treadonly companyPolicyNavList = COMPANY_POLICY_NAV_LIST;\n\n\topenPdf(pdfLink: string): void {\n\t\twindow.open(pdfLink, '_blank');\n\t}\n\n\tprivate initDeclarations(): void {\n\t\t// TODO: Instead of checking what is the current URL, just get the data directly from route data\n\t\tthis.currentUrl = this.router.url.replaceAll('/', '');\n\t\tthis.pageData = this.companyPolicyNavList.find((i) => i.path === this.currentUrl);\n\n\t\tif (this.currentUrl === APP_ROUTE.terms) {\n\t\t\tthis.showCompanyUrl = true;\n\t\t} else if (this.currentUrl === APP_ROUTE.privacyPolicy) {\n\t\t\tthis.showEmail = true;\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t\tthis.initDeclarations();\n\t}\n}\n", "<div *ngIf=\"pageData\" class=\"container px-3 py-4 w-700px h-100\">\n\t<div class=\"d-flex align-items-center justify-content-center h-100\">\n\t\t<div>\n\t\t\t<h3 class=\"heading-3-medium fg-general-5\">{{ pageData['data']['title'] | translations }}</h3>\n\t\t\t<div class=\"fs-14px fw-400 lh-22px fg-general-4 my-4\">\n\t\t\t\t<p class=\"mb-1\">{{ pageData['data']['pageContent'] | translations }}</p>\n\n\t\t\t\t<span *ngIf=\"showCompanyUrl\" class=\"my-3\">\n\t\t\t\t\t&#40;\n\t\t\t\t\t<a href=\"{{ pageData['data']['companyLink'] }}\">{{ pageData['data']['companyLink'] }}</a>\n\t\t\t\t\t&#41;\n\t\t\t\t\t<span>{{ pageData['data']['pageContent2'] | translations }}</span>\n\n\t\t\t\t\t<p class=\"my-3\">{{ pageData['data']['pageContent3'] | translations }}</p>\n\t\t\t\t</span>\n\n\t\t\t\t<div *ngIf=\"showEmail\" class=\"my-3\">\n\t\t\t\t\t<span class=\"me-1\">{{ pageData['data']['pageContent2'] | translations }}</span>\n\n\t\t\t\t\t<a href=\"mailto:hello@findqo.ie\">{{ pageData['data']['companyEmail'] | translations }}</a>\n\n\t\t\t\t\t<span class=\"ms-1\">{{ pageData['data']['pageContent3'] | translations }}</span>\n\t\t\t\t</div>\n\n\t\t\t\t<p class=\"my-3\">{{ pageData['data']['readText'] | translations }}</p>\n\t\t\t</div>\n\n\t\t\t<findqo-button\n\t\t\t\tclass=\"section\"\n\t\t\t\t[btnType]=\"buttonType.STROKED\"\n\t\t\t\t[label]=\"pageData['data']['title'] | translations\"\n\t\t\t\t(click)=\"openPdf(pageData['data']['pdfLink'])\"\n\t\t\t></findqo-button>\n\t\t</div>\n\t</div>\n</div>\n", "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CompanyPolicyPage } from './company-policy.page';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: CompanyPolicyPage,\n\t},\n];\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class CompanyPolicyRoutingModule {}\n", "import { NgModule } from '@angular/core';\nimport { CompanyPolicyPage } from './company-policy.page';\nimport { ButtonModule } from '@shared/components/button/button.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { CompanyPolicyRoutingModule } from './company-policy-routing.module';\n\n@NgModule({\n\tdeclarations: [CompanyPolicyPage],\n\timports: [SharedModule, ButtonModule, CompanyPolicyRoutingModule],\n})\nexport class CompanyPolicyModule {}\n"],
  "mappings": "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",
  "names": []
}
