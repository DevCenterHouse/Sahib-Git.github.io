{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/app/shared/components/ads/ad-breadcrumbs/ad-breadcrumbs.component.ts", "apps/findqo-ireland/src/app/shared/components/ads/ad-breadcrumbs/ad-breadcrumbs.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ActivatedRoute, Params, RouterModule } from '@angular/router';\nimport { APP_ROUTE } from '@core/constants';\nimport { FilterType } from '@core/enums';\nimport { Ad } from '@core/models';\nimport { RouteDataType } from '@core/services/route.service';\nimport { BreadcrumbsState } from '@shared/states/breadcrumbs.state';\n\ninterface Breadcrumbs {\n\tname: string;\n\tlink?: string[];\n\tqueryParams?: Params;\n}\n\n@Component({\n\tselector: 'findqo-ad-breadcrumbs',\n\tstandalone: true,\n\timports: [CommonModule, MatIconModule, RouterModule],\n\ttemplateUrl: './ad-breadcrumbs.component.html',\n\tstyleUrls: ['./ad-breadcrumbs.component.scss'],\n})\nexport class AdBreadcrumbsComponent implements OnInit {\n\tconstructor(\n\t\tprivate readonly route: ActivatedRoute,\n\t\tprivate readonly breadcrumbsState: BreadcrumbsState\n\t) {}\n\n\t@Input() ad?: Ad;\n\n\tbreadcrumbs: Breadcrumbs[] = [];\n\n\treadonly home = {\n\t\tname: 'Home',\n\t\tlink: [APP_ROUTE.home],\n\t};\n\n\tprivate createBreadcrumbs(ad: Ad): void {\n\t\tif (ad) {\n\t\t\tthis.createBreadcrumbsFromAd(ad);\n\t\t} else {\n\t\t\tthis.createBreadcrumbsFromAdList();\n\t\t}\n\t}\n\n\tprivate createBreadcrumbsFromAd(ad: Ad): void {\n\t\tconst DEFAULT_LINK = ['/', ad.section.reference, 'ireland', ad.aisle.reference];\n\t\tconst QUERY_PARAMS = this.breadcrumbsState.getbreadcrumbsParams().queryParams;\n\n\t\tthis.breadcrumbs.push(\n\t\t\t// Home\n\t\t\tthis.home,\n\t\t\t// Aisle\n\t\t\t{\n\t\t\t\tname: ad.aisle.name,\n\t\t\t\tlink: DEFAULT_LINK,\n\t\t\t\tqueryParams: QUERY_PARAMS,\n\t\t\t},\n\t\t\t// Ad title\n\t\t\t{\n\t\t\t\tname: ad.title,\n\t\t\t}\n\t\t);\n\t}\n\tprivate createBreadcrumbsFromAdList(): void {\n\t\tconst isSeoFriendlyUrl = this.route.snapshot.data?.[RouteDataType.IS_AD_LISTING_SEO_FRIENDLY_URL];\n\n\t\t// Use a single subscription for both cases\n\t\tconst aisleObservable = isSeoFriendlyUrl\n\t\t\t? this.route.data // For SEO-friendly URLs, use route.data\n\t\t\t: this.route.params; // For non-SEO-friendly URLs, use route.params\n\n\t\taisleObservable.subscribe((params: Params) => {\n\t\t\tconst AISLE = params[FilterType.AISLE]?.split('-').map((aisle: string) => this.toCapitalize(aisle)) || [];\n\n\t\t\t// Reset the breadcrumbs\n\t\t\tthis.breadcrumbs = [];\n\n\t\t\t// Add aisle\n\t\t\tthis.breadcrumbs.push(this.home, {\n\t\t\t\tname: AISLE.join(' '),\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate toCapitalize(value: string): string {\n\t\treturn value.charAt(0).toLocaleUpperCase() + value.substring(1);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.createBreadcrumbs(this.ad);\n\t}\n}\n", "<nav aria-label=\"breadcrumb\">\n\t<ol class=\"breadcrumb align-items-center\">\n\t\t<li class=\"breadcrumb-item v-center px-0\" *ngFor=\"let item of breadcrumbs; let last = last\" [class.active]=\"last\">\n\t\t\t<a *ngIf=\"!last; else lastItem\" class=\"v-center gap-1 text-caption-regular fg-info-3\" [routerLink]=\"item.link\" [queryParams]=\"item.queryParams\">\n\t\t\t\t{{ item.name }}\n\t\t\t\t<mat-icon class=\"fg-general-2\">chevron_right</mat-icon>\n\t\t\t</a>\n\n\t\t\t<ng-template #lastItem>\n\t\t\t\t<span class=\"text-caption-regular fg-general-4\">\n\t\t\t\t\t{{ item.name }}\n\t\t\t\t</span>\n\t\t\t</ng-template>\n\t\t</li>\n\t</ol>\n</nav>\n"],
  "mappings": "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",
  "names": []
}
