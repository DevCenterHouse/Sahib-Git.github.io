{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/assets/scss/utils/_mixins.scss", "apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-photo/place-ad-photo.component.scss", "node_modules/bootstrap/scss/mixins/_breakpoints.scss"],
  "sourcesContent": ["@import 'bootstrap/scss/functions', 'bootstrap/scss/variables', 'bootstrap/scss/mixins';\n\n// NOTE: The breakpoints should be same the as breakpoint observer in APP.INITIALIZER\n// Breakpoints are same with the Bootstrap v5.0.\n// @links https://getbootstrap.com/docs/5.0/layout/breakpoints/\n\n/* BOOTSTRAP BREAKPOINT MIXINS */\n// Min-width\n// @include media-breakpoint-up(sm) { ... }\n// @include media-breakpoint-up(md) { ... }\n// @include media-breakpoint-up(lg) { ... }\n// @include media-breakpoint-up(xl) { ... }\n// @include media-breakpoint-up(xxl) { ... }\n\n// Single breakpoint\n// @include media-breakpoint-only(xs) { ... }\n// @include media-breakpoint-only(sm) { ... }\n// @include media-breakpoint-only(md) { ... }\n// @include media-breakpoint-only(lg) { ... }\n// @include media-breakpoint-only(xl) { ... }\n// @include media-breakpoint-only(xxl) { ... }\n\n// No media query necessary for xs breakpoint as it's effectively `@media (max-width: 0) { ... }`\n// @include media-breakpoint-down(sm) { ... }\n// @include media-breakpoint-down(md) { ... }\n// @include media-breakpoint-down(lg) { ... }\n// @include media-breakpoint-down(xl) { ... }\n// @include media-breakpoint-down(xxl) { ... }\n\n// TODO: Removed the custom mixins belowe as we will now use the mixins from Bootstrap for media queries.\n\n// xs - sm\n@mixin mobile-only {\n\t@media all and (max-width: 576px) {\n\t\t@content;\n\t}\n}\n\n// xs - md\n@mixin mobile-and-small-tablet-only {\n\t@media all and (max-width: 768px) {\n\t\t@content;\n\t}\n}\n\n// sm - xl\n@mixin tablet-only {\n\t@media all and (min-width: 576px) and (max-width: 1199px) {\n\t\t@content;\n\t}\n}\n\n// xl up\n@mixin desktop-only {\n\t@media all and (min-width: 1200px) {\n\t\t@content;\n\t}\n}\n\n// xxl up\n@mixin big-desktop-only {\n\t@media all and (min-width: 1400px) {\n\t\t@content;\n\t}\n}\n", "@import 'assets/scss/utils/mixins';\n\na.drop-photo {\n\theight: 175px;\n\ttext-decoration: none;\n\tborder: 3px dashed var(--info-2);\n\tborder-radius: 4px;\n\tdisplay: block;\n}\n.disabled {\n\tcursor: none;\n\tpointer-events: none;\n}\n\n.icon {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0px;\n\n\twidth: 50px;\n\theight: 50px;\n\n\tborder-radius: 50%;\n}\n\n.photo-alert {\n\theight: 45px;\n\tborder: 1px solid var(--neutral-2);\n\tline-height: 45px;\n\n\t.mat-icon {\n\t\tdisplay: inline-block !important;\n\t}\n}\n\n.photo-view {\n\twidth: 162px;\n\theight: 125px;\n\tbackground-color: var(--general-1);\n\n\t.ad-image {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n\t\tborder-radius: 4px;\n\t}\n\n\t.bg-main {\n\t\tbackground-color: rgba(26, 31, 46, 0.35);\n\t}\n}\n\n.add-photo {\n\tline-height: 125px;\n\theight: 125px;\n\twidth: 162px;\n}\n\n.delete-img,\n.rotate-img,\n.cancel-img {\n\twidth: 35px;\n\theight: 35px;\n\tbackground-color: rgba(26, 31, 46, 0.65);\n\tborder-radius: 50%;\n}\n\n.cancel-img {\n\ttop: 8px;\n\tright: 8px;\n}\n\n.cdk-drag-preview img {\n\tbox-sizing: border-box;\n\tborder-radius: 2px;\n\tpadding-top: 8px;\n\tpadding-bottom: 8px;\n\n\tbackground:\n\t\tlinear-gradient(to right, transparent 40%, var(--info-3) 0%) top/26px 1px repeat-x,\n\t\tlinear-gradient(transparent 40%, var(--info-3) 0%) right/1px 20px repeat-y,\n\t\tlinear-gradient(to right, transparent 40%, var(--info-3) 0%) bottom/26px 1px repeat-x,\n\t\tlinear-gradient(transparent 40%, var(--info-3) 0%) left/1px 20px repeat-y;\n}\n\n.cdk-drag-preview .main-photo-link {\n\tdisplay: none;\n}\n\n.cdk-drag-placeholder img,\n.cdk-drag-placeholder .delete-img {\n\tdisplay: none;\n}\n\n.cdk-drag-placeholder .photo-view {\n\tbackground-color: var(--basic-1);\n\tborder-radius: 2px;\n\n\tbackground:\n\t\tlinear-gradient(to right, transparent 33%, var(--general-2) 0%) top/26px 1px repeat-x,\n\t\tlinear-gradient(transparent 33%, var(--general-2) 0%) right/1px 20px repeat-y,\n\t\tlinear-gradient(to right, transparent 33%, var(--general-2) 0%) bottom/26px 1px repeat-x,\n\t\tlinear-gradient(transparent 33%, var(--general-2) 0%) left/1px 20px repeat-y;\n}\n\n.add-photo-icon {\n\twidth: 25px;\n\theight: 25px;\n}\n\n.add-more-photo {\n\ttransform: translate(0, -50%);\n\ttop: 50%;\n\tposition: absolute;\n}\n\n.upload-failed {\n\tbottom: 35%;\n\tleft: 0;\n\tright: 0;\n}\n\n.delete-icon,\n.rotate-icon {\n\twidth: 18px;\n\theight: 18px;\n}\n\n.cover-image {\n\tborder-radius: 4px !important;\n\tbackground: rgba(108, 114, 132, 0.8) !important;\n\tcolor: var(--basic-1) !important;\n\theight: 35px !important;\n\tleft: 8px;\n\tline-height: 35px;\n}\n\n.main-photo-link {\n\theight: 40px;\n\tdisplay: block;\n\ttext-align: center;\n\tline-height: 40px;\n\twidth: 100%;\n\ttext-decoration: none;\n\twidth: 162px;\n}\n\n.img-progress {\n\ttop: auto;\n\tbottom: 8px;\n\tborder-radius: 10px;\n\theight: 6px;\n\twidth: -webkit-fill-available;\n\tz-index: var(--z-index-place-ad-img-progress);\n}\n\n.re-order-icon {\n\tdisplay: inline-block !important;\n\twidth: 20px;\n\theight: 20px;\n\tvertical-align: middle;\n\tmargin-inline-end: 8px;\n}\n\n.re-order-container {\n\theight: 45px;\n\tpadding: 0 16px;\n\tmargin-bottom: 24px;\n\tborder-radius: 4px;\n\tborder: 1px solid var(info-3);\n}\n\n.image-alert {\n\tbackground-color: var(--error-1) !important;\n\tborder: 1px solid var(--error-2) !important;\n\n\tp > span {\n\t\tcolor: var(--error-3) !important;\n\t}\n\t.mat-icon {\n\t\tdisplay: inline-block !important;\n\t}\n}\n\n.upload-container {\n\ttransform: translate(-50%, -50%);\n\ttop: 50%;\n\tleft: 50%;\n}\n\n.loading-progress {\n\ttop: 109px;\n\n\t@include media-breakpoint-up(sm) {\n\t\ttop: 112.5px;\n\t}\n}\n\n.skeleton-loader {\n\tline-height: 125px;\n\theight: 125px;\n\twidth: 162px;\n\tbackground: linear-gradient(90deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);\n\tbackground-size: 200% 100%;\n\tanimation: 2s img-loader linear infinite;\n}\n\n@keyframes img-loader {\n\tto {\n\t\tbackground-position-x: -200%;\n\t}\n}\n\n.w-626px {\n\twidth: 626px;\n}\n\n.w-550px {\n\t@include media-breakpoint-up(sm) {\n\t\tmax-width: 550px;\n\t}\n}\n\n.image-index {\n\tmin-width: 20px;\n\theight: 35px;\n}\n\n.button-container {\n\ttop: 8px;\n\tleft: 0px;\n\tmax-width: 162px;\n\twidth: 100%;\n}\n\n.highligt-main-img {\n\tborder: 5px solid var(--general-4);\n}\n", "// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
