{"version":3,"sources":["node_modules/@angular/cdk/fesm2022/stepper.mjs","node_modules/@angular/material/fesm2022/stepper.mjs","apps/findqo-ireland/src/app/core/components/header/components/place-ad-header/place-ad-exit-dialog/place-ad-exit-dialog.component.ts","apps/findqo-ireland/src/app/core/components/header/components/place-ad-header/place-ad-exit-dialog/place-ad-exit-dialog.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/invalid-subscription-dialog/invalid-subscription-dialog.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/invalid-subscription-dialog/invalid-subscription-dialog.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-amenities/place-ad-amenities.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-amenities/place-ad-amenities.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/plac-ad-tab-buttons/place-ad-tab-buttons.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/plac-ad-tab-buttons/place-ad-tab-buttons.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/plac-ad-tab-buttons/place-ad-tab-buttons.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-amenities/place-ad-amenities.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-contact/palce-ad-auth.facade.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-contact/place-ad-contact.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-contact/place-ad-contact.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-contact/place-ad-contact.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-description/place-ad-description.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-description/place-ad-description.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-description/place-ad-description.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-input-control/place-ad-input-control.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-input-control/place-ad-input-control.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-date-control/place-ad-date-control.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-date-control/place-ad-date-control.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-room-control/place-ad-room-control.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-room-control/place-ad-room-control.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-select-control/place-ad-select-control.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-select-control/place-ad-select-control.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-radio-control/place-ad-radio-control.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-radio-control/place-ad-radio-control.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-checkbox-control/place-ad-checkbox-control.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-checkbox-control/place-ad-checkbox-control.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-details/place-ad-details.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-details/place-ad-details.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-checkbox-control/place-ad-checkbox-control.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-date-control/place-ad-date-control.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-input-control/place-ad-input-control.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-radio-control/place-ad-radio-control.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-room-control/place-ad-room-control.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-select-control/place-ad-select-control.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-details/place-ad-details.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-location/place-ad-location.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-location/place-ad-location.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-location/place-ad-location.module.ts","node_modules/@angular/cdk/fesm2022/drag-drop.mjs","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-photo-preview/place-ad-photo-preview.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-photo-preview/place-ad-photo-preview.component.html","apps/findqo-ireland/src/app/feature/place-ad/dialogs/place-ad-preiview-dialog/place-ad-preview-dialog.component.ts","apps/findqo-ireland/src/app/feature/place-ad/dialogs/place-ad-preiview-dialog/place-ad-preview-dialog.component.html","apps/findqo-ireland/src/app/shared/validators/video-url.validator.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-photo/place-ad-photo.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-photo/place-ad-photo.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-photo-preview/place-ad-photo-preview.module.ts","apps/findqo-ireland/src/app/feature/place-ad/dialogs/place-ad-preiview-dialog/place-ad-preivew-dialog.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-photo/place-ad-photo.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-view-coupon/place-ad-view-coupon.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-view-coupon/place-ad-view-coupon.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-plans/place-ad-plans.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-plans/place-ad-plans.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-view-coupon/place-ad-view-coupon.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/invalid-subscription-dialog/invalid-subscription-dialog.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-plans/place-ad-plans.module.ts","apps/findqo-ireland/src/app/shared/validators/number.validator.ts","apps/findqo-ireland/src/app/feature/place-ad/components/price-on-application-dialog/price-on-application-dialog.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/price-on-application-dialog/price-on-application-dialog.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price-general/place-ad-price-general.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price-general/place-ad-price-general.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price-share-room/place-ad-price-share-room.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price-share-room/place-ad-price-share-room.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price/place-ad-price.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price/place-ad-price.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price-share-room/place-ad-price-share-room.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/price-on-application-dialog/price-on-application-dialog.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price-general/place-ad-price-general.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-price/place-ad-price.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-review/place-ad-review.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-review/place-ad-review.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/review-and-pay-buttons/review-and-pay-buttons.component.ts","apps/findqo-ireland/src/app/feature/place-ad/components/review-and-pay-buttons/review-and-pay-buttons.component.html","apps/findqo-ireland/src/app/feature/place-ad/components/review-and-pay-buttons/review-and-pay-buttons.module.ts","apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-review/place-ad-review.module.ts","apps/findqo-ireland/src/app/shared/components/progress-spinner/progress-spinner.component.ts","apps/findqo-ireland/src/app/feature/place-ad/pages/place-ad-form-page/place-ad-email-form/place-ad-email-form.component.ts","apps/findqo-ireland/src/app/feature/place-ad/pages/place-ad-form-page/place-ad-form.service.ts","apps/findqo-ireland/src/app/feature/place-ad/pages/place-ad-form-page/place-ad-form-page.component.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, ElementRef, Directive, TemplateRef, InjectionToken, EventEmitter, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChild, ContentChildren, ViewChild, Input, Output, ChangeDetectorRef, QueryList, numberAttribute, NgModule } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport { _ as _IdGenerator } from './id-generator-Dw_9dSDu.mjs';\nimport { F as FocusKeyManager } from './focus-key-manager-C1rAQJ5z.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { S as SPACE, c as ENTER } from './keycodes-CpHkExLC.mjs';\nimport { c as _getFocusedElementPierceShadowDom } from './shadow-dom-B0oHn41l.mjs';\nimport { BidiModule } from './bidi.mjs';\nimport '@angular/common';\nimport './list-key-manager-CyOIXo8P.mjs';\nimport './typeahead-9ZW4Dtsf.mjs';\nconst _c0 = [\"*\"];\nfunction CdkStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nclass CdkStepHeader {\n  _elementRef = inject(ElementRef);\n  constructor() {}\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  static ɵfac = function CdkStepHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepHeader)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepHeader,\n    selectors: [[\"\", \"cdkStepHeader\", \"\"]],\n    hostAttrs: [\"role\", \"tab\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepHeader]',\n      host: {\n        'role': 'tab'\n      }\n    }]\n  }], () => [], null);\n})();\nclass CdkStepLabel {\n  template = inject(TemplateRef);\n  constructor() {}\n  static ɵfac = function CdkStepLabel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepLabel)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepLabel,\n    selectors: [[\"\", \"cdkStepLabel\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepLabel]'\n    }]\n  }], () => [], null);\n})();\n\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex;\n  /** Index of the step previously selected. */\n  previouslySelectedIndex;\n  /** The step instance now selected. */\n  selectedStep;\n  /** The step instance previously selected. */\n  previouslySelectedStep;\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n  _stepperOptions;\n  _stepper = inject(CdkStepper);\n  _displayDefaultIndicatorType;\n  /** Template for step label if it exists. */\n  stepLabel;\n  /** Forms that have been projected into the step. */\n  _childForms;\n  /** Template for step content. */\n  content;\n  /** The top level abstract control of the step. */\n  stepControl;\n  /** Whether user has attempted to move away from the step. */\n  interacted = false;\n  /** Emits when the user has attempted to move away from the step. */\n  interactedStream = new EventEmitter();\n  /** Plain text label of the step. */\n  label;\n  /** Error message to display when there's an error. */\n  errorMessage;\n  /** Aria label for the tab. */\n  ariaLabel;\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  ariaLabelledby;\n  /** State of the step. */\n  state;\n  /** Whether the user can return to this step once it has been marked as completed. */\n  editable = true;\n  /** Whether the completion of step is optional. */\n  optional = false;\n  /** Whether step is marked as completed. */\n  get completed() {\n    return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n  }\n  set completed(value) {\n    this._completedOverride = value;\n  }\n  _completedOverride = null;\n  _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n  /** Whether step has an error. */\n  get hasError() {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value) {\n    this._customError = value;\n  }\n  _customError = null;\n  _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n  constructor() {\n    const stepperOptions = inject(STEPPER_GLOBAL_OPTIONS, {\n      optional: true\n    });\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n  }\n  /** Selects this step component. */\n  select() {\n    this._stepper.selected = this;\n  }\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset() {\n    this.interacted = false;\n    if (this._completedOverride != null) {\n      this._completedOverride = false;\n    }\n    if (this._customError != null) {\n      this._customError = false;\n    }\n    if (this.stepControl) {\n      // Reset the forms since the default error state matchers will show errors on submit and we\n      // want the form to be back to its initial state (see #29781). Submitted state is on the\n      // individual directives, rather than the control, so we need to reset them ourselves.\n      this._childForms?.forEach(form => form.resetForm?.());\n      this.stepControl.reset();\n    }\n  }\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n  _markAsInteracted() {\n    if (!this.interacted) {\n      this.interacted = true;\n      this.interactedStream.emit(this);\n    }\n  }\n  /** Determines whether the error state can be shown. */\n  _showError() {\n    // We want to show the error state either if the user opted into/out of it using the\n    // global options, or if they've explicitly set it through the `hasError` input.\n    return this._stepperOptions.showError ?? this._customError != null;\n  }\n  static ɵfac = function CdkStep_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStep)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkStep,\n    selectors: [[\"cdk-step\"]],\n    contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 5);\n        i0.ɵɵcontentQuery(dirIndex,\n        // Note: we look for `ControlContainer` here, because both `NgForm` and `FormGroupDirective`\n        // provides themselves as such, but we don't want to have a concrete reference to both of\n        // the directives. The type is marked as `Partial` in case we run into a class that provides\n        // itself as `ControlContainer` but doesn't have the same interface as the directives.\n        ControlContainer, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._childForms = _t);\n      }\n    },\n    viewQuery: function CdkStep_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    inputs: {\n      stepControl: \"stepControl\",\n      label: \"label\",\n      errorMessage: \"errorMessage\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      state: \"state\",\n      editable: [2, \"editable\", \"editable\", booleanAttribute],\n      optional: [2, \"optional\", \"optional\", booleanAttribute],\n      completed: [2, \"completed\", \"completed\", booleanAttribute],\n      hasError: [2, \"hasError\", \"hasError\", booleanAttribute]\n    },\n    outputs: {\n      interactedStream: \"interacted\"\n    },\n    exportAs: [\"cdkStep\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function CdkStep_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStep, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-step',\n      exportAs: 'cdkStep',\n      template: '<ng-template><ng-content/></ng-template>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], () => [], {\n    stepLabel: [{\n      type: ContentChild,\n      args: [CdkStepLabel]\n    }],\n    _childForms: [{\n      type: ContentChildren,\n      args: [\n      // Note: we look for `ControlContainer` here, because both `NgForm` and `FormGroupDirective`\n      // provides themselves as such, but we don't want to have a concrete reference to both of\n      // the directives. The type is marked as `Partial` in case we run into a class that provides\n      // itself as `ControlContainer` but doesn't have the same interface as the directives.\n      ControlContainer, {\n        descendants: true\n      }]\n    }],\n    content: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    stepControl: [{\n      type: Input\n    }],\n    interactedStream: [{\n      type: Output,\n      args: ['interacted']\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    state: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    optional: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    completed: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hasError: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass CdkStepper {\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Used for managing keyboard focus. */\n  _keyManager;\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  _steps;\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  steps = new QueryList();\n  /** The list of step headers of the steps in the stepper. */\n  _stepHeader;\n  /** List of step headers sorted based on their DOM order. */\n  _sortedHeaders = new QueryList();\n  /** Whether the validity of previous steps should be checked or not. */\n  linear = false;\n  /** The index of the selected step. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(index) {\n    if (this._steps) {\n      // Ensure that the index can't be out of bounds.\n      if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n      if (this._selectedIndex !== index) {\n        this.selected?._markAsInteracted();\n        if (!this._anyControlsInvalidOrPending(index) && (index >= this._selectedIndex || this.steps.toArray()[index].editable)) {\n          this._updateSelectedItemIndex(index);\n        }\n      }\n    } else {\n      this._selectedIndex = index;\n    }\n  }\n  _selectedIndex = 0;\n  /** The step that is selected. */\n  get selected() {\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n  }\n  set selected(step) {\n    this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n  /** Event emitted when the selected step has changed. */\n  selectionChange = new EventEmitter();\n  /** Output to support two-way binding on `[(selectedIndex)]` */\n  selectedIndexChange = new EventEmitter();\n  /** Used to track unique ID for each stepper component. */\n  _groupId = inject(_IdGenerator).getId('cdk-stepper-');\n  /** Orientation of the stepper. */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(value) {\n    // This is a protected method so that `MatStepper` can hook into it.\n    this._orientation = value;\n    if (this._keyManager) {\n      this._keyManager.withVerticalOrientation(value === 'vertical');\n    }\n  }\n  _orientation = 'horizontal';\n  constructor() {}\n  ngAfterContentInit() {\n    this._steps.changes.pipe(startWith(this._steps), takeUntil(this._destroyed)).subscribe(steps => {\n      this.steps.reset(steps.filter(step => step._stepper === this));\n      this.steps.notifyOnChanges();\n    });\n  }\n  ngAfterViewInit() {\n    // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n    // Material stepper, they won't appear in the `QueryList` in the same order as they're\n    // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n    // them manually to ensure that they're correct. Alternatively, we can change the Material\n    // template to inline the headers in the `ngFor`, but that'll result in a lot of\n    // code duplication. See #23539.\n    this._stepHeader.changes.pipe(startWith(this._stepHeader), takeUntil(this._destroyed)).subscribe(headers => {\n      this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n        const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n        // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        // tslint:disable-next-line:no-bitwise\n        return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n      }));\n      this._sortedHeaders.notifyOnChanges();\n    });\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view children. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager(this._sortedHeaders).withWrap().withHomeAndEnd().withVerticalOrientation(this._orientation === 'vertical');\n    // The selected index may have changed between when the component was created and when the\n    // key manager was initialized. Use `updateActiveItem` so it's correct, but it doesn't steal\n    // away focus from the user.\n    this._keyManager.updateActiveItem(this.selectedIndex);\n    (this._dir ? this._dir.change : of()).pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed)).subscribe(direction => this._keyManager?.withHorizontalOrientation(direction));\n    this._keyManager.updateActiveItem(this._selectedIndex);\n    // No need to `takeUntil` here, because we're the ones destroying `steps`.\n    this.steps.changes.subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n    // The logic which asserts that the selected index is within bounds doesn't run before the\n    // steps are initialized, because we don't how many steps there are yet so we may have an\n    // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n    if (!this._isValidIndex(this._selectedIndex)) {\n      this._selectedIndex = 0;\n    }\n    // For linear step and selected index is greater than zero,\n    // set all the previous steps to interacted so that we can navigate to previous steps.\n    if (this.linear && this._selectedIndex > 0) {\n      const visitedSteps = this.steps.toArray().slice(0, this._selectedIndex);\n      for (const step of visitedSteps) {\n        step._markAsInteracted();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this.steps.destroy();\n    this._sortedHeaders.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Selects and focuses the next step in list. */\n  next() {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n  /** Selects and focuses the previous step in list. */\n  previous() {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset() {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i) {\n    return `${this._groupId}-label-${i}`;\n  }\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i) {\n    return `${this._groupId}-content-${i}`;\n  }\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index) {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n    return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) : this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n  _getDefaultIndicatorLogic(step, isCurrentStep) {\n    if (step._showError() && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n  _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n    if (step._showError() && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n  _isCurrentStep(index) {\n    return this._selectedIndex === index;\n  }\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n  _updateSelectedItemIndex(newIndex) {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex]\n    });\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    if (this._keyManager) {\n      this._containsFocus() ? this._keyManager.setActiveItem(newIndex) : this._keyManager.updateActiveItem(newIndex);\n    }\n    this._selectedIndex = newIndex;\n    this.selectedIndexChange.emit(this._selectedIndex);\n    this._stateChanged();\n  }\n  _onKeydown(event) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n    if (manager?.activeItemIndex != null && !hasModifier && (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else {\n      manager?.setFocusOrigin('keyboard').onKeydown(event);\n    }\n  }\n  _anyControlsInvalidOrPending(index) {\n    if (this.linear && index >= 0) {\n      return this.steps.toArray().slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;\n        return isIncomplete && !step.optional && !step._completedOverride;\n      });\n    }\n    return false;\n  }\n  _layoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Checks whether the stepper contains the focused element. */\n  _containsFocus() {\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = _getFocusedElementPierceShadowDom();\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n  /** Checks whether the passed-in index is a valid step index. */\n  _isValidIndex(index) {\n    return index > -1 && (!this.steps || index < this.steps.length);\n  }\n  static ɵfac = function CdkStepper_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepper)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepper,\n    selectors: [[\"\", \"cdkStepper\", \"\"]],\n    contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkStep, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._steps = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n      }\n    },\n    inputs: {\n      linear: [2, \"linear\", \"linear\", booleanAttribute],\n      selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n      selected: \"selected\",\n      orientation: \"orientation\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\",\n      selectedIndexChange: \"selectedIndexChange\"\n    },\n    exportAs: [\"cdkStepper\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepper, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepper]',\n      exportAs: 'cdkStepper'\n    }]\n  }], () => [], {\n    _steps: [{\n      type: ContentChildren,\n      args: [CdkStep, {\n        descendants: true\n      }]\n    }],\n    _stepHeader: [{\n      type: ContentChildren,\n      args: [CdkStepHeader, {\n        descendants: true\n      }]\n    }],\n    linear: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectedIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    selected: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    orientation: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n  _stepper = inject(CdkStepper);\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  type = 'submit';\n  constructor() {}\n  static ɵfac = function CdkStepperNext_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepperNext)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepperNext,\n    selectors: [[\"button\", \"cdkStepperNext\", \"\"]],\n    hostVars: 1,\n    hostBindings: function CdkStepperNext_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() {\n          return ctx._stepper.next();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperNext]',\n      host: {\n        '[type]': 'type',\n        '(click)': '_stepper.next()'\n      }\n    }]\n  }], () => [], {\n    type: [{\n      type: Input\n    }]\n  });\n})();\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n  _stepper = inject(CdkStepper);\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  type = 'button';\n  constructor() {}\n  static ɵfac = function CdkStepperPrevious_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepperPrevious)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepperPrevious,\n    selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]],\n    hostVars: 1,\n    hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() {\n          return ctx._stepper.previous();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperPrevious]',\n      host: {\n        '[type]': 'type',\n        '(click)': '_stepper.previous()'\n      }\n    }]\n  }], () => [], {\n    type: [{\n      type: Input\n    }]\n  });\n})();\nclass CdkStepperModule {\n  static ɵfac = function CdkStepperModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepperModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CdkStepperModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BidiModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n      exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]\n    }]\n  }], null, null);\n})();\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, TemplateRef, ViewContainerRef, ContentChild, NgZone, Renderer2, ANIMATION_MODULE_TYPE, signal, QueryList, EventEmitter, ElementRef, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport { MatIcon, MatIconModule } from './icon.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-BQUT6wsL.mjs';\nimport { M as MatRipple } from './ripple-BT3tzh6F.mjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { switchMap, map, startWith, takeUntil } from 'rxjs/operators';\nimport { E as ErrorStateMatcher } from './error-options-Dm2JJUbF.mjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport { M as MatRippleModule } from './index-SYVYjXwK.mjs';\nimport './icon-registry-B2IMBfNA.mjs';\nimport '@angular/common/http';\nimport '@angular/platform-browser';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\nfunction MatStepHeader_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n  }\n}\nfunction MatStepHeader_Conditional_4_Case_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._getDefaultTextForState(ctx_r0.state));\n  }\n}\nfunction MatStepHeader_Conditional_4_Case_1_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._intl.completedLabel);\n  }\n}\nfunction MatStepHeader_Conditional_4_Case_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._intl.editableLabel);\n  }\n}\nfunction MatStepHeader_Conditional_4_Case_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatStepHeader_Conditional_4_Case_1_Conditional_0_Template, 2, 1, \"span\", 8)(1, MatStepHeader_Conditional_4_Case_1_Conditional_1_Template, 2, 1, \"span\", 8);\n    i0.ɵɵelementStart(2, \"mat-icon\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵconditional(ctx_r0.state === \"done\" ? 0 : ctx_r0.state === \"edit\" ? 1 : -1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0._getDefaultTextForState(ctx_r0.state));\n  }\n}\nfunction MatStepHeader_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatStepHeader_Conditional_4_Case_0_Template, 2, 1, \"span\", 7)(1, MatStepHeader_Conditional_4_Case_1_Template, 4, 2);\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional((tmp_1_0 = ctx_r0.state) === \"number\" ? 0 : 1);\n  }\n}\nfunction MatStepHeader_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementContainer(1, 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template);\n  }\n}\nfunction MatStepHeader_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction MatStepHeader_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._intl.optionalLabel);\n  }\n}\nfunction MatStepHeader_Conditional_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nconst _c0 = [\"*\"];\nfunction MatStep_ng_template_0_ng_template_1_Template(rf, ctx) {}\nfunction MatStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n    i0.ɵɵtemplate(1, MatStep_ng_template_0_ng_template_1_Template, 0, 0, \"ng-template\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"cdkPortalOutlet\", ctx_r0._portal);\n  }\n}\nconst _c1 = [\"animatedContainer\"];\nconst _c2 = (a0, a1) => ({\n  step: a0,\n  i: a1\n});\nfunction MatStepper_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatStepper_Case_1_For_3_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction MatStepper_Case_1_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 6);\n    i0.ɵɵtemplate(1, MatStepper_Case_1_For_3_Conditional_1_Template, 1, 0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const $index_r2 = ctx.$index;\n    const ɵ$index_8_r3 = ctx.$index;\n    const ɵ$count_8_r4 = ctx.$count;\n    i0.ɵɵnextContext(2);\n    const stepTemplate_r5 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", stepTemplate_r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c2, step_r1, $index_r2));\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!(ɵ$index_8_r3 === ɵ$count_8_r4 - 1) ? 1 : -1);\n  }\n}\nfunction MatStepper_Case_1_For_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 1);\n    i0.ɵɵelementContainer(2, 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r6 = ctx.$implicit;\n    const $index_r7 = ctx.$index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(\"mat-horizontal-stepper-content-\" + ctx_r7._getAnimationDirection($index_r7));\n    i0.ɵɵproperty(\"id\", ctx_r7._getStepContentId($index_r7));\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r7._getStepLabelId($index_r7))(\"inert\", ctx_r7.selectedIndex === $index_r7 ? null : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", step_r6.content);\n  }\n}\nfunction MatStepper_Case_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵrepeaterCreate(2, MatStepper_Case_1_For_3_Template, 2, 6, null, null, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵrepeaterCreate(5, MatStepper_Case_1_For_6_Template, 3, 6, \"div\", 5, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx_r7.steps);\n    i0.ɵɵadvance(3);\n    i0.ɵɵrepeater(ctx_r7.steps);\n  }\n}\nfunction MatStepper_Case_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementContainer(1, 6);\n    i0.ɵɵelementStart(2, \"div\", 11, 1)(4, \"div\", 12)(5, \"div\", 13);\n    i0.ɵɵelementContainer(6, 9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const $index_r10 = ctx.$index;\n    const ɵ$index_22_r11 = ctx.$index;\n    const ɵ$count_22_r12 = ctx.$count;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    const stepTemplate_r5 = i0.ɵɵreference(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", stepTemplate_r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c2, step_r9, $index_r10));\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mat-stepper-vertical-line\", !(ɵ$index_22_r11 === ɵ$count_22_r12 - 1))(\"mat-vertical-content-container-active\", ctx_r7.selectedIndex === $index_r10);\n    i0.ɵɵattribute(\"inert\", ctx_r7.selectedIndex === $index_r10 ? null : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", ctx_r7._getStepContentId($index_r10));\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r7._getStepLabelId($index_r10));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n  }\n}\nfunction MatStepper_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, MatStepper_Case_2_For_1_Template, 7, 13, \"div\", 10, i0.ɵɵrepeaterTrackByIdentity);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵrepeater(ctx_r7.steps);\n  }\n}\nfunction MatStepper_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-step-header\", 14);\n    i0.ɵɵlistener(\"click\", function MatStepper_ng_template_3_Template_mat_step_header_click_0_listener() {\n      const step_r14 = i0.ɵɵrestoreView(_r13).step;\n      return i0.ɵɵresetView(step_r14.select());\n    })(\"keydown\", function MatStepper_ng_template_3_Template_mat_step_header_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7._onKeydown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r14 = ctx.step;\n    const i_r15 = ctx.i;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-horizontal-stepper-header\", ctx_r7.orientation === \"horizontal\")(\"mat-vertical-stepper-header\", ctx_r7.orientation === \"vertical\");\n    i0.ɵɵproperty(\"tabIndex\", ctx_r7._getFocusIndex() === i_r15 ? 0 : -1)(\"id\", ctx_r7._getStepLabelId(i_r15))(\"index\", i_r15)(\"state\", ctx_r7._getIndicatorType(i_r15, step_r14.state))(\"label\", step_r14.stepLabel || step_r14.label)(\"selected\", ctx_r7.selectedIndex === i_r15)(\"active\", ctx_r7._stepIsNavigable(i_r15, step_r14))(\"optional\", step_r14.optional)(\"errorMessage\", step_r14.errorMessage)(\"iconOverrides\", ctx_r7._iconOverrides)(\"disableRipple\", ctx_r7.disableRipple || !ctx_r7._stepIsNavigable(i_r15, step_r14))(\"color\", step_r14.color || ctx_r7.color);\n    i0.ɵɵattribute(\"aria-posinset\", i_r15 + 1)(\"aria-setsize\", ctx_r7.steps.length)(\"aria-controls\", ctx_r7._getStepContentId(i_r15))(\"aria-selected\", ctx_r7.selectedIndex == i_r15)(\"aria-label\", step_r14.ariaLabel || null)(\"aria-labelledby\", !step_r14.ariaLabel && step_r14.ariaLabelledby ? step_r14.ariaLabelledby : null)(\"aria-disabled\", ctx_r7._stepIsNavigable(i_r15, step_r14) ? null : true);\n  }\n}\nclass MatStepLabel extends CdkStepLabel {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStepLabel_BaseFactory;\n    return function MatStepLabel_Factory(__ngFactoryType__) {\n      return (ɵMatStepLabel_BaseFactory || (ɵMatStepLabel_BaseFactory = i0.ɵɵgetInheritedFactory(MatStepLabel)))(__ngFactoryType__ || MatStepLabel);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepLabel,\n    selectors: [[\"\", \"matStepLabel\", \"\"]],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[matStepLabel]'\n    }]\n  }], null, null);\n})();\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes = new Subject();\n  /** Label that is rendered below optional steps. */\n  optionalLabel = 'Optional';\n  /** Label that is used to indicate step as completed to screen readers. */\n  completedLabel = 'Completed';\n  /** Label that is used to indicate step as editable to screen readers. */\n  editableLabel = 'Editable';\n  static ɵfac = function MatStepperIntl_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepperIntl)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatStepperIntl,\n    factory: MatStepperIntl.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\nclass MatStepHeader extends CdkStepHeader {\n  _intl = inject(MatStepperIntl);\n  _focusMonitor = inject(FocusMonitor);\n  _intlSubscription;\n  /** State of the given step. */\n  state;\n  /** Label of the given step. */\n  label;\n  /** Error message to display when there's an error. */\n  errorMessage;\n  /** Overrides for the header icons, passed in via the stepper. */\n  iconOverrides;\n  /** Index of the given step. */\n  index;\n  /** Whether the given step is selected. */\n  selected;\n  /** Whether the given step label is active. */\n  active;\n  /** Whether the given step is optional. */\n  optional;\n  /** Whether the ripple should be disabled. */\n  disableRipple;\n  /**\n   * Theme color of the step header. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  constructor() {\n    super();\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_StructuralStylesLoader);\n    styleLoader.load(_VisuallyHiddenLoader);\n    const changeDetectorRef = inject(ChangeDetectorRef);\n    this._intlSubscription = this._intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n  /** Focuses the step header. */\n  focus(origin, options) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._elementRef, origin, options);\n    } else {\n      this._elementRef.nativeElement.focus(options);\n    }\n  }\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel() {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel() {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext() {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n  _getDefaultTextForState(state) {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n  static ɵfac = function MatStepHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepHeader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatStepHeader,\n    selectors: [[\"mat-step-header\"]],\n    hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\"],\n    hostVars: 2,\n    hostBindings: function MatStepHeader_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n      }\n    },\n    inputs: {\n      state: \"state\",\n      label: \"label\",\n      errorMessage: \"errorMessage\",\n      iconOverrides: \"iconOverrides\",\n      index: \"index\",\n      selected: \"selected\",\n      active: \"active\",\n      optional: \"optional\",\n      disableRipple: \"disableRipple\",\n      color: \"color\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 10,\n    vars: 17,\n    consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"mat-step-label\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"], [\"aria-hidden\", \"true\"], [1, \"cdk-visually-hidden\"], [3, \"ngTemplateOutlet\"]],\n    template: function MatStepHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\")(2, \"div\", 1);\n        i0.ɵɵtemplate(3, MatStepHeader_Conditional_3_Template, 1, 2, \"ng-container\", 2)(4, MatStepHeader_Conditional_4_Template, 2, 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, MatStepHeader_Conditional_6_Template, 2, 1, \"div\", 4)(7, MatStepHeader_Conditional_7_Template, 2, 1, \"div\", 4)(8, MatStepHeader_Conditional_8_Template, 2, 1, \"div\", 5)(9, MatStepHeader_Conditional_9_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let tmp_8_0;\n        i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        i0.ɵɵadvance();\n        i0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        i0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.iconOverrides && ctx.iconOverrides[ctx.state] ? 3 : 4);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        i0.ɵɵadvance();\n        i0.ɵɵconditional((tmp_8_0 = ctx._templateLabel()) ? 6 : ctx._stringLabel() ? 7 : -1, tmp_8_0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.optional && ctx.state != \"error\" ? 8 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.state === \"error\" ? 9 : -1);\n      }\n    },\n    dependencies: [MatRipple, NgTemplateOutlet, MatIcon],\n    styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-sys-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-sys-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}@media(forced-colors: active){.mat-step-header{outline:solid 1px}.mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-header[aria-disabled=true]{outline-color:GrayText}.mat-step-header[aria-disabled=true] .mat-step-label,.mat-step-header[aria-disabled=true] .mat-step-icon,.mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-sys-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-sys-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color, transparent);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-sys-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-sys-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-sys-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-sys-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-sys-on-primary))}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-step-header',\n      host: {\n        'class': 'mat-step-header',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        'role': 'tab'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatRipple, NgTemplateOutlet, MatIcon],\n      template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\",\n      styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-sys-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-sys-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}@media(forced-colors: active){.mat-step-header{outline:solid 1px}.mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-header[aria-disabled=true]{outline-color:GrayText}.mat-step-header[aria-disabled=true] .mat-step-label,.mat-step-header[aria-disabled=true] .mat-step-icon,.mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-sys-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-sys-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color, transparent);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-sys-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-sys-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-sys-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-sys-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-sys-on-primary))}\\n\"]\n    }]\n  }], () => [], {\n    state: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    iconOverrides: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    optional: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n  templateRef = inject(TemplateRef);\n  /** Name of the icon to be overridden. */\n  name;\n  constructor() {}\n  static ɵfac = function MatStepperIcon_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepperIcon)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepperIcon,\n    selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]],\n    inputs: {\n      name: [0, \"matStepperIcon\", \"name\"]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matStepperIcon]'\n    }]\n  }], () => [], {\n    name: [{\n      type: Input,\n      args: ['matStepperIcon']\n    }]\n  });\n})();\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n  _template = inject(TemplateRef);\n  constructor() {}\n  static ɵfac = function MatStepContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepContent,\n    selectors: [[\"ng-template\", \"matStepContent\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matStepContent]'\n    }]\n  }], () => [], null);\n})();\nclass MatStep extends CdkStep {\n  _errorStateMatcher = inject(ErrorStateMatcher, {\n    skipSelf: true\n  });\n  _viewContainerRef = inject(ViewContainerRef);\n  _isSelected = Subscription.EMPTY;\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  // We need an initializer here to avoid a TS error.\n  stepLabel = undefined;\n  /**\n   * Theme color for the particular step. This API is supported in M2 themes\n   * only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Content that will be rendered lazily. */\n  _lazyContent;\n  /** Currently-attached portal containing the lazy content. */\n  _portal;\n  ngAfterContentInit() {\n    this._isSelected = this._stepper.steps.changes.pipe(switchMap(() => {\n      return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n    })).subscribe(isSelected => {\n      if (isSelected && this._lazyContent && !this._portal) {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._isSelected.unsubscribe();\n  }\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control, form) {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n    return originalErrorState || customErrorState;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStep_BaseFactory;\n    return function MatStep_Factory(__ngFactoryType__) {\n      return (ɵMatStep_BaseFactory || (ɵMatStep_BaseFactory = i0.ɵɵgetInheritedFactory(MatStep)))(__ngFactoryType__ || MatStep);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatStep,\n    selectors: [[\"mat-step\"]],\n    contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatStepLabel, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatStepContent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n      }\n    },\n    hostAttrs: [\"hidden\", \"\"],\n    inputs: {\n      color: \"color\"\n    },\n    exportAs: [\"matStep\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: ErrorStateMatcher,\n      useExisting: MatStep\n    }, {\n      provide: CdkStep,\n      useExisting: MatStep\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    consts: [[3, \"cdkPortalOutlet\"]],\n    template: function MatStep_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 2, 1, \"ng-template\");\n      }\n    },\n    dependencies: [CdkPortalOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStep, [{\n    type: Component,\n    args: [{\n      selector: 'mat-step',\n      providers: [{\n        provide: ErrorStateMatcher,\n        useExisting: MatStep\n      }, {\n        provide: CdkStep,\n        useExisting: MatStep\n      }],\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matStep',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [CdkPortalOutlet],\n      host: {\n        'hidden': '' // Hide the steps so they don't affect the layout.\n      },\n      template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\"\n    }]\n  }], null, {\n    stepLabel: [{\n      type: ContentChild,\n      args: [MatStepLabel]\n    }],\n    color: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatStepContent, {\n        static: false\n      }]\n    }]\n  });\n})();\nclass MatStepper extends CdkStepper {\n  _ngZone = inject(NgZone);\n  _renderer = inject(Renderer2);\n  _animationsModule = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _cleanupTransition;\n  _isAnimating = signal(false);\n  /** The list of step headers of the steps in the stepper. */\n  _stepHeader = undefined;\n  /** Elements hosting the step animations. */\n  _animatedContainers;\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  _steps = undefined;\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  steps = new QueryList();\n  /** Custom icon overrides passed in by the consumer. */\n  _icons;\n  /** Event emitted when the current step is done transitioning in. */\n  animationDone = new EventEmitter();\n  /** Whether ripples should be disabled for the step headers. */\n  disableRipple;\n  /**\n   * Theme color for all of the steps in stepper. This API is supported in M2\n   * themes only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /**\n   * Whether the label should display in bottom or end position.\n   * Only applies in the `horizontal` orientation.\n   */\n  labelPosition = 'end';\n  /**\n   * Position of the stepper's header.\n   * Only applies in the `horizontal` orientation.\n   */\n  headerPosition = 'top';\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides = {};\n  /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  _animationDuration = '';\n  /** Whether the stepper is rendering on the server. */\n  _isServer = !inject(Platform).isBrowser;\n  constructor() {\n    super();\n    const elementRef = inject(ElementRef);\n    const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n    this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n  }\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n    this._icons.forEach(({\n      name,\n      templateRef\n    }) => this._iconOverrides[name] = templateRef);\n    // Mark the component for change detection whenever the content children query changes\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n    // Transition events won't fire if animations are disabled so we simulate them.\n    this.selectedIndexChange.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      const duration = this._getAnimationDuration();\n      if (duration === '0ms' || duration === '0s') {\n        this._onAnimationDone();\n      } else {\n        this._isAnimating.set(true);\n      }\n    });\n    this._ngZone.runOutsideAngular(() => {\n      if (this._animationsModule !== 'NoopAnimations') {\n        setTimeout(() => {\n          // Delay enabling the animations so we don't animate the initial state.\n          this._elementRef.nativeElement.classList.add('mat-stepper-animations-enabled');\n          // Bind this outside the zone since it fires for all transitions inside the stepper.\n          this._cleanupTransition = this._renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionend);\n        }, 200);\n      }\n    });\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // Prior to #30314 the stepper had animation `done` events bound to each animated container.\n    // The animations module was firing them on initialization and for each subsequent animation.\n    // Since the events were bound in the template, it had the unintended side-effect of triggering\n    // change detection as well. It appears that this side-effect ended up being load-bearing,\n    // because it was ensuring that the content elements (e.g. `matStepLabel`) that are defined\n    // in sub-components actually get picked up in a timely fashion. This subscription simulates\n    // the same change detection by using `queueMicrotask` similarly to the animations module.\n    if (typeof queueMicrotask === 'function') {\n      let hasEmittedInitial = false;\n      this._animatedContainers.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => queueMicrotask(() => {\n        // Simulate the initial `animationDone` event\n        // that gets emitted by the animations module.\n        if (!hasEmittedInitial) {\n          hasEmittedInitial = true;\n          this.animationDone.emit();\n        }\n        this._stateChanged();\n      }));\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._cleanupTransition?.();\n  }\n  _stepIsNavigable(index, step) {\n    return step.completed || this.selectedIndex === index || !this.linear;\n  }\n  _getAnimationDuration() {\n    if (this._animationsModule === 'NoopAnimations') {\n      return '0ms';\n    }\n    if (this.animationDuration) {\n      return this.animationDuration;\n    }\n    return this.orientation === 'horizontal' ? '500ms' : '225ms';\n  }\n  _handleTransitionend = event => {\n    const target = event.target;\n    if (!target) {\n      return;\n    }\n    // Because we bind a single `transitionend` handler on the host node and because transition\n    // events bubble, we have to filter down to only the active step so don't emit events too\n    // often. We check the orientation and `property` name first to reduce the amount of times\n    // we need to check the DOM.\n    const isHorizontalActiveElement = this.orientation === 'horizontal' && event.propertyName === 'transform' && target.classList.contains('mat-horizontal-stepper-content-current');\n    const isVerticalActiveElement = this.orientation === 'vertical' && event.propertyName === 'grid-template-rows' && target.classList.contains('mat-vertical-content-container-active');\n    // Finally we need to ensure that the animated element is a direct descendant,\n    // rather than one coming from a nested stepper.\n    const shouldEmit = (isHorizontalActiveElement || isVerticalActiveElement) && this._animatedContainers.find(ref => ref.nativeElement === target);\n    if (shouldEmit) {\n      this._onAnimationDone();\n    }\n  };\n  _onAnimationDone() {\n    this._isAnimating.set(false);\n    this.animationDone.emit();\n  }\n  static ɵfac = function MatStepper_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepper)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatStepper,\n    selectors: [[\"mat-stepper\"], [\"mat-vertical-stepper\"], [\"mat-horizontal-stepper\"], [\"\", \"matStepper\", \"\"]],\n    contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatStep, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatStepperIcon, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._steps = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._icons = _t);\n      }\n    },\n    viewQuery: function MatStepper_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatStepHeader, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._animatedContainers = _t);\n      }\n    },\n    hostAttrs: [\"role\", \"tablist\"],\n    hostVars: 15,\n    hostBindings: function MatStepper_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-orientation\", ctx.orientation);\n        i0.ɵɵstyleProp(\"--mat-stepper-animation-duration\", ctx._getAnimationDuration());\n        i0.ɵɵclassProp(\"mat-stepper-horizontal\", ctx.orientation === \"horizontal\")(\"mat-stepper-vertical\", ctx.orientation === \"vertical\")(\"mat-stepper-label-position-end\", ctx.orientation === \"horizontal\" && ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.orientation === \"horizontal\" && ctx.labelPosition == \"bottom\")(\"mat-stepper-header-position-bottom\", ctx.headerPosition === \"bottom\")(\"mat-stepper-animating\", ctx._isAnimating());\n      }\n    },\n    inputs: {\n      disableRipple: \"disableRipple\",\n      color: \"color\",\n      labelPosition: \"labelPosition\",\n      headerPosition: \"headerPosition\",\n      animationDuration: \"animationDuration\"\n    },\n    outputs: {\n      animationDone: \"animationDone\"\n    },\n    exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkStepper,\n      useExisting: MatStepper\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 2,\n    consts: [[\"stepTemplate\", \"\"], [\"animatedContainer\", \"\"], [1, \"mat-horizontal-stepper-wrapper\"], [1, \"mat-horizontal-stepper-header-container\"], [1, \"mat-horizontal-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\", \"class\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"click\", \"keydown\", \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"color\"]],\n    template: function MatStepper_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatStepper_Conditional_0_Template, 1, 0)(1, MatStepper_Case_1_Template, 7, 0, \"div\", 2)(2, MatStepper_Case_2_Template, 2, 0)(3, MatStepper_ng_template_3_Template, 1, 23, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        i0.ɵɵconditional(ctx._isServer ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional((tmp_2_0 = ctx.orientation) === \"horizontal\" ? 1 : tmp_2_0 === \"vertical\" ? 2 : -1);\n      }\n    },\n    dependencies: [NgTemplateOutlet, MatStepHeader],\n    styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-sys-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-sys-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height, 72px)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{visibility:hidden;overflow:hidden;outline:0;height:0}.mat-stepper-animations-enabled .mat-horizontal-stepper-content{transition:transform var(--mat-stepper-animation-duration, 0) cubic-bezier(0.35, 0, 0.25, 1)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-previous{transform:translate3d(-100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-next{transform:translate3d(100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{visibility:visible;transform:none;height:auto}.mat-stepper-horizontal:not(.mat-stepper-animating) .mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{overflow:visible}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}@media(forced-colors: active){.mat-horizontal-content-container{outline:solid 1px}}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{display:grid;grid-template-rows:0fr;grid-template-columns:100%;margin-left:36px;border:0;position:relative}.mat-stepper-animations-enabled .mat-vertical-content-container{transition:grid-template-rows var(--mat-stepper-animation-duration, 0) cubic-bezier(0.4, 0, 0.2, 1)}.mat-vertical-content-container.mat-vertical-content-container-active{grid-template-rows:1fr}.mat-step:last-child .mat-vertical-content-container{border:none}@media(forced-colors: active){.mat-vertical-content-container{outline:solid 1px}}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}@supports not (grid-template-rows: 0fr){.mat-vertical-content-container{height:0}.mat-vertical-content-container.mat-vertical-content-container-active{height:auto}}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-sys-outline));top:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0;visibility:hidden}.mat-stepper-animations-enabled .mat-vertical-stepper-content{transition:visibility var(--mat-stepper-animation-duration, 0) linear}.mat-vertical-content-container-active>.mat-vertical-stepper-content{visibility:visible}.mat-vertical-content{padding:0 24px 24px 24px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepper, [{\n    type: Component,\n    args: [{\n      selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]',\n      exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper',\n      host: {\n        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n        '[class.mat-stepper-animating]': '_isAnimating()',\n        '[style.--mat-stepper-animation-duration]': '_getAnimationDuration()',\n        '[attr.aria-orientation]': 'orientation',\n        'role': 'tablist'\n      },\n      providers: [{\n        provide: CdkStepper,\n        useExisting: MatStepper\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [NgTemplateOutlet, MatStepHeader],\n      template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step, i: $index}\\\"/>\\n          @if (!$last) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step) {\\n          <div\\n            #animatedContainer\\n            class=\\\"mat-horizontal-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\"\\n            [class]=\\\"'mat-horizontal-stepper-content-' + _getAnimationDirection($index)\\\"\\n            [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step, i: $index}\\\"/>\\n        <div\\n          #animatedContainer\\n          class=\\\"mat-vertical-content-container\\\"\\n          [class.mat-stepper-vertical-line]=\\\"!$last\\\"\\n          [class.mat-vertical-content-container-active]=\\\"selectedIndex === $index\\\"\\n          [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"/>\\n</ng-template>\\n\",\n      styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-sys-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-sys-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height, 72px)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{visibility:hidden;overflow:hidden;outline:0;height:0}.mat-stepper-animations-enabled .mat-horizontal-stepper-content{transition:transform var(--mat-stepper-animation-duration, 0) cubic-bezier(0.35, 0, 0.25, 1)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-previous{transform:translate3d(-100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-next{transform:translate3d(100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{visibility:visible;transform:none;height:auto}.mat-stepper-horizontal:not(.mat-stepper-animating) .mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{overflow:visible}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}@media(forced-colors: active){.mat-horizontal-content-container{outline:solid 1px}}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{display:grid;grid-template-rows:0fr;grid-template-columns:100%;margin-left:36px;border:0;position:relative}.mat-stepper-animations-enabled .mat-vertical-content-container{transition:grid-template-rows var(--mat-stepper-animation-duration, 0) cubic-bezier(0.4, 0, 0.2, 1)}.mat-vertical-content-container.mat-vertical-content-container-active{grid-template-rows:1fr}.mat-step:last-child .mat-vertical-content-container{border:none}@media(forced-colors: active){.mat-vertical-content-container{outline:solid 1px}}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}@supports not (grid-template-rows: 0fr){.mat-vertical-content-container{height:0}.mat-vertical-content-container.mat-vertical-content-container-active{height:auto}}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-sys-outline));top:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0;visibility:hidden}.mat-stepper-animations-enabled .mat-vertical-stepper-content{transition:visibility var(--mat-stepper-animation-duration, 0) linear}.mat-vertical-content-container-active>.mat-vertical-stepper-content{visibility:visible}.mat-vertical-content{padding:0 24px 24px 24px}\\n\"]\n    }]\n  }], () => [], {\n    _stepHeader: [{\n      type: ViewChildren,\n      args: [MatStepHeader]\n    }],\n    _animatedContainers: [{\n      type: ViewChildren,\n      args: ['animatedContainer']\n    }],\n    _steps: [{\n      type: ContentChildren,\n      args: [MatStep, {\n        descendants: true\n      }]\n    }],\n    _icons: [{\n      type: ContentChildren,\n      args: [MatStepperIcon, {\n        descendants: true\n      }]\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStepperNext_BaseFactory;\n    return function MatStepperNext_Factory(__ngFactoryType__) {\n      return (ɵMatStepperNext_BaseFactory || (ɵMatStepperNext_BaseFactory = i0.ɵɵgetInheritedFactory(MatStepperNext)))(__ngFactoryType__ || MatStepperNext);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepperNext,\n    selectors: [[\"button\", \"matStepperNext\", \"\"]],\n    hostAttrs: [1, \"mat-stepper-next\"],\n    hostVars: 1,\n    hostBindings: function MatStepperNext_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[matStepperNext]',\n      host: {\n        'class': 'mat-stepper-next',\n        '[type]': 'type'\n      }\n    }]\n  }], null, null);\n})();\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStepperPrevious_BaseFactory;\n    return function MatStepperPrevious_Factory(__ngFactoryType__) {\n      return (ɵMatStepperPrevious_BaseFactory || (ɵMatStepperPrevious_BaseFactory = i0.ɵɵgetInheritedFactory(MatStepperPrevious)))(__ngFactoryType__ || MatStepperPrevious);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepperPrevious,\n    selectors: [[\"button\", \"matStepperPrevious\", \"\"]],\n    hostAttrs: [1, \"mat-stepper-previous\"],\n    hostVars: 1,\n    hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[matStepperPrevious]',\n      host: {\n        'class': 'mat-stepper-previous',\n        '[type]': 'type'\n      }\n    }]\n  }], null, null);\n})();\nclass MatStepperModule {\n  static ɵfac = function MatStepperModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepperModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatStepperModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n    imports: [MatCommonModule, PortalModule, CdkStepperModule, MatIconModule, MatRippleModule, MatStepper, MatStepHeader, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PortalModule, CdkStepperModule, MatIconModule, MatRippleModule, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon, MatStepContent],\n      exports: [MatCommonModule, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon, MatStepContent],\n      providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matStepperAnimations = {\n  // Represents:\n  // trigger('horizontalStepTransition', [\n  //   state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n  //   // Transition to `inherit`, rather than `visible`,\n  //   // because visibility on a child element the one from the parent,\n  //   // making this element focusable inside of a `hidden` element.\n  //   state('current', style({transform: 'none', visibility: 'inherit'})),\n  //   state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n  //   transition(\n  //     '* => *',\n  //     group([\n  //       animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //       query('@*', animateChild(), {optional: true}),\n  //     ]),\n  //     {\n  //       params: {animationDuration: '500ms'},\n  //     },\n  //   ),\n  // ])\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: {\n    type: 7,\n    name: 'horizontalStepTransition',\n    definitions: [{\n      type: 0,\n      name: 'previous',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(-100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'current',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'inherit'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'next',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: '* => *',\n      animation: {\n        type: 3,\n        steps: [{\n          type: 4,\n          styles: null,\n          timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n        }, {\n          type: 11,\n          selector: '@*',\n          animation: {\n            type: 9,\n            options: null\n          },\n          options: {\n            optional: true\n          }\n        }],\n        options: null\n      },\n      options: {\n        params: {\n          animationDuration: '500ms'\n        }\n      }\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('verticalStepTransition', [\n  //   state('previous', style({height: '0px', visibility: 'hidden'})),\n  //   state('next', style({height: '0px', visibility: 'hidden'})),\n  //   // Transition to `inherit`, rather than `visible`,\n  //   // because visibility on a child element the one from the parent,\n  //   // making this element focusable inside of a `hidden` element.\n  //   state('current', style({height: '*', visibility: 'inherit'})),\n  //   transition(\n  //     '* <=> current',\n  //     group([\n  //       animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'),\n  //       query('@*', animateChild(), {optional: true}),\n  //     ]),\n  //     {\n  //       params: {animationDuration: '225ms'},\n  //     },\n  //   ),\n  // ])\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: {\n    type: 7,\n    name: 'verticalStepTransition',\n    definitions: [{\n      type: 0,\n      name: 'previous',\n      styles: {\n        type: 6,\n        styles: {\n          'height': '0px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'next',\n      styles: {\n        type: 6,\n        styles: {\n          'height': '0px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'current',\n      styles: {\n        type: 6,\n        styles: {\n          'height': '*',\n          visibility: 'inherit'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: '* <=> current',\n      animation: {\n        type: 3,\n        steps: [{\n          type: 4,\n          styles: null,\n          timings: '{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'\n        }, {\n          type: 11,\n          selector: '@*',\n          animation: {\n            type: 9,\n            options: null\n          },\n          options: {\n            optional: true\n          }\n        }],\n        options: null\n      },\n      options: {\n        params: {\n          animationDuration: '225ms'\n        }\n      }\n    }],\n    options: {}\n  }\n};\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { Component, OnInit } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IconType } from '@core/enums';\nimport { IconService } from '@core/services/icon.service';\nimport { ViewportService } from '@core/services/viewport.service';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { ButtonType } from '@shared/components/button/button.component';\nimport { ButtonModule } from '@shared/components/button/button.module';\nimport { SharedModule } from '@shared/shared.module';\n\n@Component({\n    imports: [SharedModule, MatDialogModule, MatButtonModule, MatIconModule, ButtonModule],\n    selector: 'findqo-place-ad-exit-dialog',\n    templateUrl: './place-ad-exit-dialog.component.html',\n    styleUrls: ['./place-ad-exit-dialog.component.scss']\n})\nexport class PlaceAdExitDialogComponent implements OnInit {\n\tconstructor(\n\t\tpublic viewport: ViewportService,\n\t\tpublic icon: IconService,\n\t\tpublic dialogRef: MatDialogRef<PlaceAdExitDialogComponent>,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate placeAdService: PlaceAdService\n\t) {}\n\n\treadonly iconType = IconType;\n\treadonly buttonType = ButtonType;\n\n\tisDraft = false;\n\n\tonExitPlaceAd(): void {\n\t\tthis.dialogRef.close(true);\n\t\tthis.placeAdFacade.setIsCompletAdSubmitted(false);\n\t\tthis.placeAdService.isRentResidentialStandSelected = false;\n\t\tthis.placeAdFacade.onAdStandChange('');\n\t}\n\n\tonKeepEditing(): void {\n\t\tthis.dialogRef.close(false);\n\t}\n\n\tonClose(): void {\n\t\tthis.dialogRef.close(false);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.isDraft = !!this.placeAdFacade.getAdId();\n\t}\n}\n","<div class=\"container p-0\">\n\t<div class=\"row mx-0 px-3 justify-content-between align-items-center dialog-header\">\n\t\t<div class=\"col-auto px-0\">\n\t\t\t<h4 class=\"heading-4-regular fg-general-5 m-0\">{{ 'n3044' | translations }}</h4>\n\t\t</div>\n\t\t<div class=\"col-auto px-0\">\n\t\t\t<button mat-icon-button mat-dialog-close class=\"close-btn\" (click)=\"onClose()\">\n\t\t\t\t<mat-icon svgIcon=\"close-2\" class=\"justify-content-center\"></mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<div class=\"p-3\">\n\t\t<p class=\"text-body-regular fg-general-4 mb-3\">\n\t\t\t{{ isDraft ? ('n3088' | translations) : ('n3120' | translations) }}\n\t\t</p>\n\n\t\t<p class=\"text-body-regular fg-general-4\">\n\t\t\t{{ isDraft ? ('n3122' | translations) : ('n3121' | translations) }}\n\t\t</p>\n\t</div>\n\n\t<div class=\"row mx-0 gap-3 p-3 dialog-actions\">\n\t\t<div class=\"col px-0\">\n\t\t\t<findqo-button\n\t\t\t\t[btnType]=\"buttonType.STROKED\"\n\t\t\t\t[label]=\"'n3064' | translations\"\n\t\t\t\t[isStopPropagation]=\"true\"\n\t\t\t\t[btnClass]=\"'text-body-regular w-100'\"\n\t\t\t\t(clicked)=\"onKeepEditing()\"\n\t\t\t></findqo-button>\n\t\t</div>\n\t\t<div class=\"col px-0\">\n\t\t\t<findqo-button\n\t\t\t\t[btnType]=\"buttonType.FILLED\"\n\t\t\t\t[label]=\"'n3089' | translations\"\n\t\t\t\t[isStopPropagation]=\"true\"\n\t\t\t\t[btnClass]=\"'text-body-regular w-100'\"\n\t\t\t\t(clicked)=\"onExitPlaceAd()\"\n\t\t\t></findqo-button>\n\t\t</div>\n\t</div>\n</div>\n","import { Component } from '@angular/core';\nimport { APP_ROUTE } from '@core/constants';\nimport { AuthService } from '@core/data-access/services/auth.service';\n\n@Component({\n    selector: 'findqo-invalid-subscription-dialog',\n    templateUrl: './invalid-subscription-dialog.component.html',\n    styleUrl: './invalid-subscription-dialog.component.scss',\n    standalone: false\n})\nexport class InvalidSubscriptionDialogComponent {\n\tconstructor(private readonly auth: AuthService) {}\n\n\treadonly appRoute = APP_ROUTE;\n\n\tisAgent = this.auth.user()?.roles.some((role) => role === 'isAgentUser');\n}\n","<div class=\"container p-0\">\n\t<div class=\"row mx-0 px-3 justify-content-between align-items-center dialog-header\">\n\t\t<div class=\"col-auto px-0\">\n\t\t\t<h4 class=\"heading-4-regular fg-general-5 m-0\">{{ 'n4091' | translations }}</h4>\n\t\t</div>\n\n\t\t<div class=\"col-auto px-0\">\n\t\t\t<button mat-icon-button mat-dialog-close class=\"close-btn\">\n\t\t\t\t<mat-icon class=\"justify-content-center fg-general-4 mx-auto fs-20px\">close</mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<div class=\"p-3\">\n\t\t<h4 class=\"heading-4-medium fg-general-5\">You are not subscribed to any plans</h4>\n\t\t<p class=\"mt-2 text-paragraph-regular fg-general-5\">To continue posting ads, click on the button below to subscribe to one of our plans.</p>\n\t</div>\n\n\t<div class=\"p-3 border-top\">\n\t\t<button mat-flat-button mat-dialog-close color=\"primary\" class=\"w-100\" [routerLink]=\"isAgent ? appRoute.pricing : '/dashboard/business'\">\n\t\t\tSubscribe to a plan\n\t\t</button>\n\t</div>\n</div>\n","import { AfterViewInit, Component } from '@angular/core';\nimport { distinctUntilChanged, Observable, of, switchMap, takeUntil } from 'rxjs';\nimport { MatCheckbox } from '@angular/material/checkbox';\n\nimport { PlaceAdFieldsSections } from '@core/models';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { DestroyService } from '@shared/services/destroy.service';\nimport { PlaceAdDataStatus, PlaceAdTabIndex, PlaceAdType } from '@core/enums';\n\n@Component({\n    selector: 'findqo-place-ad-amenities',\n    templateUrl: './place-ad-amenities.component.html',\n    styleUrls: ['./place-ad-amenities.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdAmenitiesComponent implements AfterViewInit {\n\tconstructor(\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate destroy: DestroyService\n\t) {}\n\n\tfields$: Observable<PlaceAdFieldsSections>;\n\textras = [];\n\textrasUpdatedStatus: PlaceAdDataStatus = PlaceAdDataStatus?.NOT_CREATED; //   to handle data update from tab switch after data submitted once\n\n\tupdateExtrasValue(event: MatCheckbox, fromCheckBox: boolean): void {\n\t\tif (!fromCheckBox) {\n\t\t\tevent.checked = !event.checked;\n\t\t}\n\n\t\tif (event.checked) {\n\t\t\tthis.extras.push(+event?.value);\n\t\t} else {\n\t\t\tconst INDEX1 = this.extras.findIndex((x) => x === +event.value);\n\t\t\tif (INDEX1 !== -1) {\n\t\t\t\tthis.extras.splice(INDEX1, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (this.extrasUpdatedStatus === PlaceAdDataStatus?.UPDATED) {\n\t\t\tthis.extrasUpdatedStatus = PlaceAdDataStatus?.UPDATED_AGAIN;\n\t\t}\n\t}\n\n\tasync onNext(): Promise<boolean> {\n\t\ttry {\n\t\t\tif (this.extrasUpdatedStatus !== PlaceAdDataStatus?.UPDATED) {\n\t\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.PROPERTY_EXTRAS, this.extras);\n\t\t\t\tthis.extrasUpdatedStatus = PlaceAdDataStatus?.UPDATED;\n\n\t\t\t\t// await this.placeAdFacade.updateAd(PlaceAdTabIndex.TAB_4).then(() => {\n\t\t\t\t// \tthis.extrasUpdatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t\t// });\n\t\t\t} else {\n\t\t\t\tthis.placeAdService.directTabIndexUpdate(PlaceAdTabIndex.TAB_4);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//to check and uncheck checkbox dynamically\n\tcanbeChecked(i: number): boolean {\n\t\treturn this.extras.includes(i);\n\t}\n\n\t//to fetch filter data and patch edit data if any\n\tfetchFilterData(): void {\n\t\tthis.placeAdFacade.isFetchedFilterData$\n\t\t\t.pipe(\n\t\t\t\tswitchMap((data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tthis.fields$ = this.placeAdFacade.placeAdControls$;\n\t\t\t\t\t\treturn this.placeAdFacade.getEditAdData$();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\ttakeUntil(this.destroy)\n\t\t\t)\n\t\t\t.subscribe((editData) => {\n\t\t\t\tif (editData?.propertyExtras?.length > 0) {\n\t\t\t\t\teditData?.propertyExtras.forEach((data: any) => {\n\t\t\t\t\t\tthis.extras.push(+data?.id);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.PROPERTY_EXTRAS, this.extras);\n\t\t\t\t\tthis.extrasUpdatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t//reset amenities value on stand change\n\tprivate resetAmenities(): void {\n\t\tthis.placeAdFacade.adStand$.pipe(takeUntil(this.destroy), distinctUntilChanged()).subscribe((stand) => {\n\t\t\tif (stand) {\n\t\t\t\tthis.extras = [];\n\t\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.PROPERTY_EXTRAS, this.extras);\n\t\t\t}\n\t\t});\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.resetAmenities();\n\t\tthis.fetchFilterData();\n\t}\n}\n","<div *ngIf=\"fields$ | async as field\">\n\t<h3 class=\"lh-24px heading-3\">{{ 'n3027' | translations }}</h3>\n\n\t<p class=\"fg-general-4 mb-4 fs-12px lh-16px fw-400 mt-2 mb-4\">\n\t\t{{ 'n3028' | translations }}\n\t</p>\n\n\t<div class=\"row mx-0 justify-content-between align-items-center row-cols-2\">\n\t\t<div class=\"col checkbox-list pb-3\" *ngFor=\"let value of field?.amenities[0]?.values; let i = index\">\n\t\t\t<a\n\t\t\t\tclass=\"d-flex justify-content-between align-items-center checkbox-item py-3 px-2 p-sm-3 fg-general-4\"\n\t\t\t\t(click)=\"updateExtrasValue(checkBox, false)\"\n\t\t\t\t[class.checked-extras]=\"checkBox.checked\"\n\t\t\t>\n\t\t\t\t<span class=\"fs-12px fs-sm-14px fw-400 lh-16px lh-sm-18px\" [class.fg-info-3]=\"checkBox.checked\">{{ value?.name }}</span>\n\n\t\t\t\t<mat-checkbox\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t[value]=\"value?.id\"\n\t\t\t\t\tclass=\"fs-14px fs-sm-16px fw-400 lh-22px fg-general-4 review-checkbox\"\n\t\t\t\t\t#checkBox\n\t\t\t\t\t[ngModel]=\"canbeChecked(+value?.id)\"\n\t\t\t\t\t(click)=\"$event.stopImmediatePropagation(); updateExtrasValue(checkBox, true)\"\n\t\t\t\t></mat-checkbox>\n\t\t\t</a>\n\t\t</div>\n\t</div>\n</div>\n\n<!-- <findqo-place-ad-tab-buttons (nextTab)=\"onNext()\"></findqo-place-ad-tab-buttons> -->\n","import { Component, Output, EventEmitter, Input, OnInit } from '@angular/core';\nimport { DestroyService } from '@shared/services/destroy.service';\n\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { ButtonType } from '@shared/components/button/button.component';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n    selector: 'findqo-place-ad-tab-buttons',\n    templateUrl: './place-ad-tab-buttons.component.html',\n    styleUrls: ['./place-ad-tab-buttons.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdTabButtonsComponent implements OnInit {\n\tconstructor(private placeAdService: PlaceAdService, private destroy: DestroyService) {}\n\n\treadonly buttonType = ButtonType;\n\n\t@Input('buttonLabel') buttonLabel = 'n3210';\n\t@Output() nextTab = new EventEmitter();\n\t@Output() prevTab = new EventEmitter();\n\n\tisNextDisabled = false;\n\n\tonBack(): void {\n\t\tthis.placeAdService.onBack();\n\t}\n\n\tonNext(): void {\n\t\tthis.nextTab.emit();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.placeAdService.isNextButtonDisabled$.pipe(takeUntil(this.destroy)).subscribe((isDisabled) => {\n\t\t\tthis.isNextDisabled = isDisabled;\n\t\t});\n\t}\n}\n","<div class=\"w-100 container-fluid position-fixed bottom-0 border-top bg-basic-1\">\n\t<div class=\"row mx-auto p-3 mw-550px justify-content-between align-items-center\">\n\t\t<div class=\"col-auto w-125px\">\n\t\t\t<findqo-button\n\t\t\t\tbtnClass=\"text-small-14px-regular w-100 h-100\"\n\t\t\t\tclass=\"d-block\"\n\t\t\t\t[label]=\"'n459' | translations\"\n\t\t\t\t[btnType]=\"buttonType.STROKED\"\n\t\t\t\t(clicked)=\"onBack()\"\n\t\t\t></findqo-button>\n\t\t</div>\n\n\t\t<div class=\"col-auto w-125px\">\n\t\t\t<findqo-button\n\t\t\t\tbtnClass=\"text-small-14px-regular w-100 h-100\"\n\t\t\t\tclass=\"d-block\"\n\t\t\t\t[label]=\"buttonLabel | translations\"\n\t\t\t\t[btnType]=\"buttonType.FILLED\"\n\t\t\t\t(clicked)=\"onNext()\"\n\t\t\t\ttype=\"submit\"\n\t\t\t\t[isDisabled]=\"isNextDisabled\"\n\t\t\t></findqo-button>\n\t\t</div>\n\t</div>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { ButtonModule } from '@shared/components/button/button.module';\nimport { PlaceAdTabButtonsComponent } from './place-ad-tab-buttons.component';\n\n@NgModule({\n\tdeclarations: [PlaceAdTabButtonsComponent],\n\timports: [SharedModule, ButtonModule],\n\texports: [PlaceAdTabButtonsComponent],\n})\nexport class PlaceAdTabButtonsModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdAmenitiesComponent } from './place-ad-amenities.component';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdAmenitiesComponent],\n\timports: [SharedModule, MatCheckboxModule, PlaceAdTabButtonsModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdAmenitiesComponent],\n})\nexport class PlaceAdAmenitiesModule {}\n","import { inject, Injectable } from '@angular/core';\nimport { AuthApi } from '@core/data-access/apis/auth.api';\nimport { ProfileApi } from '@core/data-access/apis/profile.api';\nimport { ProfileState } from '@core/data-access/states/profile.state';\nimport { ClientUser } from '@core/models';\nimport { map, Observable, tap } from 'rxjs';\n\n@Injectable()\nexport class PlaceAdAuthFacade {\n\tprivate readonly authApi = inject(AuthApi);\n\tprivate readonly profileApi = inject(ProfileApi);\n\tprivate readonly profileState = inject(ProfileState);\n\n\tget isLoggedIn$(): Observable<boolean> {\n\t\treturn this.profileState.user$.pipe(map((user: ClientUser) => !!user));\n\t}\n\n\tget user$(): Observable<ClientUser | undefined> {\n\t\treturn this.profileState.user$;\n\t}\n\n\trequestEmailOtp(email: string): Observable<unknown> {\n\t\treturn this.authApi.requestEmailOtp(email);\n\t}\n\n\tupdateUserName(name: string): Observable<unknown> {\n\t\treturn this.profileApi.updateProfile({ name }).pipe(\n\t\t\ttap({\n\t\t\t\tnext: () =>\n\t\t\t\t\tthis.profileState.setUser({\n\t\t\t\t\t\t...this.profileState.getUser(),\n\t\t\t\t\t\tname,\n\t\t\t\t\t}),\n\t\t\t})\n\t\t);\n\t}\n}\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatInput } from '@angular/material/input';\nimport { ActivatedRoute } from '@angular/router';\nimport { APP_ROUTE } from '@core/constants';\nimport { AuthService } from '@core/data-access/services/auth.service';\nimport { AdContactType, AisleType, BooleanStatus, PlaceAdDataStatus, SellerType } from '@core/enums';\nimport { ClientUser, Contact, Country, EditAdResponseData } from '@core/models';\nimport { PHONE_COUNTRY_CODE } from '@feature/place-ad/place-ad.constant';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { DestroyService } from '@shared/services/destroy.service';\nimport { Observable, Subscription, first, of, switchMap, takeUntil, tap } from 'rxjs';\nimport { MyProfileFacade } from '@feature/my-profile/my-profile.facade';\n\n@Component({\n    selector: 'findqo-place-ad-contact',\n    templateUrl: './place-ad-contact.component.html',\n    styleUrl: './place-ad-contact.component.scss',\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdContactComponent implements OnInit {\n\tconstructor(\n\t\tprivate fb: FormBuilder,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate authService: AuthService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate destroy: DestroyService,\n\t\tprivate myProfileFacade: MyProfileFacade\n\t) {\n\t\tthis.user$ = this.placeAdFacade.getUser$();\n\t\tthis.user = authService.user();\n\t}\n\n\tpublic readonly AD_CONTACT_TYPE = AdContactType;\n\n\tform: FormGroup = this.fb.group({\n\t\tname: ['', [Validators.required, Validators.maxLength(80), Validators.minLength(3)]],\n\t\temail: [{ value: '', disabled: true }, [Validators.required, Validators.email]],\n\t\thasPhoneEnquiry: [false, Validators.required],\n\t\tisEmailOnly: [AdContactType.EMAIL_AND_PHONE, Validators.required],\n\t\tphoneCode: [PHONE_COUNTRY_CODE, [Validators.required, Validators.maxLength(4), Validators.pattern(/^\\+[1-9]\\d{0,2}/)]],\n\t\tphone: ['', [Validators.required, Validators.pattern(/^[0-9]\\d{1,10}$/)]],\n\t});\n\n\t@ViewChild('phoneNumber') phoneNumber: MatInput;\n\t@Input() previousContactDetails: Contact;\n\n\tuser$: Observable<ClientUser>;\n\thasPhoneEnquirySubscription: Subscription;\n\tuser: ClientUser;\n\treadonly appRoute = APP_ROUTE;\n\treadonly agents$ = this.placeAdFacade.getAgents$();\n\tcountries: Country[] = [\n\t\t{\n\t\t\tflag: 'assets/icons/irish-flag.webp',\n\t\t\tcode: '+353',\n\t\t},\n\t];\n\tisPhoneNumberRequired = false;\n\tfilteredCountries: Observable<Country[]>;\n\tselectedCountry: Country;\n\tupdatedStatus: PlaceAdDataStatus = PlaceAdDataStatus.UPDATED;\n\tsellerTypeId: string;\n\treadonly sellerType = SellerType;\n\teditAdData: EditAdResponseData;\n\n\tprivate getAccountType(): void {\n\t\tthis.placeAdService.getCurrentSellerId$().subscribe((res) => {\n\t\t\tthis.sellerTypeId = res;\n\t\t});\n\t}\n\n\tmouseClick(): void {\n\t\tsetTimeout(() => {\n\t\t\tthis.phoneNumber?.focus();\n\t\t}, 200);\n\t}\n\n\tprivate searchCountries(value): Country[] {\n\t\tconst SEARCH_TEXT = value?.toLowerCase();\n\n\t\tconst FILTER_COUNTRIES = this.countries.filter((option) => option?.code?.toLowerCase()?.includes(SEARCH_TEXT));\n\n\t\tif (FILTER_COUNTRIES.length === 1 && ((value.charAt(0) !== '+' && value.length === 3) || (value.charAt(0) === '+' && value.length === 4))) {\n\t\t\tthis.selectedCountry = FILTER_COUNTRIES[0];\n\t\t\tthis.phoneNumber?.focus();\n\t\t\treturn null;\n\t\t} else {\n\t\t\tthis.selectedCountry = null;\n\t\t}\n\n\t\treturn FILTER_COUNTRIES;\n\t}\n\n\tonSelectionChange(country: Country): void {\n\t\tthis.selectedCountry = country;\n\t}\n\n\tasync onNext(): Promise<boolean> {\n\t\ttry {\n\t\t\tthis.form.markAllAsTouched();\n\t\t\tconst UPDATE_TAB_INDEX = this.placeAdService.getTabIndex() + 1;\n\n\t\t\tif (this.form.valid) {\n\t\t\t\tconst CONTACT_DETAILS = {\n\t\t\t\t\tphoneCode: PHONE_COUNTRY_CODE,\n\t\t\t\t\tphone: '',\n\t\t\t\t\t...this.form.value,\n\t\t\t\t\thasPhoneEnquiry: this.form.get('hasPhoneEnquiry').value ? '1' : '0',\n\t\t\t\t\temail: this.form.get('email').value,\n\t\t\t\t\tisEmailOnly: this.form.get('isEmailOnly').value,\n\t\t\t\t};\n\t\t\t\tthis.user$.pipe(first()).subscribe((user) => {\n\t\t\t\t\tif (!user.phone && this.form.get('phone').value) {\n\t\t\t\t\t\tthis.myProfileFacade.updateProfile({ phone: this.form.get('phone').value });\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.placeAdService.addIndividualControlData('contact', CONTACT_DETAILS);\n\n\t\t\t\tif (this.updatedStatus !== PlaceAdDataStatus?.UPDATED) {\n\t\t\t\t\tawait this.placeAdFacade.updateAd(UPDATE_TAB_INDEX);\n\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED;\n\t\t\t\t} else {\n\t\t\t\t\tthis.placeAdService.directTabIndexUpdate(UPDATE_TAB_INDEX);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate formValidation(): void {\n\t\tthis.placeAdService\n\t\t\t.formValidationObservable(this.form)\n\t\t\t.pipe(takeUntil(this.destroy))\n\t\t\t.subscribe(([prev, next]) => {\n\t\t\t\tif (!this.form.valid) {\n\t\t\t\t\tconst CURRENT_TAB_INDEX = this.placeAdService.getTabIndex();\n\t\t\t\t\tthis.placeAdService.setStepsEnableStatus(CURRENT_TAB_INDEX);\n\t\t\t\t\tthis.placeAdService.setTabIndex(CURRENT_TAB_INDEX);\n\t\t\t\t} else {\n\t\t\t\t\tif (JSON.stringify(prev) !== JSON.stringify(next)) {\n\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tpatchFormValue(): void {\n\t\tthis.placeAdFacade\n\t\t\t.getEditAdData$()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((editData) => {\n\t\t\t\t\tthis.handlePhoneValidation(editData);\n\t\t\t\t\tthis.editAdData = editData;\n\n\t\t\t\t\tif (editData && (editData?.contact?.email || (editData?.agent?.id && editData?.sellerType?.id === SellerType.BUSINESS))) {\n\t\t\t\t\t\tif (editData.contact) {\n\t\t\t\t\t\t\tthis.form.patchValue({\n\t\t\t\t\t\t\t\tname: editData?.contact?.name ?? this.user.name,\n\t\t\t\t\t\t\t\temail: editData?.contact?.email ?? this.user.email,\n\t\t\t\t\t\t\t\thasPhoneEnquiry: editData?.contact?.hasPhoneEnquiry === BooleanStatus.TRUE ? true : false,\n\t\t\t\t\t\t\t\tisEmailOnly: editData?.contact?.isEmailOnly ?? AdContactType.EMAIL_AND_PHONE,\n\t\t\t\t\t\t\t\tphone: editData?.contact?.phone ?? this.user.phone,\n\t\t\t\t\t\t\t\tphoneCode: editData?.contact?.phoneCode ?? PHONE_COUNTRY_CODE,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (editData?.contact?.phone) {\n\t\t\t\t\t\t\t\tthis.form.get('phone').disable();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst AGENT = this.placeAdFacade.getAgentDetails(editData?.agent?.id);\n\n\t\t\t\t\t\t\tthis.form.patchValue({\n\t\t\t\t\t\t\t\tname: AGENT?.name,\n\t\t\t\t\t\t\t\temail: AGENT?.email,\n\t\t\t\t\t\t\t\thasPhoneEnquiry: false,\n\t\t\t\t\t\t\t\tisEmailOnly: AdContactType.EMAIL_AND_PHONE,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn of({});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.placeAdService.getCurrentSellerId$().pipe(\n\t\t\t\t\t\t\ttap((sellerTypeId) => {\n\t\t\t\t\t\t\t\tlet contacts;\n\t\t\t\t\t\t\t\tconst AGENT_ID = this.placeAdService.getPlaceAdIndividualData('agentId');\n\n\t\t\t\t\t\t\t\tif (sellerTypeId === SellerType.BUSINESS && AGENT_ID !== '0' && AGENT_ID) {\n\t\t\t\t\t\t\t\t\tconst AGENT = this.placeAdFacade.getAgentDetails(AGENT_ID);\n\t\t\t\t\t\t\t\t\tcontacts = {\n\t\t\t\t\t\t\t\t\t\tname: AGENT?.name,\n\t\t\t\t\t\t\t\t\t\temail: AGENT?.email,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontacts = {\n\t\t\t\t\t\t\t\t\t\tname: this.user?.name,\n\t\t\t\t\t\t\t\t\t\temail: this.user?.email,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.form.patchValue({ ...contacts });\n\n\t\t\t\t\t\t\t\tthis.form.patchValue({ phone: this.user.phone });\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\ttakeUntil(this.destroy)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\ttakeUntil(this.destroy)\n\t\t\t)\n\t\t\t.subscribe(() => {});\n\t}\n\n\thandlePhoneValidation(editData?: EditAdResponseData): void {\n\t\tlet isRentResidential = this.route.snapshot.params['aisle'] === AisleType.RENT_RESIDENTIAL;\n\n\t\tif (editData) {\n\t\t\tisRentResidential = editData?.aisle?.reference === AisleType.RENT_RESIDENTIAL;\n\t\t}\n\n\t\tif (isRentResidential) {\n\t\t\tthis.form.get('phone').removeValidators(Validators.required);\n\t\t\tthis.form.get('phoneCode').removeValidators(Validators.required);\n\t\t}\n\n\t\t// if user already added an phone number on profile\n\t\tthis.user$.subscribe((user) => {\n\t\t\tif (user.phone) {\n\t\t\t\tthis.form.patchValue({ phone: user.phone, name: user.name });\n\t\t\t\tthis.form.get('phone').disable();\n\t\t\t}\n\t\t});\n\t}\n\n\thandleAgentChange(agent): void {\n\t\tif (+agent?.agentId) {\n\t\t\tconst AGENT = this.placeAdFacade.getAgentDetails(agent?.agentId);\n\t\t\tthis.form.patchValue({ email: AGENT.email, name: AGENT.name });\n\t\t} else {\n\t\t\tthis.form.patchValue({ email: this.user.email, name: this.user.name });\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t\tthis.getAccountType();\n\t\tthis.selectedCountry = this.countries[0];\n\t\tthis.formValidation();\n\t\tthis.patchFormValue();\n\n\t\tthis.form?.controls['phoneCode']?.valueChanges.subscribe((value) => {\n\t\t\tthis.filteredCountries = of(this.searchCountries(value));\n\t\t});\n\t}\n}\n","<div *ngIf=\"{ user: user$ | async, agents: agents$ | async } as vm\">\n\t<h3 class=\"heading-3 fg-general-5\">{{ 'n3616' | translations }}</h3>\n\n\t<form [formGroup]=\"form\" class=\"mt-4\">\n\t\t<p class=\"text-body-regular fg-general-4\">{{ 'n3902' | translations }}</p>\n\t\t<findqo-place-ad-show-agents-list\n\t\t\t[selectedAgent]=\"editAdData?.agent\"\n\t\t\t(agentChange)=\"handleAgentChange($event)\"\n\t\t\t*ngIf=\"sellerTypeId === sellerType.BUSINESS\"\n\t\t></findqo-place-ad-show-agents-list>\n\n\t\t<mat-form-field appearance=\"outline\" class=\"mt-2\" *ngIf=\"sellerTypeId !== sellerType.BUSINESS\">\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"text\"\n\t\t\t\t[placeholder]=\"'n76' | translations\"\n\t\t\t\tformControlName=\"name\"\n\t\t\t\tminlength=\"3\"\n\t\t\t\tmaxlength=\"80\"\n\t\t\t\tclass=\"text-body-regular\"\n\t\t\t\t[value]=\"vm.user?.name\"\n\t\t\t/>\n\n\t\t\t<mat-hint class=\"mt-2 text-caption-regular fg-general-3\">{{ 'n3903' | translations }}.</mat-hint>\n\t\t\t<mat-error *ngIf=\"form.get('name').hasError\" class=\"text-caption-regular\">\n\t\t\t\t{{ 'n3634' | translations }}\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<p class=\"text-body-regular fg-general-4 pt-4\">{{ 'n3015' | translations }}</p>\n\n\t\t<mat-form-field appearance=\"outline\" class=\"mt-2 mb-4\">\n\t\t\t<input matInput type=\"email\" class=\"text-body-regular\" formControlName=\"email\" />\n\t\t\t<mat-hint class=\"mt-2 text-caption-regular fg-general-3\">{{ 'n3619' | translations }}</mat-hint>\n\t\t</mat-form-field>\n\n\t\t<p class=\"text-body-regular fg-general-4 pt-4 mb-2\">{{ 'n3926' | translations }}</p>\n\n\t\t<!-- TODO: This is wrong implementation of mat-select. This needs to be refactored. -->\n\t\t<mat-form-field for=\"phoneNumber\" #phone class=\"auth-field mb-4\" appearance=\"outline\">\n\t\t\t<div class=\"row mx-0 align-items-center\">\n\t\t\t\t<div class=\"col-auto px-0\">\n\t\t\t\t\t<div class=\"row mx-0 align-items-center\">\n\t\t\t\t\t\t<div class=\"col-auto px-0\" *ngIf=\"selectedCountry?.flag\">\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tmatTextPrefix\n\t\t\t\t\t\t\t\tclass=\"d-inline-flex align-items-center h-35px gap-2 align-middle fg-general-3\"\n\t\t\t\t\t\t\t\t[class.fg-general-5]=\"!form.get('phone')?.disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img width=\"24px\" height=\"18px\" class=\"rounded\" alt=\"Country code flag\" src=\"https://flagcdn.com/ie.svg\" />\n\t\t\t\t\t\t\t\t{{ '+353' }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"col ps-2 pe-0\">\n\t\t\t\t\t<input placeholder=\"800000000\" matInput id=\"phoneNumber\" #phoneNumber=\"matInput\" minlength=\"7\" maxlength=\"10\" formControlName=\"phone\" type=\"tel\" />\n\t\t\t\t</div>\n\n\t\t\t\t<mat-hint *ngIf=\"form.get('phone')?.disabled\" class=\"mt-2 text-caption-regular fg-general-3 -mx-10px\">\n\t\t\t\t\t{{ 'n3947' | translations }}\n\t\t\t\t\t<a [routerLink]=\"'/' + appRoute.myProfile\" class=\"fg-prim-2\">{{ 'n3093' | translations }}</a>\n\t\t\t\t</mat-hint>\n\n\t\t\t\t<!-- NOTE: The errors need to be specified because the value is updated with an empty string initially, the required error is triggered incorrectly. This behavior is wrong and needs to be fixed. -->\n\t\t\t\t<mat-hint\n\t\t\t\t\t*ngIf=\"\n\t\t\t\t\t\t!form.get('phone')?.disabled &&\n\t\t\t\t\t\t(!form.get('phone')?.errors?.['required'] || !form.get('phone')?.touched) &&\n\t\t\t\t\t\t!form.get('phone')?.errors?.['pattern'] &&\n\t\t\t\t\t\t!form.get('phone')?.errors?.['minlength']\n\t\t\t\t\t\"\n\t\t\t\t\tclass=\"mt-2 text-caption-regular fg-general-3 -mx-10px\"\n\t\t\t\t>\n\t\t\t\t\t{{ 'n3954' | translations }}\n\t\t\t\t</mat-hint>\n\n\t\t\t\t<mat-error *ngIf=\"form.controls?.['phone']?.errors?.['required'] && form.controls?.['phone']?.touched\" class=\"text-caption-regular mx-7px\">\n\t\t\t\t\t{{ 'n3635' | translations }}\n\t\t\t\t</mat-error>\n\n\t\t\t\t<mat-error *ngIf=\"form.get('phone').errors?.['pattern'] || form.get('phone').errors?.['minlength']\" class=\"text-caption-regular mx-7px\">\n\t\t\t\t\t{{ 'n3960' | translations }}\n\t\t\t\t</mat-error>\n\t\t\t</div>\n\t\t</mat-form-field>\n\n\t\t<p class=\"text-body-regular fg-general-4 pt-4 mb-2\">Receive enquiries for this ad through</p>\n\t\t<mat-form-field class=\"mb-4\" appearance=\"outline\">\n\t\t\t<mat-select class=\"text-body-regular\" formControlName=\"isEmailOnly\">\n\t\t\t\t<mat-option [value]=\"AD_CONTACT_TYPE.EMAIL_AND_PHONE\" class=\"search-option fs-14px lh-18px fw-400\" selected>Email and Phone</mat-option>\n\t\t\t\t<mat-option [value]=\"AD_CONTACT_TYPE.EMAIL_ONLY\" class=\"search-option fs-14px lh-18px fw-400\">Email only</mat-option>\n\t\t\t</mat-select>\n\t\t</mat-form-field>\n\n\t\t<mat-autocomplete class=\"phone-code\" #auto=\"matAutocomplete\">\n\t\t\t<mat-option (onSelectionChange)=\"onSelectionChange(country)\" *ngFor=\"let country of filteredCountries | async\" [value]=\"country.code\">\n\t\t\t\t<div class=\"row mx-0 align-items-center\">\n\t\t\t\t\t<div class=\"col-auto px-0 me-2\">\n\t\t\t\t\t\t<img [src]=\"country.flag\" alt=\"Country flag\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-auto px-0\">\n\t\t\t\t\t\t<span class=\"d-block fg-general-5 fs-16px\">\n\t\t\t\t\t\t\t{{ country.code }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</mat-option>\n\t\t</mat-autocomplete>\n\t</form>\n</div>\n\n<!-- <findqo-place-ad-tab-buttons (nextTab)=\"onNext()\"></findqo-place-ad-tab-buttons> -->\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdContactComponent } from './place-ad-contact.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PlaceAdShowAgentsListModule } from '../place-ad-show-agents-list/place-ad-show-agents-list.module';\n\n@NgModule({\n\tdeclarations: [PlaceAdContactComponent],\n\timports: [\n\t\tSharedModule,\n\t\tPlaceAdShowAgentsListModule,\n\t\tMatAutocompleteModule,\n\t\tPlaceAdTabButtonsModule,\n\t\tMatInputModule,\n\t\tMatSelectModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t],\n\texports: [PlaceAdContactComponent],\n})\nexport class PlaceAdContactModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { takeUntil } from 'rxjs';\n\nimport { DestroyService } from '@shared/services/destroy.service';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { ViewportService } from '@core/services/viewport.service';\n\n@Component({\n    selector: 'findqo-place-ad-description',\n    templateUrl: './place-ad-description.component.html',\n    styleUrls: ['./place-ad-description.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdDescriptionComponent implements OnInit {\n\tconstructor(\n\t\tprivate fb: FormBuilder,\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate destroy: DestroyService,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tpublic viewport: ViewportService\n\t) {}\n\n\tform: FormGroup = this.fb.group({ description: ['', [Validators.required, Validators.maxLength(20000)]] });\n\n\tremainingCharactersCount: number;\n\n\tcalculateRemaningCharacters(): void {\n\t\tthis.remainingCharactersCount = 20000 - +this.form.get('description').value?.length;\n\t}\n\n\tformValidation(): void {\n\t\tthis.placeAdService\n\t\t\t.formValidationObservable(this.form)\n\t\t\t.pipe(takeUntil(this.destroy))\n\t\t\t.subscribe(([prev, next]) => {\n\t\t\t\tif (!this.form.valid) {\n\t\t\t\t\tconst CURRENT_TAB_INDEX = this.placeAdService.getTabIndex();\n\t\t\t\t\tthis.placeAdService.setStepsEnableStatus(CURRENT_TAB_INDEX);\n\t\t\t\t\tthis.placeAdService.setTabIndex(CURRENT_TAB_INDEX);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync onNext(): Promise<boolean> {\n\t\ttry {\n\t\t\tthis.placeAdService.markFormFieldTouched(this.form);\n\n\t\t\tif (this.form.valid) {\n\t\t\t\tconst UPDATE_TAB_INDEX = this.placeAdService.getTabIndex() + 1;\n\n\t\t\t\t// if (this.placeAdService.checkForDataUpdates(this.form.value)) {\n\t\t\t\t// \tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\t\t\t// \tawait this.placeAdFacade.updateAd(UPDATE_TAB_INDEX);\n\t\t\t\t// } else {\n\t\t\t\t// \tthis.placeAdService.directTabIndexUpdate(UPDATE_TAB_INDEX);\n\t\t\t\t// }\n\n\t\t\t\tif (this.placeAdFacade.getAdId()) {\n\t\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\t\t\t\tawait this.placeAdFacade.updateAd(UPDATE_TAB_INDEX);\n\t\t\t\t} else {\n\t\t\t\t\tthis.placeAdService.directTabIndexUpdate(UPDATE_TAB_INDEX);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t//to patch edit ad data if there is any\n\tpatchEditAdData(): void {\n\t\tthis.placeAdFacade.editAdData$.pipe(takeUntil(this.destroy)).subscribe((editData) => {\n\t\t\tif (editData?.description) {\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\tdescription: editData?.description,\n\t\t\t\t});\n\n\t\t\t\tthis.form.markAsTouched();\n\t\t\t\tthis.calculateRemaningCharacters();\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.remainingCharactersCount = 20000;\n\t\tthis.formValidation();\n\t\tthis.patchEditAdData();\n\t}\n}\n","<div [formGroup]=\"form\">\n\t<h3 class=\"heading-3 fg-general-5 mb-2\">{{ 'n3036' | translations }}</h3>\n\n\t<p class=\"fg-general-4 mb-4 fs-12px lh-16px fw-400\">{{ 'n3037' | translations }}</p>\n\n\t<mat-form-field appearance=\"outline\" class=\"\">\n\t\t<textarea\n\t\t\tmatInput\n\t\t\t[placeholder]=\"'n3036' | translations\"\n\t\t\tclass=\"fs-14px fw-400 lh-22px rounded-1 py-3\"\n\t\t\t[rows]=\"viewport?.mobile ? 8 : 20\"\n\t\t\taria-label=\"Enter description\"\n\t\t\tformControlName=\"description\"\n\t\t\t(input)=\"calculateRemaningCharacters()\"\n\t\t\tmaxlength=\"20000\"\n\t\t></textarea>\n\n\t\t<mat-hint class=\"fg-general-3 text-caption-regular mt-2 text-end w-100\" [class.fg-warn-3]=\"remainingCharactersCount === 0\">\n\t\t\t{{ remainingCharactersCount }} &nbsp;{{ 'n3051' | translations }}\n\t\t</mat-hint>\n\n\t\t<mat-error *ngIf=\"form.get('description').hasError\" class=\"text-caption-regular\">\n\t\t\t{{ 'n3113' | translations }}\n\t\t</mat-error>\n\t</mat-form-field>\n\n\t<div class=\"d-flex justify-content-between align-items-start px-3 py-2 bg-general-1 gap-2 mt-4 anti-discriminatory\">\n\t\t<mat-icon class=\"material-icons-outlined fg-general-3\">tips_and_updates</mat-icon>\n\n\t\t<p class=\"fg-general-3 text-caption-regular\">{{ 'n3630' | translations }}</p>\n\t</div>\n</div>\n\n<!-- <findqo-place-ad-tab-buttons (nextTab)=\"onNext()\"></findqo-place-ad-tab-buttons> -->\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdDescriptionComponent } from './place-ad-description.component';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdDescriptionComponent],\n\timports: [SharedModule, PlaceAdTabButtonsModule, MatInputModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdDescriptionComponent],\n})\nexport class PlaceAdDescriptionModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { AisleType, PlaceAdType, SectionType } from '@core/enums';\nimport { PlaceAdFields } from '@core/models';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { NumberValidator } from '@shared/validators/number.validator';\n\n@Component({\n    selector: 'findqo-place-ad-input-control',\n    templateUrl: './place-ad-input-control.component.html',\n    styleUrls: ['./place-ad-input-control.component.scss'],\n    standalone: false\n})\nexport class PlaceAdInputControlComponent implements OnInit {\n\tconstructor(private placeAdFacade: PlaceAdFacade) {}\n\n\t@Input() form: FormGroup;\n\t@Input() control: PlaceAdFields;\n\ttype: string;\n\treadonly placeAdType = PlaceAdType;\n\tremoveMatSuffix = false;\n\n\tngOnInit(): void {\n\t\tthis.type = this.control?.fieldType?.substring(6);\n\n\t\tif (this.control?.paramName === PlaceAdType?.PROPERTY_SIZE) {\n\t\t\tthis.form.get(this.control?.paramName)?.addValidators([Validators.min(1), Validators.max(10000)]);\n\n\t\t\t//to remove place holder for property size rent commercial or properties for sale section\n\t\t\tif (\n\t\t\t\tthis.placeAdFacade.getCurrentAisle().reference === AisleType.RENT_COMMERCIAL ||\n\t\t\t\tthis.placeAdFacade.getCurrentSection().reference === SectionType.PROPERTIES_FOR_SALE\n\t\t\t) {\n\t\t\t\tthis.removeMatSuffix = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.control.paramName === PlaceAdType.BER_NUMBER) {\n\t\t\tthis.form.get(this.control?.paramName)?.addValidators([Validators.pattern('[0-9 ]{9}')]);\n\t\t}\n\t}\n}\n","<div [formGroup]=\"form\">\n\t<mat-label class=\"mb-2 fg-general-4 text-body-regular d-block\">{{ (control?.label | translations) || control?.label }}</mat-label>\n\n\t<mat-form-field appearance=\"outline\" [formGroup]=\"form\" class=\"w-100 text-body-regular\">\n\t\t<input matInput [type]=\"type\" [placeholder]=\"(control?.placeholder | translations) || control?.placeholder\" [formControlName]=\"control?.paramName\" />\n\t\t<span matSuffix class=\"me-2 fg-general-2 text-body-regular\" *ngIf=\"control?.matSuffix && !removeMatSuffix\">\n\t\t\t{{ control?.matSuffix | translations }}\n\t\t</span>\n\n\t\t<mat-error *ngIf=\"form.get(control?.paramName)?.hasError('required'); else otherError\" class=\"text-caption-regular\">\n\t\t\t{{ 'n3113' | translations }}\n\t\t</mat-error>\n\n\t\t<ng-template #otherError>\n\t\t\t<mat-error *ngIf=\"form.get(control?.paramName)?.hasError && control?.paramName === placeAdType.PROPERTY_SIZE\" class=\"text-caption-regular\">\n\t\t\t\t{{ 'n3150' | translations }}\n\t\t\t</mat-error>\n\n\t\t\t<mat-error *ngIf=\"form.get(control?.paramName)?.hasError && control?.paramName === placeAdType.BER_NUMBER\" class=\"text-caption-regular\">\n\t\t\t\t{{ 'n3239' | translations }}\n\t\t\t</mat-error>\n\t\t</ng-template>\n\t</mat-form-field>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PlaceAdFields } from '@core/models';\n\n@Component({\n    selector: 'findqo-place-ad-date-control',\n    templateUrl: './place-ad-date-control.component.html',\n    styleUrls: ['./place-ad-date-control.component.scss'],\n    standalone: false\n})\nexport class PlaceAdDateControlComponent {\n\tconstructor() {}\n\n\t@Input() form: FormGroup;\n\t@Input() control: PlaceAdFields;\n\tminDate: Date;\n\tmaxDate: Date;\n\n\tsetMaximumDate() {\n\t\tthis.maxDate = new Date();\n\t\tthis.maxDate.setFullYear(new Date().getFullYear() + 2);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.minDate = new Date();\n\n\t\tthis.setMaximumDate();\n\t}\n}\n","<div class=\"row mx-0\">\n\t<div class=\"col-12 px-0\" [formGroup]=\"form\">\n\t\t<mat-label class=\"mb-2 fg-general-4 text-body-regular d-block\">{{ control?.label | translations }}</mat-label>\n\n\t\t<mat-form-field id=\"dateControl\" appearance=\"outline\">\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\t[matDatepicker]=\"picker\"\n\t\t\t\t[formControlName]=\"control?.paramName\"\n\t\t\t\t[min]=\"minDate\"\n\t\t\t\t[max]=\"maxDate\"\n\t\t\t\t[placeholder]=\"control?.placeholder | translations\"\n\t\t\t\tclass=\"w-100 text-body-regular\"\n\t\t\t\t(click)=\"picker.open()\"\n\t\t\t/>\n\n\t\t\t<mat-datepicker-toggle matIconSuffix [for]=\"picker\">\n\t\t\t\t<mat-icon matDatepickerToggleIcon class=\"fs-18px\">calendar_today</mat-icon>\n\t\t\t</mat-datepicker-toggle>\n\n\t\t\t<mat-datepicker #picker></mat-datepicker>\n\n\t\t\t<mat-error\n\t\t\t\t*ngIf=\"\n\t\t\t\t\tform.get(control?.paramName)?.hasError('matDatepickerParse') ||\n\t\t\t\t\t\tform.get(control?.paramName)?.hasError('matDatepickerMin') ||\n\t\t\t\t\t\tform.get(control?.paramName)?.hasError('matDatepickerMax');\n\t\t\t\t\telse otherErrorTemplate\n\t\t\t\t\"\n\t\t\t\tclass=\"text-caption-regular\"\n\t\t\t>\n\t\t\t\t{{ 'n3149' | translations }}\n\t\t\t</mat-error>\n\n\t\t\t<ng-template #otherErrorTemplate>\n\t\t\t\t<mat-error *ngIf=\"form.get(control?.paramName)?.hasError('required')\" class=\"text-caption-regular\">\n\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t</mat-error>\n\t\t\t</ng-template>\n\t\t</mat-form-field>\n\t</div>\n</div>\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PlaceAdFields } from '@core/models';\n\n@Component({\n    selector: 'findqo-place-ad-room-control',\n    templateUrl: './place-ad-room-control.component.html',\n    styleUrls: ['./place-ad-room-control.component.scss'],\n    standalone: false\n})\nexport class PlaceAdRoomControlComponent implements OnInit, OnChanges {\n\tpublic constructor(public router: Router) {}\n\t@Input() valuationData: any;\n\t@Input() form: FormGroup;\n\t@Input() control: PlaceAdFields;\n\n\tbedroomCount = 0;\n\tbathroomCount = 1;\n\n\tdecreaseAdultcount(): void {\n\t\tif (this.bedroomCount > 0) {\n\t\t\t--this.bedroomCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.bathroomCount > 1) {\n\t\t\t--this.bathroomCount;\n\t\t}\n\t}\n\n\tincreaseAdultcount(control: string): void {\n\t\tif (control === 'bathroomCount') {\n\t\t\t++this.bathroomCount;\n\t\t} else {\n\t\t\t++this.bedroomCount;\n\t\t}\n\t}\n\n\tngOnChanges(): void {\n\t\tif (this.valuationData?.bedroomCount) {\n\t\t\tif (this.control.paramName === 'doubleBedroomCount') {\n\t\t\t\tthis.bedroomCount = this.valuationData?.bedroomCount;\n\t\t\t}\n\t\t}\n\t\tif (this.router.url.includes('edit-ad')) {\n\t\t\tconst BED_ROOM_LIST = this.form.value.bedrooms;\n\n\t\t\tif (this.control.paramName === 'singleBedroomCount') {\n\t\t\t\tthis.bedroomCount = BED_ROOM_LIST?.filter((item) => item?.roomTypeId === '1')[0].count ?? 0;\n\t\t\t}\n\n\t\t\tif (this.control.paramName === 'doubleBedroomCount') {\n\t\t\t\tthis.bedroomCount = BED_ROOM_LIST?.filter((item) => item?.roomTypeId === '2')[0].count ?? 0;\n\t\t\t}\n\n\t\t\tif (this.control.paramName === 'suiteBedroomCount') {\n\t\t\t\tthis.bedroomCount = BED_ROOM_LIST?.filter((item) => item?.roomTypeId === '3')[0].count ?? 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t\tif (this.form.value.bathroomCount !== null) {\n\t\t\tthis.bathroomCount = this.form.value.bathroomCount;\n\t\t}\n\t}\n}\n","<div class=\"row justify-content-between align-items-center mb-3\" [formGroup]=\"form\">\n\t<div class=\"col\">\n\t\t<span class=\"d-inline-block text-body-regular fg-general-4\">{{ control?.label | translations }}</span>\n\t</div>\n\n\t<!-- Bedrooms -->\n\t<div class=\"col-auto add-btn\" *ngIf=\"control.paramName !== 'bathroomCount'; else bathroom\">\n\t\t<button mat-stroked-button class=\"bg-basic-1 round-btn px-0\" disableRipple (click)=\"decreaseAdultcount()\" [disabled]=\"bedroomCount <= 0\" type=\"button\">\n\t\t\t<mat-icon class=\"fg-prim-2 fs-18px\">remove</mat-icon>\n\t\t</button>\n\n\t\t<input\n\t\t\ttype=\"number\"\n\t\t\t[formControlName]=\"control?.paramName\"\n\t\t\tclass=\"text-body-regular fg-general-5 border-0 text-center input-width\"\n\t\t\t[(ngModel)]=\"bedroomCount\"\n\t\t/>\n\n\t\t<button mat-stroked-button class=\"bg-basic-1 round-btn px-0\" disableRipple type=\"button\" (click)=\"increaseAdultcount(control.paramName)\">\n\t\t\t<mat-icon class=\"fg-prim-2\">add</mat-icon>\n\t\t</button>\n\t</div>\n\n\t<ng-template #bathroom>\n\t\t<div class=\"col-auto add-btn\">\n\t\t\t<button\n\t\t\t\tmat-stroked-button\n\t\t\t\tclass=\"bg-basic-1 round-btn px-0\"\n\t\t\t\tdisableRipple\n\t\t\t\t(click)=\"decreaseAdultcount()\"\n\t\t\t\t[disabled]=\"bathroomCount <= 1\"\n\t\t\t\ttype=\"button\"\n\t\t\t>\n\t\t\t\t<mat-icon class=\"fg-prim-2 fs-18px\">remove</mat-icon>\n\t\t\t</button>\n\n\t\t\t<input\n\t\t\t\ttype=\"number\"\n\t\t\t\t[formControlName]=\"control?.paramName\"\n\t\t\t\tclass=\"text-body-regular fg-general-5 border-0 text-center input-width\"\n\t\t\t\t[(ngModel)]=\"bathroomCount\"\n\t\t\t/>\n\n\t\t\t<button mat-stroked-button class=\"bg-basic-1 round-btn px-0\" disableRipple type=\"button\" (click)=\"increaseAdultcount(control.paramName)\">\n\t\t\t\t<mat-icon class=\"fg-prim-2\">add</mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t</ng-template>\n</div>\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MatSelectChange } from '@angular/material/select';\nimport { AisleType, PlaceAdType } from '@core/enums';\nimport { PlaceAdFields } from '@core/models';\nimport { CommonUtil } from '@core/utils/common.util';\nimport { PARKING_STAND_ID } from '@feature/place-ad/place-ad.constant';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\n\n@Component({\n    selector: 'findqo-place-ad-select-control',\n    templateUrl: './place-ad-select-control.component.html',\n    styleUrls: ['./place-ad-select-control.component.scss'],\n    standalone: false\n})\nexport class PlaceAdSelectControlComponent implements OnInit {\n\tconstructor(\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate placeAdService: PlaceAdService\n\t) {}\n\n\t@Input() form: FormGroup;\n\t@Input() control: PlaceAdFields;\n\n\tpublic readonly placeAdType = PlaceAdType;\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tCommonUtil.handleNgOnChanges(changes['control'], () => {\n\t\t\tif (this.control.values?.length) {\n\t\t\t\tthis.form.get(this.control.paramName)?.enable();\n\t\t\t} else {\n\t\t\t\tthis.form.get(this.control.paramName)?.disable();\n\t\t\t}\n\t\t});\n\t}\n\n\t//Update the form filed values based on value selection from dropdown field if it has a dependency\n\tonSelection(standId: MatSelectChange, paramName: string): void {\n\t\tif (paramName === PlaceAdType.STAND) {\n\t\t\tthis.placeAdFacade.onAdStandChange(standId.value);\n\t\t}\n\n\t\t//To update amenities. Note:rent residential parking doens't have amenities\n\t\tif (paramName === PlaceAdType.STAND && this.form.get(this.control.paramName).value !== PARKING_STAND_ID) {\n\t\t\tconst CONTROL_VALUE = this.form.get(this.control.paramName).value;\n\n\t\t\tconst PARAMS = {\n\t\t\t\tsection: this.placeAdFacade.getCurrentSection().reference,\n\t\t\t\taisle: this.placeAdFacade.getCurrentAisle().reference,\n\t\t\t\tstand: this.control?.values?.find((control) => control?.id === CONTROL_VALUE)?.reference,\n\t\t\t};\n\n\t\t\tthis.placeAdFacade.getPlaceAdControlValues(PARAMS, 'amenities');\n\t\t}\n\n\t\t//to dynamically update values of control from API if any that depends on the current control value selected\n\t\tif (this.control?.childReferenceParamName) {\n\t\t\tconst CONTROL_VALUE = this.form.get(this.control.paramName).value;\n\n\t\t\tconst QUERY_PARAM_VALUE = this.control?.values?.find((control) => control?.id === CONTROL_VALUE)?.reference;\n\n\t\t\tconst TO_UPDATE_CONTROL = this.placeAdFacade.getPlaceAdControls().details.find((control) => control?.paramName === this.control?.childReferenceParamName);\n\n\t\t\tif (TO_UPDATE_CONTROL) {\n\t\t\t\tthis.form?.get(TO_UPDATE_CONTROL?.paramName)?.reset();\n\n\t\t\t\tconst PARAMS = {\n\t\t\t\t\tsection: this.placeAdFacade.getCurrentSection().reference,\n\t\t\t\t\taisle: this.placeAdFacade.getCurrentAisle().reference,\n\t\t\t\t\t[TO_UPDATE_CONTROL?.queryParamName]: QUERY_PARAM_VALUE,\n\t\t\t\t};\n\n\t\t\t\tthis.placeAdFacade.updateFieldValues(TO_UPDATE_CONTROL, PARAMS).then((data) => {\n\t\t\t\t\tconst UPDATED_CONTROL = data.find((value: PlaceAdFields) => value?.paramName === TO_UPDATE_CONTROL?.paramName);\n\n\t\t\t\t\tif (UPDATED_CONTROL?.values?.length > 0) {\n\t\t\t\t\t\tthis.form.get(TO_UPDATE_CONTROL?.paramName).addValidators(Validators.required);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.form.get(TO_UPDATE_CONTROL?.paramName).removeValidators(Validators.required);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit(): void {}\n}\n","<!-- <div class=\"row\" > -->\n<div [formGroup]=\"form\">\n\t<mat-label class=\"mb-2 fg-general-4 text-body-regular d-block\">{{ (control.label | translations) || control?.label }}</mat-label>\n\n\t<mat-form-field appearance=\"outline\" class=\"w-100\">\n\t\t<mat-select\n\t\t\t[formControlName]=\"control?.paramName\"\n\t\t\t[placeholder]=\"(control?.placeholder | translations) || control?.placeholder\"\n\t\t\t(selectionChange)=\"onSelection($event, control.paramName)\"\n\t\t\tclass=\"text-body-regular\"\n\t\t>\n\t\t\t<mat-option\n\t\t\t\t*ngFor=\"let value of control.values\"\n\t\t\t\t[value]=\"\n\t\t\t\t\tcontrol?.paramName === placeAdType.BATHROOM_COUNT ||\n\t\t\t\t\tcontrol?.paramName === placeAdType.BEDROOM_COUNT ||\n\t\t\t\t\tcontrol?.paramName === placeAdType.OTHER_TENANTS\n\t\t\t\t\t\t? value?.name\n\t\t\t\t\t\t: value?.id\n\t\t\t\t\"\n\t\t\t\tclass=\"text-body-regular\"\n\t\t\t>\n\t\t\t\t{{ value?.name }}\n\t\t\t</mat-option>\n\t\t</mat-select>\n\n\t\t<mat-error *ngIf=\"form.get(control?.paramName)?.hasError('required')\" class=\"text-caption-regular\">\n\t\t\t{{ 'n3113' | translations }}\n\t\t</mat-error>\n\t</mat-form-field>\n</div>\n<!-- </div> -->\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PlaceAdType } from '@core/enums';\nimport { PlaceAdFields } from '@core/models';\n\n@Component({\n    selector: 'findqo-place-ad-radio-control',\n    templateUrl: './place-ad-radio-control.component.html',\n    styleUrls: ['./place-ad-radio-control.component.scss'],\n    standalone: false\n})\nexport class PlaceAdRadioControlComponent {\n\tconstructor() {}\n\n\treadonly placeAdType = PlaceAdType;\n\n\t@Input() form: FormGroup;\n\t@Input() control: PlaceAdFields;\n}\n","<div class=\"\" [formGroup]=\"form\">\n\t<mat-radio-group\n\t\taria-label=\"Select an option\"\n\t\t[labelPosition]=\"'before'\"\n\t\t[formControlName]=\"control?.paramName\"\n\t\tid=\"prefernceControl\"\n\t\tclass=\"my-4 text-body-regular d-block\"\n\t>\n\t\t<mat-label class=\"text-small-14px-regular fg-general-4 d-block mb-2\" for=\"prefernceControl\">{{ control?.label | translations }}</mat-label>\n\n\t\t<mat-radio-button [value]=\"value?.id\" class=\"preference-radio fg-general-4 mb-3 mb-sm-0 cursor-pointer\" *ngFor=\"let value of control?.values\">\n\t\t\t{{ value?.name }}\n\t\t</mat-radio-button>\n\n\t\t<mat-error *ngIf=\"form.get(control?.paramName).hasError('required') && form.get(control?.paramName).touched\" class=\"text-caption-regular\">\n\t\t\t{{ 'n3272' | translations }}\n\t\t</mat-error>\n\t</mat-radio-group>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PlaceAdType } from '@core/enums';\nimport { PlaceAdFields } from '@core/models';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\n\n@Component({\n    selector: 'findqo-place-ad-checkbox-control',\n    templateUrl: './place-ad-checkbox-control.component.html',\n    styleUrls: ['./place-ad-checkbox-control.component.scss'],\n    standalone: false\n})\nexport class PlaceAdCheckboxControlComponent implements OnInit {\n\tconstructor(private placeAdFacade: PlaceAdFacade, private placeAdService: PlaceAdService) {}\n\n\treadonly placeAdType = PlaceAdType;\n\n\t@Input() form: FormGroup;\n\t@Input() control: PlaceAdFields;\n\n\tonUpdate(event): void {\n\t\tthis.form.get(this.control?.paramName).patchValue(event.checked);\n\t}\n\n\tngOnInit(): void {}\n}\n","<div class=\"\" [formGroup]=\"form\">\n\t<mat-checkbox\n\t\tclass=\"d-block text-body-regular fg-general-5\"\n\t\t[formControlName]=\"control?.paramName\"\n\t\tcolor=\"primary\"\n\t\t(change)=\"onUpdate($event)\"\n\t\t#checkBoxControl\n\t>\n\t\t{{ control?.label | translations }}\n\t</mat-checkbox>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable, distinctUntilChanged, filter, takeUntil } from 'rxjs';\n\nimport { MatRadioButton } from '@angular/material/radio';\nimport { PropertyWorthState, ValuationInfo } from '@core/data-access/states/property-worth.state';\nimport { AisleType, PlaceAdDataStatus, PlaceAdTabIndex, PlaceAdType } from '@core/enums';\nimport { EditAdResponseData, PlaceAdFields, PlaceAdFieldsSections } from '@core/models';\nimport { ViewportService } from '@core/services/viewport.service';\nimport { SHOW_BEDROOM_STAND_LIST } from '@feature/place-ad/place-ad.constant';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { DestroyService } from '@shared/services/destroy.service';\n\n@Component({\n    selector: 'findqo-place-ad-details',\n    templateUrl: './place-ad-details.component.html',\n    styleUrls: ['./place-ad-details.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdDetailsComponent implements OnInit {\n\tconstructor(\n\t\tprivate fb: FormBuilder,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tpublic viewport: ViewportService,\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate destroy: DestroyService,\n\t\tprivate propertyWorthState: PropertyWorthState,\n\t) {\n\t\tthis.fields$ = this.placeAdFacade.placeAdControls$;\n\t}\n\n\tcontrols: PlaceAdFields[];\n\n\tfields$: Observable<PlaceAdFieldsSections>;\n\tform: FormGroup = this.fb.group({});\n\tselectedStand: string;\n\tcustomClass = '';\n\tisCheckStandValue = false;\n\tisFormSubmitted = false;\n\tisShowBedrooms = false;\n\tisParking = false;\n\tisStandSelected = false;\n\tupdatedStatus: PlaceAdDataStatus = PlaceAdDataStatus?.NOT_CREATED; //to get the status of data updated again after submittign once and perform action accordingly\n\tupdateStyle = false;\n\treadonly placeAdType = PlaceAdType;\n\tbrochureFile: File;\n\tisBrochureUploaded = false;\n\tbrochureFileControl = new FormControl('');\n\taisleReference = '';\n\treadonly aisleType = AisleType;\n\n\tupdatedAd?: EditAdResponseData;\n\n\tvaluationData: ValuationInfo;\n\n\t//control names(bedrooms & bathroom) which we dynamically add or remove in  sale residential\n\tresidentialControlsName = [PlaceAdType.SINGLE_BEDROOM_COUNT, PlaceAdType.DOUBLE_BEDROOM_COUNT, PlaceAdType.SUITE_BEDROOM_COUNT, PlaceAdType.BATHROOM_COUNT];\n\n\tprivate createDynamicForm({ controls }: { controls: PlaceAdFields[] }): void {\n\t\tcontrols.forEach((control) => {\n\t\t\tif (control?.paramName === PlaceAdType.OWNER_OCCUPIED || control?.paramName === PlaceAdType.ONEPLUS_PERSON_ALLOWED) {\n\t\t\t\tthis.form.addControl(control?.paramName, this.fb.control(false));\n\t\t\t} else if (control?.optional) {\n\t\t\t\tthis.form.addControl(control?.paramName, this.fb.control(control?.selectedValue));\n\t\t\t} else {\n\t\t\t\tthis.form.addControl(control?.paramName, this.fb.control(control?.selectedValue, Validators.required));\n\t\t\t}\n\n\t\t\t// Always choose Square Metre as a default value in property unit.\n\t\t\tif (control.paramName === PlaceAdType.PROPERTY_UNIT && !this.placeAdFacade.getAdId()) {\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\t[PlaceAdType.PROPERTY_UNIT]: '1',\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (this.valuationData && this.form.value?.standId === null && this.updatedStatus === PlaceAdDataStatus.NOT_CREATED) {\n\t\t\t// Find the stand control that contains name/id mapping\n\t\t\tconst standControl = this.controls.find((control) => control.paramName === PlaceAdType.STAND);\n\n\t\t\t// Find the stand by name from the values array\n\t\t\tif (standControl?.values) {\n\t\t\t\tthis.selectedStand = standControl.values.find((value) => value.reference === this.valuationData?.stand)?.id;\n\t\t\t}\n\t\t\tif (this.selectedStand === '5') {\n\t\t\t\tthis.isParking = true;\n\t\t\t} else {\n\t\t\t\tthis.isParking = false;\n\t\t\t}\n\n\t\t\tthis.isCheckStandValue = this.valuationData?.aisle === AisleType.RENT_RESIDENTIAL || this.valuationData?.aisle === AisleType.SALE_RESIDENTIAL;\n\n\t\t\tif (this.isCheckStandValue) {\n\t\t\t\tthis.placeAdFacade.onAdStandChange(this.selectedStand);\n\t\t\t\t// to remove the bedroom form controls\n\n\t\t\t\tconst UPDATED_VALUES = {\n\t\t\t\t\t[PlaceAdType.STAND]: this.selectedStand,\n\t\t\t\t\t[PlaceAdType.BATHROOM_COUNT]: this.valuationData?.bathroomCount || 0,\n\t\t\t\t\t[PlaceAdType.DOUBLE_BEDROOM_COUNT]: this.valuationData?.bedroomCount || 0,\n\t\t\t\t\t[PlaceAdType.PROPERTY_SIZE]: this.valuationData?.propertySize,\n\t\t\t\t};\n\n\t\t\t\tthis.form.patchValue(UPDATED_VALUES);\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\t\t} else {\n\t\t\t\tthis.placeAdFacade.onAdStandChange(this.selectedStand);\n\n\t\t\t\t// to remove the bedroom form controls\n\n\t\t\t\tconst UPDATED_VALUES = {\n\t\t\t\t\t[PlaceAdType.STAND]: this.selectedStand,\n\t\t\t\t\t[PlaceAdType.OTHER_TENANTS]: this.valuationData?.otherTenantShareCount,\n\t\t\t\t};\n\n\t\t\t\tthis.form.patchValue(UPDATED_VALUES);\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\t\t}\n\t\t}\n\t\tif (this.placeAdFacade.getAdId() && this.form.value?.standId === null) {\n\t\t\tthis.patchEditAdData();\n\t\t}\n\t}\n\n\tupdateRadioBtn(event: MatRadioButton, fromRadioButton: boolean, radioValue: string): void {\n\t\tif (!fromRadioButton) {\n\t\t\tevent.checked = !event.checked;\n\n\t\t\tif (radioValue === '1') {\n\t\t\t\tthis.form.get('parkingAccessId').patchValue('1');\n\t\t\t} else {\n\t\t\t\tthis.form.get('parkingAccessId').patchValue('2');\n\t\t\t}\n\t\t}\n\t}\n\n\tformValidation(): void {\n\t\tlet count = 0;\n\t\tthis.placeAdService\n\t\t\t.formValidationObservable(this.form)\n\t\t\t.pipe(takeUntil(this.destroy))\n\t\t\t.subscribe(([prev, next]) => {\n\t\t\t\tif (!this.form.valid) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tthis.placeAdService.setStepsEnableStatus(PlaceAdTabIndex.TAB_2);\n\t\t\t\t\tthis.placeAdService.setTabIndex(PlaceAdTabIndex.TAB_2);\n\t\t\t\t} else {\n\t\t\t\t\tif (JSON.stringify(prev) !== JSON.stringify(next)) {\n\t\t\t\t\t\tcount++;\n\n\t\t\t\t\t\tif (this.placeAdFacade.getIsEditMode()) {\n\t\t\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (this.placeAdFacade.getAdId()) {\n\t\t\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t//to patch edit data if any\n\tpatchEditAdData(): void {\n\t\tthis.placeAdFacade\n\t\t\t.getEditAdData$()\n\t\t\t.pipe(takeUntil(this.destroy), distinctUntilChanged())\n\t\t\t.subscribe((editData) => {\n\t\t\t\tif (editData) {\n\t\t\t\t\tthis.updatedAd = editData;\n\t\t\t\t\tthis.isCheckStandValue = editData?.aisle?.reference === AisleType.RENT_RESIDENTIAL || editData?.aisle?.reference === AisleType.SALE_RESIDENTIAL;\n\n\t\t\t\t\tif (this.isCheckStandValue) {\n\t\t\t\t\t\tthis.placeAdFacade.onAdStandChange(editData?.stand?.id);\n\n\t\t\t\t\t\tconst ROOM_TYPE_COUNTS = editData?.bedrooms.map((room) => ({\n\t\t\t\t\t\t\troomTypeId: room.roomType.id,\n\t\t\t\t\t\t\tcount: Number.parseInt(room.count, 10),\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t// to remove the bedroom form controls\n\t\t\t\t\t\tif (editData?.stand?.id === '5') {\n\t\t\t\t\t\t\tthis.isParking = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.isParking = false;\n\n\t\t\t\t\t\t\tif (!this.isParking && this.isShowBedrooms) {\n\t\t\t\t\t\t\t\tthis.form.addControl('bedrooms', this.fb.array(ROOM_TYPE_COUNTS.map((item) => this.fb.group(item))));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst UPDATED_VALUES = {\n\t\t\t\t\t\t[PlaceAdType.STAND]: editData?.stand?.id,\n\t\t\t\t\t\t[PlaceAdType.PROPERTY_SIZE]: editData?.propertySize?.value ? Number.parseFloat(editData?.propertySize?.value.replace(/,/g, '')) : null,\n\t\t\t\t\t\t[PlaceAdType.LEASE_TERM]: editData?.leaseTerm?.id,\n\t\t\t\t\t\t[PlaceAdType.AVAILABLE_FROM]: new Date(+editData?.availableFrom * 1000) < new Date() ? new Date() : new Date(+editData?.availableFrom * 1000),\n\t\t\t\t\t\t[PlaceAdType?.FURNISHING]: editData?.furnishing?.id,\n\t\t\t\t\t\t[PlaceAdType.PARKING_ACCESS]: editData?.parkingAccess?.id,\n\t\t\t\t\t\t[PlaceAdType.PARKING_COUNT]: editData?.parkingAvailableSpaceCount,\n\t\t\t\t\t\t[PlaceAdType.BEDROOM_COUNT]: editData?.bedroomCount?.name,\n\t\t\t\t\t\t[PlaceAdType.SINGLE_BEDROOM_COUNT]: editData?.bedrooms.find((item) => item.roomType.id === '1')?.count || 0,\n\t\t\t\t\t\t[PlaceAdType.DOUBLE_BEDROOM_COUNT]: editData?.bedrooms.find((item) => item.roomType.id === '2')?.count || 0,\n\t\t\t\t\t\t[PlaceAdType.SUITE_BEDROOM_COUNT]: editData?.bedrooms.find((item) => item.roomType.id === '3')?.count || 0,\n\t\t\t\t\t\t[PlaceAdType.BATHROOM_COUNT]: editData?.bathroomCount?.name,\n\t\t\t\t\t\t[PlaceAdType.ONEPLUS_PERSON_ALLOWED]: editData?.isOnePlusPersonAllowed === '1',\n\t\t\t\t\t\t[PlaceAdType.OWNER_OCCUPIED]: editData?.isOwnerOccupied === '1',\n\t\t\t\t\t\t[PlaceAdType.TEANANT_PREFERENCE]: editData?.tenantPreference?.id,\n\t\t\t\t\t\t[PlaceAdType.OTHER_TENANTS]: editData?.otherTenantShareCount?.name,\n\t\t\t\t\t\t[PlaceAdType.BER_TYPE]: editData?.ber?.id,\n\t\t\t\t\t\t[PlaceAdType.BER_NUMBER]: editData?.berNumber,\n\t\t\t\t\t\t[PlaceAdType.TAX_DESIGNATION]: editData?.taxDesignation?.id,\n\t\t\t\t\t\t[PlaceAdType.PROPERTY_UNIT]: editData?.propertySize?.unit?.id,\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.form.patchValue(UPDATED_VALUES);\n\n\t\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\n\t\t\t\t\tif (editData?.brochure?.originalFileName) {\n\t\t\t\t\t\tthis.brochureFileControl.patchValue(editData?.brochure?.originalFileName);\n\t\t\t\t\t\tthis.isBrochureUploaded = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdateRentResidentialControls(): void {\n\t\tlet controls = this.controls;\n\t\tlet removeControls = [];\n\n\t\tif (this.placeAdService.getPlaceAdIndividualData('aisleId') === '1') {\n\t\t\tif (this.isParking || this.form.get('standId')?.value === '5') {\n\t\t\t\tcontrols = controls.slice(0, 3);\n\t\t\t\tremoveControls = this.controls.slice(3);\n\t\t\t\tthis.placeAdService.deleteIndividualControl('bedrooms');\n\t\t\t} else {\n\t\t\t\tcontrols = controls.slice(2);\n\t\t\t\tremoveControls = this.controls.slice(0, 2);\n\t\t\t}\n\n\t\t\tremoveControls.forEach((control) => {\n\t\t\t\t// TODO: The code here needs to be refactored because the added subscriptions are causing issues.\n\t\t\t\tconst standId = this.form.get('standId')?.value;\n\t\t\t\tif (standId === 5 && (control.paramName === PlaceAdType.PARKING_ACCESS || control.paramName === PlaceAdType.PARKING_COUNT)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.form.removeControl(control.paramName);\n\t\t\t\tthis.placeAdService.deleteIndividualControl(control.paramName);\n\t\t\t});\n\n\t\t\tthis.createDynamicForm({ controls });\n\t\t}\n\t}\n\n\tprivate updateSaleResidentialControls(): void {\n\t\tif (!this.isShowBedrooms) {\n\t\t\tthis.placeAdService.deleteIndividualControl('bedrooms');\n\t\t\tconst updatedControls = this.controls.slice();\n\n\t\t\tthis.residentialControlsName.forEach((controlName) => {\n\t\t\t\tconst INDEX = updatedControls.findIndex((control) => control?.paramName === controlName);\n\t\t\t\tconst REMOVE_CONTROL = updatedControls.find((control) => control?.paramName === controlName);\n\n\t\t\t\tif (INDEX !== -1) {\n\t\t\t\t\tupdatedControls.splice(INDEX, 1);\n\t\t\t\t\tthis.form.removeControl(REMOVE_CONTROL?.paramName);\n\t\t\t\t\tthis.placeAdService.deleteIndividualControl(REMOVE_CONTROL?.paramName);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.createDynamicForm({ controls: updatedControls });\n\t\t} else {\n\t\t\tthis.createDynamicForm({ controls: this.controls });\n\t\t}\n\t}\n\n\tonBorchureUpload(event: Event): void {\n\t\tif (event?.['target']['files'][0].size / (1000 * 1000) <= 50) {\n\t\t\tthis.brochureFile = event?.['target']['files'][0];\n\t\t\tthis.brochureFileControl.patchValue(this.brochureFile?.name);\n\t\t\tconst AD_ID = this.placeAdFacade.getAdId();\n\n\t\t\t//upload brochure if ad id is available\n\t\t\tif (AD_ID) {\n\t\t\t\tthis.placeAdFacade\n\t\t\t\t\t.uploadBrochure(AD_ID, this.brochureFile)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tthis.brochureFileControl.setErrors(null);\n\t\t\t\t\t\tthis.isBrochureUploaded = true;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tthis.brochureFileControl.setErrors({ uploadFailed: true });\n\t\t\t\t\t\tthis.isBrochureUploaded = false;\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.brochureFileControl.setErrors({ exceededSize: true });\n\t\t}\n\t}\n\n\tasync onNext(): Promise<boolean> {\n\t\tthis.isFormSubmitted = true;\n\t\t// To remove the controls based on the property type selected\n\t\tif (this.isCheckStandValue) {\n\t\t\tif (\n\t\t\t\t(!this.isParking && this.aisleReference === AisleType.RENT_RESIDENTIAL) ||\n\t\t\t\t(this.isShowBedrooms && this.aisleReference === AisleType.SALE_RESIDENTIAL)\n\t\t\t) {\n\t\t\t\tconst BEDROOMS = [\n\t\t\t\t\t{ name: 'singleBedroomCount', id: '1' },\n\t\t\t\t\t{ name: 'doubleBedroomCount', id: '2' },\n\t\t\t\t\t{ name: 'suiteBedroomCount', id: '3' },\n\t\t\t\t];\n\n\t\t\t\tconst SELECTED_BEDROOM_COUNT_ARRAY = BEDROOMS.map((control) => ({\n\t\t\t\t\troomTypeId: control.id,\n\t\t\t\t\tcount: this.form.value[control.name]?.toString(),\n\t\t\t\t}));\n\n\t\t\t\tif (!this.form.contains('bedrooms')) {\n\t\t\t\t\tthis.form.addControl('bedrooms', this.fb.array(SELECTED_BEDROOM_COUNT_ARRAY.map((item) => this.fb.group(item))));\n\t\t\t\t} else {\n\t\t\t\t\t// Update the bedrooms control if it already exists\n\t\t\t\t\tconst BEDROOMS_FORM_ARRAY = this.form.get('bedrooms') as FormArray;\n\t\t\t\t\tBEDROOMS_FORM_ARRAY.clear();\n\n\t\t\t\t\tSELECTED_BEDROOM_COUNT_ARRAY.forEach((item) => {\n\t\t\t\t\t\tBEDROOMS_FORM_ARRAY.push(this.fb.group(item));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.placeAdService.markFormFieldTouched(this.form);\n\n\t\treturn this.form.valid;\n\t}\n\n\tasync onSubmitForm(): Promise<boolean> {\n\t\ttry {\n\t\t\tif (this.form?.valid) {\n\t\t\t\tif (this.isParking || !this.isShowBedrooms) {\n\t\t\t\t\tif (this.form.contains('bedrooms')) {\n\t\t\t\t\t\tthis.form.removeControl('bedrooms');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\t\t\tif (this.placeAdFacade.getAdId()) {\n\t\t\t\t\t// if (this.updatedStatus === PlaceAdDataStatus?.UPDATED_AGAIN) {\n\t\t\t\t\t//  this.updatedStatus = PlaceAdDataStatus.UPDATED;\n\t\t\t\t\t//  await this.placeAdFacade.updateAd(PlaceAdTabIndex.TAB_3);\n\t\t\t\t\t// } else {\n\t\t\t\t\t//  this.placeAdService.directTabIndexUpdate(PlaceAdTabIndex.TAB_3);\n\t\t\t\t\t// }\n\n\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED;\n\n\t\t\t\t\tawait this.placeAdFacade.updateAd(PlaceAdTabIndex.TAB_3);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.updatedStatus === PlaceAdDataStatus.NOT_CREATED) {\n\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED;\n\t\t\t\t\t\tconst response = await this.placeAdFacade.createAd(this.brochureFile);\n\n\t\t\t\t\t\tif (response?.['originalFileName']) {\n\t\t\t\t\t\t\tthis.isBrochureUploaded = true;\n\t\t\t\t\t\t\tthis.brochureFileControl.setErrors(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error === 'brochure') {\n\t\t\t\tthis.brochureFileControl.setErrors({ uploadFailed: true });\n\t\t\t\tthis.isBrochureUploaded = false;\n\t\t\t}\n\n\t\t\tif (!this.placeAdFacade.getAdId()) {\n\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.NOT_CREATED;\n\t\t\t} else {\n\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetSelectedPropertyType(): void {\n\t\tthis.placeAdFacade.adStand$.pipe(takeUntil(this.destroy), distinctUntilChanged()).subscribe((propertyType: string) => {\n\t\t\tif (this.placeAdFacade?.standList?.length > 0) {\n\t\t\t\tconst selectedStand = this.placeAdFacade?.standList?.filter((stand) => stand?.id === propertyType);\n\n\t\t\t\tif (selectedStand) {\n\t\t\t\t\tthis.isParking = selectedStand[0]?.reference === 'parking';\n\t\t\t\t\tthis.isShowBedrooms = SHOW_BEDROOM_STAND_LIST?.includes(selectedStand[0]?.reference);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.placeAdService.stand = propertyType;\n\t\t\tthis.isFormSubmitted = false;\n\n\t\t\tif (this.aisleReference === AisleType.RENT_RESIDENTIAL) {\n\t\t\t\tthis.updateRentResidentialControls();\n\t\t\t} else if (this.aisleReference === AisleType.SALE_RESIDENTIAL) {\n\t\t\t\tthis.updateSaleResidentialControls();\n\t\t\t}\n\t\t});\n\t}\n\n\tremoveBrochure(): void {\n\t\tthis.placeAdFacade.removeBrochure().then(() => {\n\t\t\tthis.brochureFileControl.patchValue(undefined);\n\t\t\tthis.isBrochureUploaded = false;\n\t\t\tthis.brochureFile = null;\n\t\t});\n\t}\n\n\tuploadFile(brochure: HTMLInputElement): void {\n\t\tbrochure.value = '';\n\t\tbrochure.click();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.valuationData = this.propertyWorthState.getValuationInfo();\n\t\tthis.placeAdFacade.placeAdControls$\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.destroy),\n\t\t\t\tdistinctUntilChanged(),\n\t\t\t\tfilter((controls) => !!controls?.details?.length),\n\t\t\t)\n\t\t\t.subscribe((controls) => {\n\t\t\t\tthis.controls = controls.details;\n\n\t\t\t\tthis.aisleReference = this.placeAdFacade.getCurrentAisle().reference;\n\t\t\t\tthis.isCheckStandValue = this.aisleReference === AisleType.RENT_RESIDENTIAL || this.aisleReference === AisleType.SALE_RESIDENTIAL;\n\t\t\t\tthis.updateStyle =\n\t\t\t\t\tthis.aisleReference === AisleType.RENT_COMMERCIAL ||\n\t\t\t\t\tthis.aisleReference === AisleType.SALE_RESIDENTIAL ||\n\t\t\t\t\tthis.aisleReference === AisleType.SALE_COMMERCIAL;\n\n\t\t\t\tif (this.isCheckStandValue) {\n\t\t\t\t\tthis.getSelectedPropertyType();\n\t\t\t\t} else {\n\t\t\t\t\tthis.createDynamicForm({ controls: this.controls });\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formValidation();\n\t}\n}\n","@if (controls?.length) {\n\t<div>\n\t\t<h3 class=\"mb-4 heading-3 fg-general-5 mx-auto\">{{ 'n282' | translations }}</h3>\n\n\t\t<form [formGroup]=\"form\">\n\t\t\t<div class=\"row justify-content-between\">\n\t\t\t\t<div\n\t\t\t\t\t*ngFor=\"let control of controls\"\n\t\t\t\t\t[ngClass]=\"\n\t\t\t\t\t\tupdateStyle && (control.paramName === placeAdType.PROPERTY_SIZE || control?.paramName === placeAdType.PROPERTY_UNIT)\n\t\t\t\t\t\t\t? 'col-6 update-width'\n\t\t\t\t\t\t\t: 'col-12'\n\t\t\t\t\t\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"isParking ? parking : noParking\"></ng-template>\n\n\t\t\t\t\t<ng-template #noParking>\n\t\t\t\t\t\t<findqo-place-ad-input-control *ngIf=\"control?.fieldType?.includes('input')\" [form]=\"form\" [control]=\"control\"></findqo-place-ad-input-control>\n\n\t\t\t\t\t\t<findqo-place-ad-room-control\n\t\t\t\t\t\t\t[valuationData]=\"valuationData\"\n\t\t\t\t\t\t\t*ngIf=\"isShowBedrooms && control?.fieldType === 'radio'\"\n\t\t\t\t\t\t\t[form]=\"form\"\n\t\t\t\t\t\t\t[control]=\"control\"\n\t\t\t\t\t\t></findqo-place-ad-room-control>\n\n\t\t\t\t\t\t<findqo-place-ad-select-control *ngIf=\"control?.fieldType === 'dropdown'\" [form]=\"form\" [control]=\"control\"></findqo-place-ad-select-control>\n\n\t\t\t\t\t\t<findqo-place-ad-date-control *ngIf=\"control?.fieldType === 'date'\" [form]=\"form\" [control]=\"control\"></findqo-place-ad-date-control>\n\n\t\t\t\t\t\t<findqo-place-ad-radio-control\n\t\t\t\t\t\t\t*ngIf=\"!isCheckStandValue && control?.fieldType === 'radio'\"\n\t\t\t\t\t\t\t[form]=\"form\"\n\t\t\t\t\t\t\t[control]=\"control\"\n\t\t\t\t\t\t></findqo-place-ad-radio-control>\n\n\t\t\t\t\t\t<findqo-place-ad-checkbox-control *ngIf=\"control?.fieldType === 'checkbox'\" [form]=\"form\" [control]=\"control\"></findqo-place-ad-checkbox-control>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #parking>\n\t\t\t\t\t\t<div *ngIf=\"control.paramName === 'standId'\">\n\t\t\t\t\t\t\t<findqo-place-ad-select-control [form]=\"form\" [control]=\"control\"></findqo-place-ad-select-control>\n\n\t\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t\t<span class=\"d-inline-block text-body-regular fg-general-4 mb-2\">{{ 'n3265' | translations }}</span>\n\n\t\t\t\t\t\t\t\t<mat-radio-group formControlName=\"parkingAccessId\">\n\t\t\t\t\t\t\t\t\t<div class=\"row mx-0 align-items-center gap-3\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col checkbox-list px-0 w-100\">\n\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"updateRadioBtn(businessHours, false, '1')\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"d-flex justify-content-between align-items-center radio-btn-item px-3 fg-general-4\"\n\t\t\t\t\t\t\t\t\t\t\t\t[class.checked-option]=\"businessHours.checked\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-body-regular\" [class.fg-info-3]=\"businessHours.checked\">{{ 'n3256' | translations }}</span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-radio-button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t[value]=\"'1'\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"text-body-regular fg-general-4 option-selection-radio-btn\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t#businessHours\n\t\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"updateRadioBtn(businessHours, true, '1')\"\n\t\t\t\t\t\t\t\t\t\t\t\t></mat-radio-button>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"col checkbox-list px-0\">\n\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"updateRadioBtn(fullTime, false, '2')\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"d-flex justify-content-between align-items-center radio-btn-item p-3 fg-general-4\"\n\t\t\t\t\t\t\t\t\t\t\t\t[class.checked-option]=\"fullTime.checked\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-body-regular\" [class.fg-info-3]=\"fullTime.checked\">{{ 'n3257' | translations }}</span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-radio-button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t[value]=\"'2'\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"text-body-regular fg-general-4 option-selection-radio-btn\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t#fullTime\n\t\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"updateRadioBtn(fullTime, true, '2')\"\n\t\t\t\t\t\t\t\t\t\t\t\t></mat-radio-button>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"isFormSubmitted && form.get('parkingAccessId')?.hasError('required')\" class=\"text-small-12px-regular\">\n\t\t\t\t\t\t\t\t\t\t{{ 'n3272' | translations }}\n\t\t\t\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t\t\t\t</mat-radio-group>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<mat-label class=\"text-small-14px-regular lh-18px fg-general-4 mb-2 d-block\">{{ 'n3263' | translations }}</mat-label>\n\n\t\t\t\t\t\t\t<mat-form-field id=\"parkingCountControl\" appearance=\"outline\" class=\"w-100\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tmatInput\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tformControlName=\"parkingAvailableSpaceCount\"\n\t\t\t\t\t\t\t\t\tclass=\"w-100 text-body-regular\"\n\t\t\t\t\t\t\t\t\t[min]=\"1\"\n\t\t\t\t\t\t\t\t\t[placeholder]=\"'n3271' | translations\"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"form.get('parkingAvailableSpaceCount')?.hasError('required')\" class=\"text-small-12px-regular\">\n\t\t\t\t\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t\t\t\t\t</mat-error>\n\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"form.get('parkingAvailableSpaceCount')?.hasError('min')\" class=\"text-small-12px-regular\">\n\t\t\t\t\t\t\t\t\t{{ 'n3264' | translations }}\n\t\t\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t\t\t</mat-form-field>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\n\t\t<!-- For brochure upload. Applicable for all aisles except share residential as of now-->\n\t\t<div class=\"row mx-0\" *ngIf=\"aisleReference !== aisleType.SHARE_RESIDENTIAL\">\n\t\t\t<div class=\"col-12 px-0\">\n\t\t\t\t<mat-label class=\"mb-2 fg-general-4 text-body-regular d-block\">{{ 'n3445' | translations }}</mat-label>\n\n\t\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100 text-body-regular upload-file\" [class.bg-grey]=\"isBrochureUploaded\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tmatInput\n\t\t\t\t\t\t[placeholder]=\"'n3442' | translations\"\n\t\t\t\t\t\t(click)=\"!isBrochureUploaded ? uploadFile(uploadBrochure) : removeBrochure()\"\n\t\t\t\t\t\t[readonly]=\"true\"\n\t\t\t\t\t\tclass=\"cursor-pointer\"\n\t\t\t\t\t\t[formControl]=\"brochureFileControl\"\n\t\t\t\t\t\t[ngModel]=\"brochureFileControl.value\"\n\t\t\t\t\t/>\n\t\t\t\t\t<mat-icon matPrefix class=\"material-icons-outlined fs-18px fg-general-4\" *ngIf=\"isBrochureUploaded\">file_present</mat-icon>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tmat-stroked-button\n\t\t\t\t\t\tmatSuffix\n\t\t\t\t\t\tclass=\"fg-prim-2 text-body-regular lh-40px brochure-btn bg-basic-1\"\n\t\t\t\t\t\t(click)=\"!isBrochureUploaded ? uploadFile(uploadBrochure) : removeBrochure()\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<mat-icon class=\"material-icons-outlined d-inline-block align-middle\">{{ !isBrochureUploaded ? 'file_upload' : 'delete' }}</mat-icon>\n\t\t\t\t\t\t{{ !isBrochureUploaded ? ('n3441' | translations) : ('n121' | translations) }}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<mat-error *ngIf=\"brochureFileControl?.hasError && brochureFileControl?.hasError('uploadFailed')\" class=\"text-caption-regular\">\n\t\t\t\t\t\t{{ 'n3457' | translations }}\n\t\t\t\t\t</mat-error>\n\n\t\t\t\t\t<mat-error *ngIf=\"brochureFileControl?.hasError && brochureFileControl?.hasError('exceededSize')\" class=\"text-caption-regular\">\n\t\t\t\t\t\t{{ 'n3456' | translations }}\n\t\t\t\t\t</mat-error>\n\n\t\t\t\t\t<mat-hint class=\"text-caption-regular\">\n\t\t\t\t\t\t{{ !isBrochureUploaded ? ('n3456' | translations) : ('n3455' | translations) }}\n\t\t\t\t\t</mat-hint>\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<input type=\"file\" class=\"d-none\" #uploadBrochure (change)=\"onBorchureUpload($event)\" accept=\".pdf,.doc,.docx\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- <findqo-place-ad-tab-buttons (nextTab)=\"onNext()\"></findqo-place-ad-tab-buttons> -->\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdCheckboxControlComponent } from './place-ad-checkbox-control.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdCheckboxControlComponent],\n\timports: [SharedModule, MatCheckboxModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdCheckboxControlComponent],\n})\nexport class PlaceAdCheckboxControlModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdDateControlComponent } from './place-ad-date-control.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdDateControlComponent],\n\timports: [SharedModule, MatInputModule, MatDatepickerModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdDateControlComponent],\n})\nexport class PlaceAdDateControlModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { PlaceAdInputControlComponent } from './place-ad-input-control.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdInputControlComponent],\n\timports: [SharedModule, MatInputModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdInputControlComponent],\n})\nexport class PlaceAdInputControlModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdRadioControlComponent } from './place-ad-radio-control.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdRadioControlComponent],\n\timports: [SharedModule, MatRadioModule, MatInputModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdRadioControlComponent],\n})\nexport class PlaceAdRadioControlModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdRoomControlComponent } from './place-ad-room-control.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdRoomControlComponent],\n\timports: [SharedModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdRoomControlComponent],\n})\nexport class PlaceAdRoomControlModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdSelectControlComponent } from './place-ad-select-control.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdSelectControlComponent],\n\timports: [SharedModule, MatInputModule, MatSelectModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdSelectControlComponent],\n})\nexport class PlaceAdSelectControlModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdDetailsComponent } from './place-ad-details.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { PlaceAdCheckboxControlModule } from '../place-ad-checkbox-control/place-ad-checkbox-control.module';\nimport { PlaceAdDateControlModule } from '../place-ad-date-control/place-ad-date-control.module';\nimport { PlaceAdInputControlModule } from '../place-ad-input-control/place-ad-input-control.module';\nimport { PlaceAdRadioControlModule } from '../place-ad-radio-control/place-ad-radio-control.module';\nimport { PlaceAdRoomControlModule } from '../place-ad-room-control/place-ad-room-control.module';\nimport { PlaceAdSelectControlModule } from '../place-ad-select-control/place-ad-select-control.module';\n\n@NgModule({\n\tdeclarations: [PlaceAdDetailsComponent],\n\timports: [\n\t\tSharedModule,\n\t\tSharedModule,\n\t\tPlaceAdInputControlModule,\n\t\tPlaceAdTabButtonsModule,\n\t\tPlaceAdDateControlModule,\n\t\tPlaceAdRoomControlModule,\n\t\tPlaceAdSelectControlModule,\n\t\tPlaceAdRadioControlModule,\n\t\tPlaceAdCheckboxControlModule,\n\t\tMatRadioModule,\n\t\tMatInputModule,\n\t\tMatNativeDateModule,\n\t\tMatCheckboxModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t],\n\texports: [PlaceAdDetailsComponent],\n})\nexport class PlaceAdDetailsModule {}\n","import { Component, OnInit, signal } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { PropertyWorthState } from '@core/data-access/states/property-worth.state';\nimport { PlaceAdDataStatus, PlaceAdTabIndex } from '@core/enums';\nimport { CommonItem, Ericode } from '@core/models';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { ButtonType } from '@shared/components/button/button.component';\nimport { DestroyService } from '@shared/services/destroy.service';\nimport { BehaviorSubject, Observable, debounceTime, distinctUntilChanged, finalize, map, of, startWith, switchMap, takeUntil, tap } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n// TODO: Refactor and optimize the codes here.\n@Component({\n    selector: 'findqo-place-ad-location',\n    templateUrl: './place-ad-location.component.html',\n    styleUrls: ['./place-ad-location.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdLocationComponent implements OnInit {\n\tconstructor(\n\t\tprivate fb: FormBuilder,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate destroy: DestroyService,\n\t\tprivate propertyWorthState: PropertyWorthState,\n\t) {\n\t\tthis.adId$ = this.placeAdFacade.adId$;\n\t}\n\n\tform: FormGroup;\n\tericodeForm: FormGroup;\n\tdisplayAddressForm: FormGroup;\n\n\tlocation$ = new BehaviorSubject<CommonItem[]>(null);\n\tcountyAreaList$ = new BehaviorSubject<CommonItem[]>(null);\n\tsearch = new FormControl('');\n\tallLocations: CommonItem[] = [];\n\tisLoadingData$: Observable<boolean>;\n\tadId$: Observable<string>;\n\n\tsearchCountyArea = new FormControl('');\n\tcountyArea: CommonItem[] = [];\n\tupdatedStatus: PlaceAdDataStatus = PlaceAdDataStatus?.NOT_CREATED; //to get the status of data updated again after submitting once and perform action accordingly\n\tupdatedCountyList: CommonItem[] = [];\n\tupdatedCountyAreaList: CommonItem[] = [];\n\tshowEir = true;\n\tisEirCodeSelected = false;\n\tselectedEirCode: string;\n\tisExactAddressHidden = false;\n\thideExactAddressControl = new FormControl(false);\n\tselectedAddressEricode: Ericode;\n\tisSearching = signal(false);\n\n\tpropertyValuationData: any;\n\n\treadonly buttonType = ButtonType;\n\n\teirCodeOptions$: Observable<Ericode[]>;\n\n\tupdateAreaList(countyId = '') {\n\t\tthis.form.get('countyAreaId').reset();\n\t\tlet county_Id = countyId;\n\n\t\tif (!county_Id) {\n\t\t\tcounty_Id = this.form.get('countyId').value;\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.placeAdFacade.updateCountyAreaList(county_Id).then(() => {\n\t\t\t\tthis.countyArea = this.placeAdFacade.getPlaceAdControls()?.location[1]?.values;\n\n\t\t\t\tthis.countyAreaList$.next(this.countyArea);\n\t\t\t\tthis.search.patchValue('');\n\t\t\t\tresolve(true);\n\t\t\t});\n\t\t});\n\t}\n\n\tsearchCities(): void {\n\t\tthis.search.valueChanges\n\t\t\t.pipe(\n\t\t\t\tstartWith(''),\n\t\t\t\tdebounceTime(100),\n\t\t\t\tmap((data) => data?.toLowerCase()),\n\t\t\t\ttakeUntil(this.destroy),\n\t\t\t)\n\t\t\t.subscribe((value) => {\n\t\t\t\tthis.updatedCountyList = this.allLocations?.filter((data) => data?.name?.toLowerCase().includes(value));\n\n\t\t\t\tthis.location$.next(this.updatedCountyList);\n\n\t\t\t\tthis.form.get('countyId')?.value ? this.form.get('countyAreaId')?.enable() : this.form.get('countyAreaId')?.disable();\n\t\t\t});\n\t}\n\n\tasync onNext(): Promise<boolean> {\n\t\tif (this.showEir) {\n\t\t\tthis.placeAdService.markFormFieldTouched(this.ericodeForm);\n\t\t\tthis.placeAdService.markFormFieldTouched(this.displayAddressForm);\n\n\t\t\tconst IS_EDITMODE = this.placeAdFacade.getEditAdData();\n\n\t\t\t/** If user selects eircode form and ad is not in edit mode then pass eircode, county, county area data  */\n\n\t\t\tif (this.ericodeForm.valid && this.selectedEirCode === this.ericodeForm.get('address').value && !IS_EDITMODE) {\n\t\t\t\tthis.placeAdService.addEirCode(this.selectedAddressEricode?.eirCode);\n\t\t\t\tthis.placeAdService.addCountyData(this.selectedAddressEricode?.county, this.selectedAddressEricode?.countyArea);\n\t\t\t\tthis.updateDisplayAddress();\n\n\t\t\t\treturn true;\n\t\t\t} else if (IS_EDITMODE) {\n\t\t\t\tthis.updateDisplayAddress();\n\t\t\t\tthis.placeAdService.addEirCode(this.selectedAddressEricode?.eirCode);\n\t\t\t\tthis.placeAdService.addCountyData(this.selectedAddressEricode?.county, this.selectedAddressEricode?.countyArea);\n\n\t\t\t\treturn true;\n\t\t\t} else if (this.propertyValuationData) {\n\t\t\t\tthis.updateDisplayAddress();\n\t\t\t\tthis.placeAdService.addEirCode(this.propertyValuationData?.eirCode);\n\t\t\t\tthis.placeAdService.addCountyData(this.propertyValuationData?.county, this.propertyValuationData?.countyArea);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.ericodeForm.get('address').setErrors({ incorrect: true });\n\t\t\t\tthis.ericodeForm.updateValueAndValidity();\n\t\t\t\tthis.ericodeForm.markAllAsTouched();\n\t\t\t}\n\t\t} else {\n\t\t\t/** If user selects manual entry of location then pass empty eircode, remove county data and then update place ad form data */\n\t\t\tthis.placeAdService.markFormFieldTouched(this.form);\n\n\t\t\tif (this.form.valid) {\n\t\t\t\tif (this.updatedStatus !== PlaceAdDataStatus?.UPDATED) {\n\t\t\t\t\tthis.placeAdService.addEirCode('');\n\t\t\t\t\tthis.placeAdService.addDisplayAddress('');\n\t\t\t\t\tthis.placeAdService.deleteCountyData();\n\t\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\t\t\t\tthis.updateAd();\n\t\t\t\t} else {\n\t\t\t\t\tthis.placeAdService.directTabIndexUpdate(PlaceAdTabIndex.TAB_1);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tupdateDisplayAddress(): void {\n\t\tconst DISPLAY_ADDRESS = this.displayAddressForm.get('displayAddress').value;\n\n\t\t/** If user selects to change display address and form is valid then pass display address key & update place ad form data.\n\t\t *  If user change the selection then remove display address key and update place ad form data\n\t\t */\n\n\t\tif (this.isExactAddressHidden) {\n\t\t\tconst GET_AD_DATA = this.placeAdFacade.getAdData();\n\n\t\t\tif (this.displayAddressForm.valid && DISPLAY_ADDRESS.trim() !== '') {\n\t\t\t\tthis.placeAdService.addDisplayAddress(DISPLAY_ADDRESS);\n\t\t\t\tthis.placeAdService.addEirCode(this.selectedAddressEricode?.eirCode || GET_AD_DATA?.location?.eirCode);\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.displayAddressForm);\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.ericodeForm);\n\t\t\t\tthis.updateAd();\n\t\t\t} else {\n\t\t\t\tthis.displayAddressForm.get('displayAddress').setErrors({ incorrect: true });\n\t\t\t\tthis.ericodeForm.updateValueAndValidity();\n\t\t\t\tthis.ericodeForm.markAllAsTouched();\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.ericodeForm.valid) {\n\t\t\t\tthis.placeAdService.addEirCode(this.selectedAddressEricode?.eirCode);\n\t\t\t\tthis.placeAdService.addDisplayAddress('');\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.ericodeForm);\n\t\t\t\tthis.updateAd();\n\t\t\t} else {\n\t\t\t\tthis.ericodeForm.get('address').setErrors({ incorrect: true });\n\t\t\t\tthis.ericodeForm.updateValueAndValidity();\n\t\t\t\tthis.ericodeForm.markAllAsTouched();\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateAd(): void {\n\t\tif (this.placeAdFacade.getAdId()) {\n\t\t\t// this.placeAdFacade.updateAd(PlaceAdTabIndex.TAB_1).then(() => {\n\t\t\t//  this.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t// });\n\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t} else {\n\t\t\tthis.placeAdService.directTabIndexUpdate(PlaceAdTabIndex.TAB_1);\n\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t}\n\t}\n\n\tonCountyUpdated(): void {\n\t\tthis.search.patchValue('');\n\t}\n\n\tonCountyAreaupdated(): void {\n\t\tthis.searchCountyArea.patchValue('');\n\t}\n\n\tonSearchCountyArea(): void {\n\t\tthis.searchCountyArea.valueChanges\n\t\t\t.pipe(\n\t\t\t\tstartWith(''),\n\t\t\t\tdebounceTime(100),\n\t\t\t\tmap((data) => data.toLowerCase()),\n\t\t\t\ttakeUntil(this.destroy),\n\t\t\t)\n\t\t\t.subscribe((value) => {\n\t\t\t\tthis.updatedCountyAreaList = this.countyArea.filter((data) => data?.name.toLowerCase().includes(value));\n\t\t\t\tthis.countyAreaList$.next(this.updatedCountyAreaList);\n\t\t\t});\n\t}\n\n\tcreateForm(): void {\n\t\tthis.form = this.fb.group({\n\t\t\tcountyId: ['', Validators.required],\n\t\t\tcountyAreaId: ['', Validators.required],\n\t\t\taddress: ['', [Validators.required, Validators.maxLength(500)]],\n\t\t});\n\t}\n\n\tcreateEriCodeForm(): void {\n\t\tthis.ericodeForm = this.fb.group({\n\t\t\taddress: ['', Validators.required],\n\t\t});\n\t}\n\n\tupdateEricode(address = ''): void {\n\t\tthis.ericodeForm.get('address').reset();\n\t\tlet ericode = address;\n\n\t\tif (!ericode) {\n\t\t\tericode = this.ericodeForm.get('address').value;\n\t\t}\n\n\t\tif (this.placeAdFacade.getIsEditMode()) {\n\t\t\tconst EDIT_DATA = this.placeAdFacade.getEditAdData();\n\n\t\t\tconst UPDATED_VALUES = {\n\t\t\t\taddress: EDIT_DATA?.location?.address,\n\t\t\t};\n\n\t\t\tthis.ericodeForm.patchValue(UPDATED_VALUES);\n\t\t\tthis.placeAdService.updatePlaceAdFormData(this.ericodeForm);\n\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\tthis.placeAdFacade.updateTabOnEditData(EDIT_DATA);\n\t\t}\n\t}\n\n\tupdateDisplayAddressForm(address = ''): void {\n\t\tthis.displayAddressForm.get('displayAddress').reset();\n\t\tlet displayAddress = address;\n\n\t\tif (!displayAddress) {\n\t\t\tdisplayAddress = this.displayAddressForm.get('displayAddress').value;\n\t\t}\n\n\t\t/** While editing ad if eircode key is present in response then show eircode form else show add location address manual form  */\n\n\t\tif (this.placeAdFacade.getIsEditMode()) {\n\t\t\tconst EDIT_DATA = this.placeAdFacade.getEditAdData();\n\n\t\t\tconst UPDATED_VALUES = {\n\t\t\t\tdisplayAddress: EDIT_DATA?.location?.displayAddress || EDIT_DATA?.location?.address,\n\t\t\t\tcounty: EDIT_DATA?.location?.county,\n\t\t\t\tcountyArea: EDIT_DATA?.location?.countyArea,\n\t\t\t};\n\n\t\t\tif (EDIT_DATA?.location?.eirCode) {\n\t\t\t\tthis.selectedAddressEricode = EDIT_DATA.location;\n\t\t\t\tthis.showEir = true;\n\t\t\t\tif (EDIT_DATA?.location?.displayAddress) {\n\t\t\t\t\tthis.hideExactAddressControl.patchValue(!!EDIT_DATA?.location?.displayAddress);\n\t\t\t\t\tthis.isExactAddressHidden = !!EDIT_DATA?.location?.displayAddress;\n\t\t\t\t}\n\n\t\t\t\tthis.displayAddressForm.patchValue(UPDATED_VALUES);\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.displayAddressForm);\n\t\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t\tthis.placeAdFacade.updateTabOnEditData(EDIT_DATA);\n\t\t\t} else {\n\t\t\t\tthis.showEir = !this.showEir;\n\t\t\t\tthis.ericodeForm.reset({ address: '' });\n\t\t\t\tthis.createForm();\n\t\t\t\tthis.formValidation();\n\t\t\t\tthis.fetchLocationData();\n\t\t\t}\n\t\t}\n\n\t\tif (this.propertyValuationData) {\n\t\t\tconst UPDATED_VALUES = {\n\t\t\t\tdisplayAddress: this.propertyValuationData?.address,\n\t\t\t\tcounty: this.propertyValuationData?.county,\n\t\t\t\tcountyArea: this.propertyValuationData?.countyArea,\n\t\t\t};\n\t\t\tconst location = {\n\t\t\t\taddress: this.propertyValuationData?.address,\n\t\t\t\tcounty: this.propertyValuationData?.county,\n\t\t\t\tcountyArea: this.propertyValuationData?.countyArea,\n\t\t\t\teirCode: this.propertyValuationData?.eirCode,\n\t\t\t};\n\t\t\tconst UPDATED_ADDRESS = {\n\t\t\t\taddress: this.propertyValuationData?.address,\n\t\t\t};\n\t\t\tthis.ericodeForm.patchValue(UPDATED_ADDRESS);\n\t\t\tthis.placeAdService.updatePlaceAdFormData(this.ericodeForm);\n\n\t\t\tthis.selectedAddressEricode = location;\n\t\t\tthis.showEir = true;\n\t\t\tthis.displayAddressForm.patchValue(UPDATED_VALUES);\n\t\t\tthis.placeAdService.updatePlaceAdFormData(this.displayAddressForm);\n\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t}\n\t}\n\n\tericodeFormValidation(): void {\n\t\tlet count = 0;\n\t\tthis.placeAdService\n\t\t\t.formValidationObservable(this.ericodeForm)\n\t\t\t.pipe(takeUntil(this.destroy))\n\t\t\t.subscribe(([prev, next]) => {\n\t\t\t\tif (!this.ericodeForm.valid) {\n\t\t\t\t\tthis.placeAdService.setStepsEnableStatus(0);\n\t\t\t\t\tthis.placeAdService.setTabIndex(0);\n\t\t\t\t} else {\n\t\t\t\t\tif (JSON.stringify(prev) !== JSON.stringify(next)) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif (this.placeAdFacade.getIsEditMode()) {\n\t\t\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t//to fetch filter data and add edit ad data if any\n\tfetchLocationData(): void {\n\t\tthis.placeAdFacade.isFetchedFilterData$\n\t\t\t.pipe(\n\t\t\t\tswitchMap((data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tthis.allLocations = this.placeAdFacade.getPlaceAdControls()?.location[0]?.values;\n\t\t\t\t\t\tthis.location$.next(this.allLocations);\n\t\t\t\t\t\treturn this.placeAdFacade.getEditAdData$();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\ttakeUntil(this.destroy),\n\t\t\t)\n\t\t\t.subscribe((editData) => {\n\t\t\t\tif (editData) {\n\t\t\t\t\tif (editData?.location?.eirCode) {\n\t\t\t\t\t\tthis.form.reset();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (editData?.county?.id) {\n\t\t\t\t\t\t\tconst UPDATED_VALUES = {\n\t\t\t\t\t\t\t\tcountyId: editData?.county?.id,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis.form.patchValue(UPDATED_VALUES);\n\t\t\t\t\t\t\tthis.updateAreaList(editData?.county?.id).then(() => {\n\t\t\t\t\t\t\t\tthis.patchFormValue();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tformValidation(): void {\n\t\tlet count = 0;\n\t\tthis.placeAdService\n\t\t\t.formValidationObservable(this.form)\n\t\t\t.pipe(takeUntil(this.destroy))\n\t\t\t.subscribe(([prev, next]) => {\n\t\t\t\tif (!this.form.valid) {\n\t\t\t\t\tthis.placeAdService.setStepsEnableStatus(PlaceAdTabIndex.TAB_0);\n\t\t\t\t\tthis.placeAdService.setTabIndex(PlaceAdTabIndex.TAB_0);\n\t\t\t\t} else {\n\t\t\t\t\tif (JSON.stringify(prev) !== JSON.stringify(next)) {\n\t\t\t\t\t\tcount++;\n\n\t\t\t\t\t\tif (this.placeAdFacade.getIsEditMode()) {\n\t\t\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t//to append edit data if any\n\tpatchFormValue(): void {\n\t\tconst EDIT_DATA = this.placeAdFacade.getEditAdData();\n\n\t\tconst UPDATED_VALUES = {\n\t\t\tcountyId: EDIT_DATA?.county?.id,\n\t\t\tcountyAreaId: EDIT_DATA?.countyArea?.id,\n\t\t\taddress: EDIT_DATA?.location?.address,\n\t\t};\n\n\t\tthis.form.patchValue(UPDATED_VALUES);\n\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\tthis.placeAdFacade.updateTabOnEditData(EDIT_DATA);\n\t}\n\n\ttoggleEntryMethod(): void {\n\t\tthis.showEir = !this.showEir;\n\t\tthis.ericodeForm.reset({ address: '' });\n\t\tthis.createForm();\n\t\tthis.formValidation();\n\t\tthis.fetchLocationData();\n\t\tthis.searchCities();\n\t\tthis.onSearchCountyArea();\n\t}\n\n\tupdateEirCode(event: MatAutocompleteSelectedEvent, eirCodeList: Ericode[]): void {\n\t\tthis.isEirCodeSelected = true;\n\t\tthis.selectedEirCode = event.option?.value;\n\t\tthis.selectedAddressEricode = eirCodeList.find((eirCode) => eirCode.address === this.selectedEirCode);\n\t}\n\n\tgetEirCodes(text: string, params: string): Observable<Ericode> {\n\t\treturn this.placeAdFacade.getEricode(text, params);\n\t}\n\n\teditAddress(): void {\n\t\tthis.ericodeForm.reset({ address: '' });\n\t\tthis.displayAddressForm.reset({ displayAddress: '' });\n\t\tthis.isEirCodeSelected = false;\n\t\tthis.isExactAddressHidden = false;\n\t}\n\n\ttoggleToEnterEricode(): void {\n\t\tthis.showEir = true;\n\t\tif (this.isEirCodeSelected) {\n\t\t\tthis.isEirCodeSelected = false;\n\t\t}\n\t}\n\n\tonSearch(): void {\n\t\tconst SEARCHED_KEYWORD = this.ericodeForm.get('address').value;\n\t\tif (SEARCHED_KEYWORD) {\n\t\t\tthis.isSearching.set(true);\n\t\t\tthis.getEirCodes(SEARCHED_KEYWORD, '1')\n\t\t\t\t.pipe(finalize(() => this.isSearching.set(false)))\n\t\t\t\t.subscribe();\n\t\t}\n\t}\n\n\tcreateAddressForm(): void {\n\t\tthis.displayAddressForm = this.fb.group({\n\t\t\tdisplayAddress: ['', [Validators.required, Validators.maxLength(200)]],\n\t\t\tcounty: [{ value: '', disabled: true }],\n\t\t\tcountyArea: [{ value: '', disabled: true }],\n\t\t\thideExactAddress: this.hideExactAddressControl,\n\t\t});\n\t}\n\n\thideExactAddress(event: MatCheckboxChange): void {\n\t\tthis.isExactAddressHidden = event.checked ? true : false;\n\t}\n\n\tcallEricodeApi(): void {\n\t\tthis.ericodeForm\n\t\t\t.get('address')\n\t\t\t.valueChanges.pipe(\n\t\t\t\tdebounceTime(300),\n\t\t\t\tdistinctUntilChanged(),\n\t\t\t\ttap(() => this.isSearching.set(true)), // Start searching when a value change is detected\n\t\t\t\tswitchMap((searchText: string) => {\n\t\t\t\t\tif (searchText.trim() === '') {\n\t\t\t\t\t\tthis.isSearching.set(false);\n\t\t\t\t\t\treturn of([]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.getEirCodes(searchText, '0').pipe(\n\t\t\t\t\t\t\tcatchError(() => {\n\t\t\t\t\t\t\t\tthis.isSearching.set(false);\n\t\t\t\t\t\t\t\treturn of([]);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\ttakeUntil(this.destroy),\n\t\t\t)\n\t\t\t.subscribe({\n\t\t\t\tnext: (eirCodes: any) => {\n\t\t\t\t\tthis.isSearching.set(false);\n\t\t\t\t\tthis.eirCodeOptions$ = of(eirCodes);\n\t\t\t\t\tif (this.selectedEirCode && eirCodes.length > 0) {\n\t\t\t\t\t\tthis.selectedAddressEricode = eirCodes[0];\n\n\t\t\t\t\t\tthis.displayAddressForm.patchValue({\n\t\t\t\t\t\t\tdisplayAddress: eirCodes[0]?.address,\n\t\t\t\t\t\t\tcountyArea: eirCodes[0]?.countyArea,\n\t\t\t\t\t\t\tcounty: eirCodes[0]?.county,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: () => this.isSearching.set(false),\n\t\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.propertyValuationData = this.propertyWorthState.getValuationInfo();\n\t\tthis.createEriCodeForm();\n\t\tthis.updateEricode();\n\t\tthis.callEricodeApi();\n\t\tthis.createAddressForm();\n\t\tthis.updateDisplayAddressForm();\n\t\tthis.ericodeFormValidation();\n\t\tthis.isEirCodeSelected = this.placeAdFacade.getIsEditMode() ? true : this.propertyValuationData?.eirCode ? true : false;\n\t}\n}\n","<div *ngIf=\"{ eirCodeOptions: eirCodeOptions$ | async } as vm\">\n\t<h3 class=\"lh-24px heading-3 mb-4\">{{ 'n3053' | translations }}</h3>\n\n\t<ng-container *ngIf=\"showEir; else manualLocationTemplate\">\n\t\t<form [formGroup]=\"ericodeForm\" *ngIf=\"!isEirCodeSelected\">\n\t\t\t<mat-label class=\"fg-general-4 text-small-14px-regular d-block\" for=\"eidControl\">{{ 'n3459' | translations }}</mat-label>\n\n\t\t\t<mat-form-field appearance=\"outline\" id=\"eidControl\" class=\"text-body-regular\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tmatInput\n\t\t\t\t\tformControlName=\"address\"\n\t\t\t\t\t[matAutocomplete]=\"auto\"\n\t\t\t\t\t[value]=\"selectedEirCode\"\n\t\t\t\t\t[placeholder]=\"'n3460' | translations\"\n\t\t\t\t\tclass=\"eircode-search\"\n\t\t\t\t/>\n\n\t\t\t\t<button mat-button color=\"primary\" class=\"text-body-regular position-relative\" [disabled]=\"isSearching()\" (click)=\"onSearch()\">\n\t\t\t\t\t<mat-icon class=\"overflow-visible\">search</mat-icon>\n\n\t\t\t\t\tSearch\n\n\t\t\t\t\t@if (isSearching()) {\n\t\t\t\t\t\t<mat-spinner class=\"position-absolute top-50 start-50 translate-middle\" diameter=\"16\"></mat-spinner>\n\t\t\t\t\t}\n\t\t\t\t</button>\n\n\t\t\t\t<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"updateEirCode($event, vm?.eirCodeOptions)\">\n\t\t\t\t\t<mat-option\n\t\t\t\t\t\t*ngFor=\"let option of vm?.eirCodeOptions; let first = first\"\n\t\t\t\t\t\t[value]=\"option?.address\"\n\t\t\t\t\t\tclass=\"mb-1 py-5px fg-general-4 text-paragraph-regular lh-22px\"\n\t\t\t\t\t\t[class.mt-2]=\"first\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ option?.address }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t\n\t\t\t\t\t<mat-option *ngIf=\"vm?.eirCodeOptions?.length === 0 && ericodeForm.get('address')?.value?.trim().length > 2 && !isSearching()\" [disabled]=\"true\">\n\t\t\t\t\t\t{{ 'n3465' | translations }}\n\t\t\t\t\t  </mat-option>\t\t  \n\t\t\t\t</mat-autocomplete>\n\n\t\t\t\t<mat-error *ngIf=\"ericodeForm.get('address').hasError\">\n\t\t\t\t\t<span class=\"fs-12px fw-400 lh-16px\">{{ 'n3513' | translations }}</span>\n\t\t\t\t</mat-error>\n\t\t\t</mat-form-field>\t\n\n\t\t\t<div>\n\t\t\t\t<span class=\"fg-general-4 text-small-14px-regular d-block mb-1\">{{ 'n3461' | translations }}</span>\n\n\t\t\t\t<button mat-button color=\"primary\" (click)=\"toggleEntryMethod()\" class=\"px-0 text-body-regular eir-btn\">\n\t\t\t\t\t{{ 'n3462' | translations }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\n\t\t<div *ngIf=\"isEirCodeSelected\">\n\t\t\t<span class=\"fg-general-3 text-small-14px-regular d-block\">{{ 'n3466' | translations }}</span>\n\n\t\t\t<span class=\"fg-general-5 text-small-14px-regular d-block my-2\">{{ ericodeForm.get('address').value }}</span>\n\n\t\t\t<button mat-button color=\"primary\" (click)=\"editAddress()\" class=\"px-0 text-body-regular eir-btn\">{{ 'n3467' | translations }}</button>\n\t\t</div>\n\n\t\t<mat-checkbox\n\t\t\tclass=\"fs-14px fw-400 lh-18px fg-general-5 mt-2 d-block\"\n\t\t\tcolor=\"primary\"\n\t\t\t(change)=\"hideExactAddress($event)\"\n\t\t\t[formControl]=\"hideExactAddressControl\"\n\t\t\t*ngIf=\"isEirCodeSelected || isExactAddressHidden\"\n\t\t>\n\t\t\t{{ 'n3509' | translations }}\n\t\t</mat-checkbox>\n\n\t\t<div *ngIf=\"isExactAddressHidden\">\n\t\t\t<form [formGroup]=\"displayAddressForm\" class=\"display-address mt-3\">\n\t\t\t\t<mat-label class=\"fg-general-4 fs-14px lh-18px fw-400 d-block\" for=\"addressControl\">{{ 'n3510' | translations }}</mat-label>\n\n\t\t\t\t<mat-form-field appearance=\"outline\" id=\"displayAddressControl\" class=\"address-field\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tmatInput\n\t\t\t\t\t\tformControlName=\"displayAddress\"\n\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\tclass=\"rounded-1 address-area text-small-14px-regular\"\n\t\t\t\t\t\taria-label=\"Display Address\"\n\t\t\t\t\t\t*ngIf=\"isExactAddressHidden\"\n\t\t\t\t\t></textarea>\n\n\t\t\t\t\t<mat-error *ngIf=\"displayAddressForm.get('displayAddress').hasError\">\n\t\t\t\t\t\t<span class=\"fs-12px fw-400 lh-16px\">{{ 'n3556' | translations }}</span>\n\t\t\t\t\t</mat-error>\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<mat-label class=\"fg-general-4 text-small-14px-regular d-block\" for=\"countyArea\">{{ 'n3056' | translations }}</mat-label>\n\n\t\t\t\t<mat-form-field appearance=\"outline\">\n\t\t\t\t\t<input class=\"text-small-14px-regular\" matInput type=\"text\" formControlName=\"countyArea\" />\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<mat-label class=\"fg-general-4 text-small-14px-regular d-block\" for=\"countyControl\">{{ 'n3054' | translations }}</mat-label>\n\n\t\t\t\t<mat-form-field appearance=\"outline\">\n\t\t\t\t\t<input matInput class=\"text-small-14px-regular\" type=\"text\" formControlName=\"county\" />\n\t\t\t\t</mat-form-field>\n\t\t\t</form>\n\t\t</div>\n\t</ng-container>\n\n\t<ng-template #manualLocationTemplate>\n\t\t<form [formGroup]=\"form\" *ngIf=\"location$ | async as locations\">\n\t\t\t<mat-label class=\"fg-general-4 text-small-14px-regular d-block\" for=\"countyControl\">{{ 'n3054' | translations }}</mat-label>\n\n\t\t\t<mat-form-field appearance=\"outline\" id=\"countyControl\" class=\"fs-14px lh-18px fw-400\">\n\t\t\t\t<mat-select\n\t\t\t\t\tformControlName=\"countyId\"\n\t\t\t\t\trequired\n\t\t\t\t\t(selectionChange)=\"updateAreaList()\"\n\t\t\t\t\t[placeholder]=\"'n3055' | translations\"\n\t\t\t\t\tpanelClass=\"location-list\"\n\t\t\t\t\toverlayPanelClass=\"location-overlay\"\n\t\t\t\t\t(closed)=\"onCountyUpdated()\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"pt-2 pb-3 border-bottom px-3 search-container\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"w-100 search-location px-2 fs-14px lh-18px fw-400 fg-general-4\"\n\t\t\t\t\t\t\t[formControl]=\"search\"\n\t\t\t\t\t\t\t(keydown.space)=\"$event.stopPropagation()\"\n\t\t\t\t\t\t\t#searchInput\n\t\t\t\t\t\t\t[placeholder]=\"'n681' | translations\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<!-- TODO:need to ask design team to update what should be shown. Keeping this for now -->\n\t\t\t\t\t\t<span *ngIf=\"locations.length < 1\" class=\"text-caption-regular fg-general-3\">No search values found.</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<mat-option *ngFor=\"let item of locations\" [value]=\"item?.id\" class=\"search-option fs-14px lh-18px fw-400\">\n\t\t\t\t\t\t{{ item.name }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\n\t\t\t\t<mat-error *ngIf=\"form.get('countyId').hasError('required')\" class=\"text-caption-regular\">\n\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t</mat-error>\n\t\t\t</mat-form-field>\n\n\t\t\t<mat-label class=\"fg-general-4 text-body-regular d-block\" for=\"countyArea\">{{ 'n3056' | translations }}</mat-label>\n\n\t\t\t<mat-form-field appearance=\"outline\" id=\"countyArea\" class=\"text-body-regular\">\n\t\t\t\t<mat-select formControlName=\"countyAreaId\" required [placeholder]=\"'n3057' | translations\" panelClass=\"location-list\" (closed)=\"onCountyAreaupdated()\">\n\t\t\t\t\t<div class=\"pt-2 pb-3 border-bottom px-3 search-container\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"w-100 search-location px-2 fs-14px lh-18px fw-400 fg-general-4\"\n\t\t\t\t\t\t\t[formControl]=\"searchCountyArea\"\n\t\t\t\t\t\t\t(keydown.space)=\"$event.stopPropagation()\"\n\t\t\t\t\t\t\t#searchCountyAreaValue\n\t\t\t\t\t\t\t[placeholder]=\"'n681' | translations\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<mat-option *ngFor=\"let item of countyAreaList$ | async; let i = index\" [value]=\"item?.id\" class=\"search-option text-body-regular\">\n\t\t\t\t\t\t{{ item.name }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t\t<mat-error *ngIf=\"form.get('countyAreaId').hasError('required')\" class=\"text-caption-regular\">\n\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t</mat-error>\n\t\t\t</mat-form-field>\n\n\t\t\t<mat-label class=\"fg-general-4 text-body-regular d-block\" for=\"addressControl\">{{ 'n3510' | translations }}</mat-label>\n\n\t\t\t<mat-form-field appearance=\"outline\" id=\"addressControl\" class=\"address-field\">\n\t\t\t\t<textarea\n\t\t\t\t\tmatInput\n\t\t\t\t\tformControlName=\"address\"\n\t\t\t\t\trows=\"4\"\n\t\t\t\t\tclass=\"rounded-1 address-area fs-14px lh-18px fw-400\"\n\t\t\t\t\taria-label=\"Enter address\"\n\t\t\t\t\t[placeholder]=\"'n3576' | translations\"\n\t\t\t\t></textarea>\n\n\t\t\t\t<mat-hint class=\"mt-2 fg-general-3 text-small-12px-regular d-flex align-items-center\">\n\t\t\t\t\t<mat-icon class=\"fg-general-2 fs-15px me-1\">error_outline</mat-icon>\n\t\t\t\t\t<span>{{ 'n3575' | translations }}</span>\n\t\t\t\t</mat-hint>\n\n\t\t\t\t<mat-error *ngIf=\"form.get('address').hasError('required'); else otherError\" class=\"text-caption-regular\">\n\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t</mat-error>\n\n\t\t\t\t<ng-template #otherError>\n\t\t\t\t\t<mat-error *ngIf=\"form.get('address').hasError('maxlength')\" class=\"text-caption-regular\">\n\t\t\t\t\t\t{{ 'n3225' | translations }}\n\t\t\t\t\t</mat-error>\n\t\t\t\t</ng-template>\n\t\t\t</mat-form-field>\n\n\t\t\t<span class=\"fg-general-4 text-small-14px-regular d-block mb-1 mt-4\">{{ 'n3463' | translations }}</span>\n\n\t\t\t<button mat-button color=\"primary\" (click)=\"toggleToEnterEricode()\" class=\"px-0 text-body-regular eir-btn\" type=\"button\">\n\t\t\t\t{{ 'n3464' | translations }}\n\t\t\t</button>\n\t\t</form>\n\t</ng-template>\n</div>\n\n<!-- <findqo-place-ad-tab-buttons (nextTab)=\"onNext()\" [buttonLabel]=\"'n3210'\" *ngIf=\"adId$ | async; else otherButtons\"></findqo-place-ad-tab-buttons>\n\n<ng-template #otherButtons>\n\t<findqo-place-ad-tab-buttons (nextTab)=\"onNext()\" [buttonLabel]=\"'n292'\"></findqo-place-ad-tab-buttons>\n</ng-template> -->\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdLocationComponent } from './place-ad-location.component';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n\tdeclarations: [PlaceAdLocationComponent],\n\timports: [\n\t\tSharedModule,\n\t\tMatAutocompleteModule,\n\t\tMatCheckboxModule,\n\t\tMatSelectModule,\n\t\tMatInputModule,\n\t\tPlaceAdTabButtonsModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tMatProgressSpinnerModule,\n\t],\n\texports: [PlaceAdLocationComponent],\n})\nexport class PlaceAdLocationModule {}\n","import * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, NgZone, RendererFactory2, Injectable, InjectionToken, ElementRef, booleanAttribute, Directive, Input, ViewContainerRef, ChangeDetectorRef, EventEmitter, Injector, afterNextRender, numberAttribute, Output, TemplateRef, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { _ as _getEventTarget, a as _getShadowRoot } from './shadow-dom-B0oHn41l.mjs';\nimport { a as isFakeTouchstartFromScreenReader, i as isFakeMousedownFromScreenReader } from './fake-event-detection-DWOdFTFz.mjs';\nimport { a as coerceElement, c as coerceNumberProperty } from './element-x4z00URv.mjs';\nimport { _ as _bindEventWithOptions } from './backwards-compatibility-DHR38MsD.mjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-Cu9AvjH9.mjs';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from './scrolling.mjs';\nexport { CdkScrollable as ɵɵCdkScrollable } from './scrolling.mjs';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport { _ as _IdGenerator } from './id-generator-Dw_9dSDu.mjs';\nimport { c as coerceArray } from './array-I1yfCXUO.mjs';\nimport './platform-DmdVEw_C.mjs';\nimport './scrolling-BkvA05C8.mjs';\nimport './bidi.mjs';\nimport './recycle-view-repeater-strategy-DoWdPqVw.mjs';\nimport './data-source-D34wiQZj.mjs';\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n  const clone = node.cloneNode(true);\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n  for (let i = 0; i < descendantsWithId.length; i++) {\n    descendantsWithId[i].removeAttribute('id');\n  }\n  if (nodeName === 'canvas') {\n    transferCanvasData(node, clone);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node, clone);\n  }\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n  const descendantElements = node.querySelectorAll(selector);\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll(selector);\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n  // Browsers throw an error when assigning the value of a file input programmatically.\n  if (clone.type !== 'file') {\n    clone.value = source.value;\n  }\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n  const context = clone.getContext('2d');\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n  const rect = element.getBoundingClientRect();\n  // We need to clone the `clientRect` here, because all the values on it are readonly\n  // and we need to be able to update them. Also we can't use a spread here, because\n  // the values on a `DOMRect` aren't own properties. See:\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = clientRect;\n  return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n  domRect.top += top;\n  domRect.bottom = domRect.top + domRect.height;\n  domRect.left += left;\n  domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height\n  } = rect;\n  const xThreshold = width * threshold;\n  const yThreshold = height * threshold;\n  return pointerY > top - yThreshold && pointerY < bottom + yThreshold && pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n  _document;\n  /** Cached positions of the scrollable parent elements. */\n  positions = new Map();\n  constructor(_document) {\n    this._document = _document;\n  }\n  /** Clears the cached positions. */\n  clear() {\n    this.positions.clear();\n  }\n  /** Caches the positions. Should be called at the beginning of a drag sequence. */\n  cache(elements) {\n    this.clear();\n    this.positions.set(this._document, {\n      scrollPosition: this.getViewportScrollPosition()\n    });\n    elements.forEach(element => {\n      this.positions.set(element, {\n        scrollPosition: {\n          top: element.scrollTop,\n          left: element.scrollLeft\n        },\n        clientRect: getMutableClientRect(element)\n      });\n    });\n  }\n  /** Handles scrolling while a drag is taking place. */\n  handleScroll(event) {\n    const target = _getEventTarget(event);\n    const cachedPosition = this.positions.get(target);\n    if (!cachedPosition) {\n      return null;\n    }\n    const scrollPosition = cachedPosition.scrollPosition;\n    let newTop;\n    let newLeft;\n    if (target === this._document) {\n      const viewportScrollPosition = this.getViewportScrollPosition();\n      newTop = viewportScrollPosition.top;\n      newLeft = viewportScrollPosition.left;\n    } else {\n      newTop = target.scrollTop;\n      newLeft = target.scrollLeft;\n    }\n    const topDifference = scrollPosition.top - newTop;\n    const leftDifference = scrollPosition.left - newLeft;\n    // Go through and update the cached positions of the scroll\n    // parents that are inside the element that was scrolled.\n    this.positions.forEach((position, node) => {\n      if (position.clientRect && target !== node && target.contains(node)) {\n        adjustDomRect(position.clientRect, topDifference, leftDifference);\n      }\n    });\n    scrollPosition.top = newTop;\n    scrollPosition.left = newLeft;\n    return {\n      top: topDifference,\n      left: leftDifference\n    };\n  }\n  /**\n   * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n   * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n   * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n   * if the element is offset by something like the `BlockScrollStrategy`.\n   */\n  getViewportScrollPosition() {\n    return {\n      top: window.scrollY,\n      left: window.scrollX\n    };\n  }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n  const rootNodes = viewRef.rootNodes;\n  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n    return rootNodes[0];\n  }\n  const wrapper = _document.createElement('div');\n  rootNodes.forEach(node => wrapper.appendChild(node));\n  return wrapper;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      if (value) {\n        dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n      } else {\n        dest.removeProperty(key);\n      }\n    }\n  }\n  return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n  const userSelect = enable ? '' : 'none';\n  extendStyles(element.style, {\n    'touch-action': enable ? '' : 'none',\n    '-webkit-user-drag': enable ? '' : 'none',\n    '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n    'user-select': userSelect,\n    '-ms-user-select': userSelect,\n    '-webkit-user-select': userSelect,\n    '-moz-user-select': userSelect\n  });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n  extendStyles(element.style, {\n    position: enable ? '' : 'fixed',\n    top: enable ? '' : '0',\n    opacity: enable ? '' : '0',\n    left: enable ? '' : '-999em'\n  }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n  return initialTransform && initialTransform != 'none' ? transform + ' ' + initialTransform : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n  target.style.width = `${sourceRect.width}px`;\n  target.style.height = `${sourceRect.height}px`;\n  target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n  // Round the transforms since some browsers will\n  // blur the elements for sub-pixel transforms.\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n  // Some browsers will return it in seconds, whereas others will return milliseconds.\n  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n  return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n  const computedStyle = getComputedStyle(element);\n  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n  // If there's no transition for `all` or `transform`, we shouldn't do anything.\n  if (!property) {\n    return 0;\n  }\n  // Get the index of the property that we're interested in and match\n  // it up to the same index in `transition-delay` and `transition-duration`.\n  const propertyIndex = transitionedProperties.indexOf(property);\n  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) + parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n  const value = computedStyle.getPropertyValue(name);\n  return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\nclass PreviewRef {\n  _document;\n  _rootElement;\n  _direction;\n  _initialDomRect;\n  _previewTemplate;\n  _previewClass;\n  _pickupPositionOnPage;\n  _initialTransform;\n  _zIndex;\n  _renderer;\n  /** Reference to the view of the preview element. */\n  _previewEmbeddedView;\n  /** Reference to the preview element. */\n  _preview;\n  get element() {\n    return this._preview;\n  }\n  constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex, _renderer) {\n    this._document = _document;\n    this._rootElement = _rootElement;\n    this._direction = _direction;\n    this._initialDomRect = _initialDomRect;\n    this._previewTemplate = _previewTemplate;\n    this._previewClass = _previewClass;\n    this._pickupPositionOnPage = _pickupPositionOnPage;\n    this._initialTransform = _initialTransform;\n    this._zIndex = _zIndex;\n    this._renderer = _renderer;\n  }\n  attach(parent) {\n    this._preview = this._createPreview();\n    parent.appendChild(this._preview);\n    // The null check is necessary for browsers that don't support the popover API.\n    // Note that we use a string access for compatibility with Closure.\n    if (supportsPopover(this._preview)) {\n      this._preview['showPopover']();\n    }\n  }\n  destroy() {\n    this._preview.remove();\n    this._previewEmbeddedView?.destroy();\n    this._preview = this._previewEmbeddedView = null;\n  }\n  setTransform(value) {\n    this._preview.style.transform = value;\n  }\n  getBoundingClientRect() {\n    return this._preview.getBoundingClientRect();\n  }\n  addClass(className) {\n    this._preview.classList.add(className);\n  }\n  getTransitionDuration() {\n    return getTransformTransitionDurationInMs(this._preview);\n  }\n  addEventListener(name, handler) {\n    return this._renderer.listen(this._preview, name, handler);\n  }\n  _createPreview() {\n    const previewConfig = this._previewTemplate;\n    const previewClass = this._previewClass;\n    const previewTemplate = previewConfig ? previewConfig.template : null;\n    let preview;\n    if (previewTemplate && previewConfig) {\n      // Measure the element before we've inserted the preview\n      // since the insertion could throw off the measurement.\n      const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n      viewRef.detectChanges();\n      preview = getRootNode(viewRef, this._document);\n      this._previewEmbeddedView = viewRef;\n      if (previewConfig.matchSize) {\n        matchElementSize(preview, rootRect);\n      } else {\n        preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n      }\n    } else {\n      preview = deepCloneNode(this._rootElement);\n      matchElementSize(preview, this._initialDomRect);\n      if (this._initialTransform) {\n        preview.style.transform = this._initialTransform;\n      }\n    }\n    extendStyles(preview.style, {\n      // It's important that we disable the pointer events on the preview, because\n      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n      'pointer-events': 'none',\n      // If the preview has a margin, it can throw off our positioning so we reset it. The reset\n      // value for `margin-right` needs to be `auto` when opened as a popover, because our\n      // positioning is always top/left based, but native popover seems to position itself\n      // to the top/right if `<html>` or `<body>` have `dir=\"rtl\"` (see #29604). Setting it\n      // to `auto` pushed it to the top/left corner in RTL and is a noop in LTR.\n      'margin': supportsPopover(preview) ? '0 auto 0 0' : '0',\n      'position': 'fixed',\n      'top': '0',\n      'left': '0',\n      'z-index': this._zIndex + ''\n    }, importantProperties);\n    toggleNativeDragInteractions(preview, false);\n    preview.classList.add('cdk-drag-preview');\n    preview.setAttribute('popover', 'manual');\n    preview.setAttribute('dir', this._direction);\n    if (previewClass) {\n      if (Array.isArray(previewClass)) {\n        previewClass.forEach(className => preview.classList.add(className));\n      } else {\n        preview.classList.add(previewClass);\n      }\n    }\n    return preview;\n  }\n}\n/** Checks whether a specific element supports the popover API. */\nfunction supportsPopover(element) {\n  return 'showPopover' in element;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = {\n  passive: false\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = {\n  passive: false,\n  capture: true\n};\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n  _config;\n  _document;\n  _ngZone;\n  _viewportRuler;\n  _dragDropRegistry;\n  _renderer;\n  _rootElementCleanups;\n  _cleanupShadowRootSelectStart;\n  /** Element displayed next to the user's pointer while the element is dragged. */\n  _preview;\n  /** Container into which to insert the preview. */\n  _previewContainer;\n  /** Reference to the view of the placeholder element. */\n  _placeholderRef;\n  /** Element that is rendered instead of the draggable item while it is being sorted. */\n  _placeholder;\n  /** Coordinates within the element at which the user picked up the element. */\n  _pickupPositionInElement;\n  /** Coordinates on the page at which the user picked up the element. */\n  _pickupPositionOnPage;\n  /**\n   * Anchor node used to save the place in the DOM where the element was\n   * picked up so that it can be restored at the end of the drag sequence.\n   */\n  _anchor;\n  /**\n   * CSS `transform` applied to the element when it isn't being dragged. We need a\n   * passive transform in order for the dragged element to retain its new position\n   * after the user has stopped dragging and because we need to know the relative\n   * position in case they start dragging again. This corresponds to `element.style.transform`.\n   */\n  _passiveTransform = {\n    x: 0,\n    y: 0\n  };\n  /** CSS `transform` that is applied to the element while it's being dragged. */\n  _activeTransform = {\n    x: 0,\n    y: 0\n  };\n  /** Inline `transform` value that the element had before the first dragging sequence. */\n  _initialTransform;\n  /**\n   * Whether the dragging sequence has been started. Doesn't\n   * necessarily mean that the element has been moved.\n   */\n  _hasStartedDragging = signal(false);\n  /** Whether the element has moved since the user started dragging it. */\n  _hasMoved;\n  /** Drop container in which the DragRef resided when dragging began. */\n  _initialContainer;\n  /** Index at which the item started in its initial container. */\n  _initialIndex;\n  /** Cached positions of scrollable parent elements. */\n  _parentPositions;\n  /** Emits when the item is being moved. */\n  _moveEvents = new Subject();\n  /** Keeps track of the direction in which the user is dragging along each axis. */\n  _pointerDirectionDelta;\n  /** Pointer position at which the last change in the delta occurred. */\n  _pointerPositionAtLastDirectionChange;\n  /** Position of the pointer at the last pointer event. */\n  _lastKnownPointerPosition;\n  /**\n   * Root DOM node of the drag instance. This is the element that will\n   * be moved around as the user is dragging.\n   */\n  _rootElement;\n  /**\n   * Nearest ancestor SVG, relative to which coordinates are calculated if dragging SVGElement\n   */\n  _ownerSVGElement;\n  /**\n   * Inline style value of `-webkit-tap-highlight-color` at the time the\n   * dragging was started. Used to restore the value once we're done dragging.\n   */\n  _rootElementTapHighlight;\n  /** Subscription to pointer movement events. */\n  _pointerMoveSubscription = Subscription.EMPTY;\n  /** Subscription to the event that is dispatched when the user lifts their pointer. */\n  _pointerUpSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being scrolled. */\n  _scrollSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being resized. */\n  _resizeSubscription = Subscription.EMPTY;\n  /**\n   * Time at which the last touch event occurred. Used to avoid firing the same\n   * events multiple times on touch devices where the browser will fire a fake\n   * mouse event for each touch event, after a certain time.\n   */\n  _lastTouchEventTime;\n  /** Time at which the last dragging sequence was started. */\n  _dragStartTime;\n  /** Cached reference to the boundary element. */\n  _boundaryElement = null;\n  /** Whether the native dragging interactions have been enabled on the root element. */\n  _nativeInteractionsEnabled = true;\n  /** Client rect of the root element when the dragging sequence has started. */\n  _initialDomRect;\n  /** Cached dimensions of the preview element. Should be read via `_getPreviewRect`. */\n  _previewRect;\n  /** Cached dimensions of the boundary element. */\n  _boundaryRect;\n  /** Element that will be used as a template to create the draggable item's preview. */\n  _previewTemplate;\n  /** Template for placeholder element rendered to show where a draggable would be dropped. */\n  _placeholderTemplate;\n  /** Elements that can be used to drag the draggable item. */\n  _handles = [];\n  /** Registered handles that are currently disabled. */\n  _disabledHandles = new Set();\n  /** Droppable container that the draggable is a part of. */\n  _dropContainer;\n  /** Layout direction of the item. */\n  _direction = 'ltr';\n  /** Ref that the current drag item is nested in. */\n  _parentDragRef;\n  /**\n   * Cached shadow root that the element is placed in. `null` means that the element isn't in\n   * the shadow DOM and `undefined` means that it hasn't been resolved yet. Should be read via\n   * `_getShadowRoot`, not directly.\n   */\n  _cachedShadowRoot;\n  /** Axis along which dragging is locked. */\n  lockAxis;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay = 0;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this._toggleNativeDragInteractions();\n      this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n    }\n  }\n  _disabled = false;\n  /** Emits as the drag sequence is being prepared. */\n  beforeStarted = new Subject();\n  /** Emits when the user starts dragging the item. */\n  started = new Subject();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new Subject();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new Subject();\n  /** Emits when the user has moved the item into a new container. */\n  entered = new Subject();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new Subject();\n  /** Emits when the user drops the item inside a container. */\n  dropped = new Subject();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = this._moveEvents;\n  /** Arbitrary data that can be attached to the drag item. */\n  data;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry, _renderer) {\n    this._config = _config;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._dragDropRegistry = _dragDropRegistry;\n    this._renderer = _renderer;\n    this.withRootElement(element).withParent(_config.parentDragRef || null);\n    this._parentPositions = new ParentPositionTracker(_document);\n    _dragDropRegistry.registerDragItem(this);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._placeholder;\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._rootElement;\n  }\n  /**\n   * Gets the currently-visible element that represents the drag item.\n   * While dragging this is the placeholder, otherwise it's the root element.\n   */\n  getVisibleElement() {\n    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n  }\n  /** Registers the handles that can be used to drag the element. */\n  withHandles(handles) {\n    this._handles = handles.map(handle => coerceElement(handle));\n    this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n    this._toggleNativeDragInteractions();\n    // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n    // the set, rather than iterate over it and filter out the destroyed handles, because while\n    // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n    // use an array internally which may throw an error.\n    const disabledHandles = new Set();\n    this._disabledHandles.forEach(handle => {\n      if (this._handles.indexOf(handle) > -1) {\n        disabledHandles.add(handle);\n      }\n    });\n    this._disabledHandles = disabledHandles;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag preview.\n   * @param template Template that from which to stamp out the preview.\n   */\n  withPreviewTemplate(template) {\n    this._previewTemplate = template;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag placeholder.\n   * @param template Template that from which to stamp out the placeholder.\n   */\n  withPlaceholderTemplate(template) {\n    this._placeholderTemplate = template;\n    return this;\n  }\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement) {\n    const element = coerceElement(rootElement);\n    if (element !== this._rootElement) {\n      this._removeRootElementListeners();\n      this._rootElementCleanups = this._ngZone.runOutsideAngular(() => [_bindEventWithOptions(this._renderer, element, 'mousedown', this._pointerDown, activeEventListenerOptions), _bindEventWithOptions(this._renderer, element, 'touchstart', this._pointerDown, passiveEventListenerOptions), _bindEventWithOptions(this._renderer, element, 'dragstart', this._nativeDragStart, activeEventListenerOptions)]);\n      this._initialTransform = undefined;\n      this._rootElement = element;\n    }\n    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n      this._ownerSVGElement = this._rootElement.ownerSVGElement;\n    }\n    return this;\n  }\n  /**\n   * Element to which the draggable's position will be constrained.\n   */\n  withBoundaryElement(boundaryElement) {\n    this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n    this._resizeSubscription.unsubscribe();\n    if (boundaryElement) {\n      this._resizeSubscription = this._viewportRuler.change(10).subscribe(() => this._containInsideBoundaryOnResize());\n    }\n    return this;\n  }\n  /** Sets the parent ref that the ref is nested in.  */\n  withParent(parent) {\n    this._parentDragRef = parent;\n    return this;\n  }\n  /** Removes the dragging functionality from the DOM element. */\n  dispose() {\n    this._removeRootElementListeners();\n    // Do this check before removing from the registry since it'll\n    // stop being considered as dragged once it is removed.\n    if (this.isDragging()) {\n      // Since we move out the element to the end of the body while it's being\n      // dragged, we have to make sure that it's removed if it gets destroyed.\n      this._rootElement?.remove();\n    }\n    this._anchor?.remove();\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeListeners();\n    this.beforeStarted.complete();\n    this.started.complete();\n    this.released.complete();\n    this.ended.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this._moveEvents.complete();\n    this._handles = [];\n    this._disabledHandles.clear();\n    this._dropContainer = undefined;\n    this._resizeSubscription.unsubscribe();\n    this._parentPositions.clear();\n    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate = this._previewTemplate = this._anchor = this._parentDragRef = null;\n  }\n  /** Checks whether the element is currently being dragged. */\n  isDragging() {\n    return this._hasStartedDragging() && this._dragDropRegistry.isDragging(this);\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._rootElement.style.transform = this._initialTransform || '';\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\n   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n   * @param handle Handle element that should be disabled.\n   */\n  disableHandle(handle) {\n    if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n      this._disabledHandles.add(handle);\n      toggleNativeDragInteractions(handle, true);\n    }\n  }\n  /**\n   * Enables a handle, if it has been disabled.\n   * @param handle Handle element to be enabled.\n   */\n  enableHandle(handle) {\n    if (this._disabledHandles.has(handle)) {\n      this._disabledHandles.delete(handle);\n      toggleNativeDragInteractions(handle, this.disabled);\n    }\n  }\n  /** Sets the layout direction of the draggable item. */\n  withDirection(direction) {\n    this._direction = direction;\n    return this;\n  }\n  /** Sets the container that the item is part of. */\n  _withDropContainer(container) {\n    this._dropContainer = container;\n  }\n  /**\n   * Gets the current position in pixels the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n    return {\n      x: position.x,\n      y: position.y\n    };\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform.x = value.x;\n    this._passiveTransform.y = value.y;\n    if (!this._dropContainer) {\n      this._applyRootElementTransform(value.x, value.y);\n    }\n    return this;\n  }\n  /**\n   * Sets the container into which to insert the preview element.\n   * @param value Container into which to insert the preview.\n   */\n  withPreviewContainer(value) {\n    this._previewContainer = value;\n    return this;\n  }\n  /** Updates the item's sort order based on the last-known pointer position. */\n  _sortFromLastPointerPosition() {\n    const position = this._lastKnownPointerPosition;\n    if (position && this._dropContainer) {\n      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n    }\n  }\n  /** Unsubscribes from the global subscriptions. */\n  _removeListeners() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n    this._scrollSubscription.unsubscribe();\n    this._cleanupShadowRootSelectStart?.();\n    this._cleanupShadowRootSelectStart = undefined;\n  }\n  /** Destroys the preview element and its ViewRef. */\n  _destroyPreview() {\n    this._preview?.destroy();\n    this._preview = null;\n  }\n  /** Destroys the placeholder element and its ViewRef. */\n  _destroyPlaceholder() {\n    this._placeholder?.remove();\n    this._placeholderRef?.destroy();\n    this._placeholder = this._placeholderRef = null;\n  }\n  /** Handler for the `mousedown`/`touchstart` events. */\n  _pointerDown = event => {\n    this.beforeStarted.next();\n    // Delegate the event based on whether it started from a handle or the element itself.\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        this._initializeDragSequence(targetHandle, event);\n      }\n    } else if (!this.disabled) {\n      this._initializeDragSequence(this._rootElement, event);\n    }\n  };\n  /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n  _pointerMove = event => {\n    const pointerPosition = this._getPointerPositionOnPage(event);\n    if (!this._hasStartedDragging()) {\n      const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n      const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n      const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n      // Only start dragging after the user has moved more than the minimum distance in either\n      // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n      // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n      // per pixel of movement (e.g. if the user moves their pointer quickly).\n      if (isOverThreshold) {\n        const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n        const container = this._dropContainer;\n        if (!isDelayElapsed) {\n          this._endDragSequence(event);\n          return;\n        }\n        // Prevent other drag sequences from starting while something in the container is still\n        // being dragged. This can happen while we're waiting for the drop animation to finish\n        // and can cause errors, because some elements might still be moving around.\n        if (!container || !container.isDragging() && !container.isReceiving()) {\n          // Prevent the default action as soon as the dragging sequence is considered as\n          // \"started\" since waiting for the next event can allow the device to begin scrolling.\n          if (event.cancelable) {\n            event.preventDefault();\n          }\n          this._hasStartedDragging.set(true);\n          this._ngZone.run(() => this._startDragSequence(event));\n        }\n      }\n      return;\n    }\n    // We prevent the default action down here so that we know that dragging has started. This is\n    // important for touch devices where doing this too early can unnecessarily block scrolling,\n    // if there's a dragging delay.\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n    this._hasMoved = true;\n    this._lastKnownPointerPosition = pointerPosition;\n    this._updatePointerDirectionDelta(constrainedPointerPosition);\n    if (this._dropContainer) {\n      this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n    } else {\n      // If there's a position constraint function, we want the element's top/left to be at the\n      // specific position on the page. Use the initial position as a reference if that's the case.\n      const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n      const activeTransform = this._activeTransform;\n      activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n      activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n      this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n    }\n    // Since this event gets fired for every pixel while dragging, we only\n    // want to fire it if the consumer opted into it. Also we have to\n    // re-enter the zone because we run all of the events on the outside.\n    if (this._moveEvents.observers.length) {\n      this._ngZone.run(() => {\n        this._moveEvents.next({\n          source: this,\n          pointerPosition: constrainedPointerPosition,\n          event,\n          distance: this._getDragDistance(constrainedPointerPosition),\n          delta: this._pointerDirectionDelta\n        });\n      });\n    }\n  };\n  /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n  _pointerUp = event => {\n    this._endDragSequence(event);\n  };\n  /**\n   * Clears subscriptions and stops the dragging sequence.\n   * @param event Browser event object that ended the sequence.\n   */\n  _endDragSequence(event) {\n    // Note that here we use `isDragging` from the service, rather than from `this`.\n    // The difference is that the one from the service reflects whether a dragging sequence\n    // has been initiated, whereas the one on `this` includes whether the user has passed\n    // the minimum dragging threshold.\n    if (!this._dragDropRegistry.isDragging(this)) {\n      return;\n    }\n    this._removeListeners();\n    this._dragDropRegistry.stopDragging(this);\n    this._toggleNativeDragInteractions();\n    if (this._handles) {\n      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n    }\n    if (!this._hasStartedDragging()) {\n      return;\n    }\n    this.released.next({\n      source: this,\n      event\n    });\n    if (this._dropContainer) {\n      // Stop scrolling immediately, instead of waiting for the animation to finish.\n      this._dropContainer._stopScrolling();\n      this._animatePreviewToPlaceholder().then(() => {\n        this._cleanupDragArtifacts(event);\n        this._cleanupCachedDimensions();\n        this._dragDropRegistry.stopDragging(this);\n      });\n    } else {\n      // Convert the active transform into a passive one. This means that next time\n      // the user starts dragging the item, its position will be calculated relatively\n      // to the new passive transform.\n      this._passiveTransform.x = this._activeTransform.x;\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      this._passiveTransform.y = this._activeTransform.y;\n      this._ngZone.run(() => {\n        this.ended.next({\n          source: this,\n          distance: this._getDragDistance(pointerPosition),\n          dropPoint: pointerPosition,\n          event\n        });\n      });\n      this._cleanupCachedDimensions();\n      this._dragDropRegistry.stopDragging(this);\n    }\n  }\n  /** Starts the dragging sequence. */\n  _startDragSequence(event) {\n    if (isTouchEvent(event)) {\n      this._lastTouchEventTime = Date.now();\n    }\n    this._toggleNativeDragInteractions();\n    // Needs to happen before the root element is moved.\n    const shadowRoot = this._getShadowRoot();\n    const dropContainer = this._dropContainer;\n    if (shadowRoot) {\n      // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n      // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n      this._ngZone.runOutsideAngular(() => {\n        this._cleanupShadowRootSelectStart = _bindEventWithOptions(this._renderer, shadowRoot, 'selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n      });\n    }\n    if (dropContainer) {\n      const element = this._rootElement;\n      const parent = element.parentNode;\n      const placeholder = this._placeholder = this._createPlaceholderElement();\n      const anchor = this._anchor = this._anchor || this._document.createComment(typeof ngDevMode === 'undefined' || ngDevMode ? 'cdk-drag-anchor' : '');\n      // Insert an anchor node so that we can restore the element's position in the DOM.\n      parent.insertBefore(anchor, element);\n      // There's no risk of transforms stacking when inside a drop container so\n      // we can keep the initial transform up to date any time dragging starts.\n      this._initialTransform = element.style.transform || '';\n      // Create the preview after the initial transform has\n      // been cached, because it can be affected by the transform.\n      this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000, this._renderer);\n      this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n      // We move the element out at the end of the body and we make it hidden, because keeping it in\n      // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n      toggleVisibility(element, false, dragImportantProperties);\n      this._document.body.appendChild(parent.replaceChild(placeholder, element));\n      this.started.next({\n        source: this,\n        event\n      }); // Emit before notifying the container.\n      dropContainer.start();\n      this._initialContainer = dropContainer;\n      this._initialIndex = dropContainer.getItemIndex(this);\n    } else {\n      this.started.next({\n        source: this,\n        event\n      });\n      this._initialContainer = this._initialIndex = undefined;\n    }\n    // Important to run after we've called `start` on the parent container\n    // so that it has had time to resolve its scrollable parents.\n    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n  }\n  /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  _initializeDragSequence(referenceElement, event) {\n    // Stop propagation if the item is inside another\n    // draggable so we don't start multiple drag sequences.\n    if (this._parentDragRef) {\n      event.stopPropagation();\n    }\n    const isDragging = this.isDragging();\n    const isTouchSequence = isTouchEvent(event);\n    const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n    const rootElement = this._rootElement;\n    const target = _getEventTarget(event);\n    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime && this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n    const isFakeEvent = isTouchSequence ? isFakeTouchstartFromScreenReader(event) : isFakeMousedownFromScreenReader(event);\n    // If the event started from an element with the native HTML drag&drop, it'll interfere\n    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n    // events from firing on touch devices.\n    if (target && target.draggable && event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n      return;\n    }\n    // If we've got handles, we need to disable the tap highlight on the entire root element,\n    // otherwise iOS will still add it, even though all the drag interactions on the handle\n    // are disabled.\n    if (this._handles.length) {\n      const rootStyles = rootElement.style;\n      this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n      rootStyles.webkitTapHighlightColor = 'transparent';\n    }\n    this._hasMoved = false;\n    this._hasStartedDragging.set(this._hasMoved);\n    // Avoid multiple subscriptions and memory leaks when multi touch\n    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n    this._removeListeners();\n    this._initialDomRect = this._rootElement.getBoundingClientRect();\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n    if (this._boundaryElement) {\n      this._boundaryRect = getMutableClientRect(this._boundaryElement);\n    }\n    // If we have a custom preview we can't know ahead of time how large it'll be so we position\n    // it next to the cursor. The exception is when the consumer has opted into making the preview\n    // the same size as the root element, in which case we do know the size.\n    const previewTemplate = this._previewTemplate;\n    this._pickupPositionInElement = previewTemplate && previewTemplate.template && !previewTemplate.matchSize ? {\n      x: 0,\n      y: 0\n    } : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition = this._getPointerPositionOnPage(event);\n    this._pointerDirectionDelta = {\n      x: 0,\n      y: 0\n    };\n    this._pointerPositionAtLastDirectionChange = {\n      x: pointerPosition.x,\n      y: pointerPosition.y\n    };\n    this._dragStartTime = Date.now();\n    this._dragDropRegistry.startDragging(this, event);\n  }\n  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n  _cleanupDragArtifacts(event) {\n    // Restore the element's visibility and insert it at its old position in the DOM.\n    // It's important that we maintain the position, because moving the element around in the DOM\n    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n    // while moving the existing elements in all other cases.\n    toggleVisibility(this._rootElement, true, dragImportantProperties);\n    this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._initialDomRect = this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n    // Re-enter the NgZone since we bound `document` events on the outside.\n    this._ngZone.run(() => {\n      const container = this._dropContainer;\n      const currentIndex = container.getItemIndex(this);\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      const distance = this._getDragDistance(pointerPosition);\n      const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n      this.ended.next({\n        source: this,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      this.dropped.next({\n        item: this,\n        currentIndex,\n        previousIndex: this._initialIndex,\n        container: container,\n        previousContainer: this._initialContainer,\n        isPointerOverContainer,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n      this._dropContainer = this._initialContainer;\n    });\n  }\n  /**\n   * Updates the item's position in its drop container, or moves it\n   * into a new one, depending on its current drag position.\n   */\n  _updateActiveDropContainer({\n    x,\n    y\n  }, {\n    x: rawX,\n    y: rawY\n  }) {\n    // Drop container that draggable has been moved into.\n    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n    // If we couldn't find a new container to move the item into, and the item has left its\n    // initial container, check whether the it's over the initial container. This handles the\n    // case where two containers are connected one way and the user tries to undo dragging an\n    // item into a new container.\n    if (!newContainer && this._dropContainer !== this._initialContainer && this._initialContainer._isOverContainer(x, y)) {\n      newContainer = this._initialContainer;\n    }\n    if (newContainer && newContainer !== this._dropContainer) {\n      this._ngZone.run(() => {\n        // Notify the old container that the item has left.\n        this.exited.next({\n          item: this,\n          container: this._dropContainer\n        });\n        this._dropContainer.exit(this);\n        // Notify the new container that the item has entered.\n        this._dropContainer = newContainer;\n        this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n        // If we're re-entering the initial container and sorting is disabled,\n        // put item the into its starting index to begin with.\n        newContainer.sortingDisabled ? this._initialIndex : undefined);\n        this.entered.next({\n          item: this,\n          container: newContainer,\n          currentIndex: newContainer.getItemIndex(this)\n        });\n      });\n    }\n    // Dragging may have been interrupted as a result of the events above.\n    if (this.isDragging()) {\n      this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n      this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n      if (this.constrainPosition) {\n        this._applyPreviewTransform(x, y);\n      } else {\n        this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n      }\n    }\n  }\n  /**\n   * Animates the preview element from its current position to the location of the drop placeholder.\n   * @returns Promise that resolves when the animation completes.\n   */\n  _animatePreviewToPlaceholder() {\n    // If the user hasn't moved yet, the transitionend event won't fire.\n    if (!this._hasMoved) {\n      return Promise.resolve();\n    }\n    const placeholderRect = this._placeholder.getBoundingClientRect();\n    // Apply the class that adds a transition to the preview.\n    this._preview.addClass('cdk-drag-animating');\n    // Move the preview to the placeholder position.\n    this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n    // apply its style, we take advantage of the available info to figure out whether we need to\n    // bind the event in the first place.\n    const duration = this._preview.getTransitionDuration();\n    if (duration === 0) {\n      return Promise.resolve();\n    }\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        const handler = event => {\n          if (!event || this._preview && _getEventTarget(event) === this._preview.element && event.propertyName === 'transform') {\n            cleanupListener();\n            resolve();\n            clearTimeout(timeout);\n          }\n        };\n        // If a transition is short enough, the browser might not fire the `transitionend` event.\n        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n        // fire if the transition hasn't completed when it was supposed to.\n        const timeout = setTimeout(handler, duration * 1.5);\n        const cleanupListener = this._preview.addEventListener('transitionend', handler);\n      });\n    });\n  }\n  /** Creates an element that will be shown instead of the current element while dragging. */\n  _createPlaceholderElement() {\n    const placeholderConfig = this._placeholderTemplate;\n    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n    let placeholder;\n    if (placeholderTemplate) {\n      this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n      this._placeholderRef.detectChanges();\n      placeholder = getRootNode(this._placeholderRef, this._document);\n    } else {\n      placeholder = deepCloneNode(this._rootElement);\n    }\n    // Stop pointer events on the preview so the user can't\n    // interact with it while the preview is animating.\n    placeholder.style.pointerEvents = 'none';\n    placeholder.classList.add('cdk-drag-placeholder');\n    return placeholder;\n  }\n  /**\n   * Figures out the coordinates at which an element was picked up.\n   * @param referenceElement Element that initiated the dragging.\n   * @param event Event that initiated the dragging.\n   */\n  _getPointerPositionInElement(elementRect, referenceElement, event) {\n    const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n    const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n    const scrollPosition = this._getViewportScrollPosition();\n    const x = point.pageX - referenceRect.left - scrollPosition.left;\n    const y = point.pageY - referenceRect.top - scrollPosition.top;\n    return {\n      x: referenceRect.left - elementRect.left + x,\n      y: referenceRect.top - elementRect.top + y\n    };\n  }\n  /** Determines the point of the page that was touched by the user. */\n  _getPointerPositionOnPage(event) {\n    const scrollPosition = this._getViewportScrollPosition();\n    const point = isTouchEvent(event) ?\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n    // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n    // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n    // throwing an error. The value returned here will be incorrect, but since this only\n    // breaks inside a developer tool and the value is only used for secondary information,\n    // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n    event.touches[0] || event.changedTouches[0] || {\n      pageX: 0,\n      pageY: 0\n    } : event;\n    const x = point.pageX - scrollPosition.left;\n    const y = point.pageY - scrollPosition.top;\n    // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n    // coordinate system\n    if (this._ownerSVGElement) {\n      const svgMatrix = this._ownerSVGElement.getScreenCTM();\n      if (svgMatrix) {\n        const svgPoint = this._ownerSVGElement.createSVGPoint();\n        svgPoint.x = x;\n        svgPoint.y = y;\n        return svgPoint.matrixTransform(svgMatrix.inverse());\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Gets the pointer position on the page, accounting for any position constraints. */\n  _getConstrainedPointerPosition(point) {\n    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n    let {\n      x,\n      y\n    } = this.constrainPosition ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement) : point;\n    if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n      y = this._pickupPositionOnPage.y - (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n      x = this._pickupPositionOnPage.x - (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n    }\n    if (this._boundaryRect) {\n      // If not using a custom constrain we need to account for the pickup position in the element\n      // otherwise we do not need to do this, as it has already been accounted for\n      const {\n        x: pickupX,\n        y: pickupY\n      } = !this.constrainPosition ? this._pickupPositionInElement : {\n        x: 0,\n        y: 0\n      };\n      const boundaryRect = this._boundaryRect;\n      const {\n        width: previewWidth,\n        height: previewHeight\n      } = this._getPreviewRect();\n      const minY = boundaryRect.top + pickupY;\n      const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n      const minX = boundaryRect.left + pickupX;\n      const maxX = boundaryRect.right - (previewWidth - pickupX);\n      x = clamp$1(x, minX, maxX);\n      y = clamp$1(y, minY, maxY);\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the current drag delta, based on the user's current pointer position on the page. */\n  _updatePointerDirectionDelta(pointerPositionOnPage) {\n    const {\n      x,\n      y\n    } = pointerPositionOnPage;\n    const delta = this._pointerDirectionDelta;\n    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n    // Amount of pixels the user has dragged since the last time the direction changed.\n    const changeX = Math.abs(x - positionSinceLastChange.x);\n    const changeY = Math.abs(y - positionSinceLastChange.y);\n    // Because we handle pointer events on a per-pixel basis, we don't want the delta\n    // to change for every pixel, otherwise anything that depends on it can look erratic.\n    // To make the delta more consistent, we track how much the user has moved since the last\n    // delta change and we only update it after it has reached a certain threshold.\n    if (changeX > this._config.pointerDirectionChangeThreshold) {\n      delta.x = x > positionSinceLastChange.x ? 1 : -1;\n      positionSinceLastChange.x = x;\n    }\n    if (changeY > this._config.pointerDirectionChangeThreshold) {\n      delta.y = y > positionSinceLastChange.y ? 1 : -1;\n      positionSinceLastChange.y = y;\n    }\n    return delta;\n  }\n  /** Toggles the native drag interactions, based on how many handles are registered. */\n  _toggleNativeDragInteractions() {\n    if (!this._rootElement || !this._handles) {\n      return;\n    }\n    const shouldEnable = this._handles.length > 0 || !this.isDragging();\n    if (shouldEnable !== this._nativeInteractionsEnabled) {\n      this._nativeInteractionsEnabled = shouldEnable;\n      toggleNativeDragInteractions(this._rootElement, shouldEnable);\n    }\n  }\n  /** Removes the manually-added event listeners from the root element. */\n  _removeRootElementListeners() {\n    this._rootElementCleanups?.forEach(cleanup => cleanup());\n    this._rootElementCleanups = undefined;\n  }\n  /**\n   * Applies a `transform` to the root element, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyRootElementTransform(x, y) {\n    const scale = 1 / this.scale;\n    const transform = getTransform(x * scale, y * scale);\n    const styles = this._rootElement.style;\n    // Cache the previous transform amount only after the first drag sequence, because\n    // we don't want our own transforms to stack on top of each other.\n    // Should be excluded none because none + translate3d(x, y, x) is invalid css\n    if (this._initialTransform == null) {\n      this._initialTransform = styles.transform && styles.transform != 'none' ? styles.transform : '';\n    }\n    // Preserve the previous `transform` value, if there was one. Note that we apply our own\n    // transform before the user's, because things like rotation can affect which direction\n    // the element will be translated towards.\n    styles.transform = combineTransforms(transform, this._initialTransform);\n  }\n  /**\n   * Applies a `transform` to the preview, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyPreviewTransform(x, y) {\n    // Only apply the initial transform if the preview is a clone of the original element, otherwise\n    // it could be completely different and the transform might not make sense anymore.\n    const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n    const transform = getTransform(x, y);\n    this._preview.setTransform(combineTransforms(transform, initialTransform));\n  }\n  /**\n   * Gets the distance that the user has dragged during the current drag sequence.\n   * @param currentPosition Current position of the user's pointer.\n   */\n  _getDragDistance(currentPosition) {\n    const pickupPosition = this._pickupPositionOnPage;\n    if (pickupPosition) {\n      return {\n        x: currentPosition.x - pickupPosition.x,\n        y: currentPosition.y - pickupPosition.y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n  _cleanupCachedDimensions() {\n    this._boundaryRect = this._previewRect = undefined;\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the element is still inside its boundary after the viewport has been resized.\n   * If not, the position is adjusted so that the element fits again.\n   */\n  _containInsideBoundaryOnResize() {\n    let {\n      x,\n      y\n    } = this._passiveTransform;\n    if (x === 0 && y === 0 || this.isDragging() || !this._boundaryElement) {\n      return;\n    }\n    // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n    const elementRect = this._rootElement.getBoundingClientRect();\n    const boundaryRect = this._boundaryElement.getBoundingClientRect();\n    // It's possible that the element got hidden away after dragging (e.g. by switching to a\n    // different tab). Don't do anything in this case so we don't clear the user's position.\n    if (boundaryRect.width === 0 && boundaryRect.height === 0 || elementRect.width === 0 && elementRect.height === 0) {\n      return;\n    }\n    const leftOverflow = boundaryRect.left - elementRect.left;\n    const rightOverflow = elementRect.right - boundaryRect.right;\n    const topOverflow = boundaryRect.top - elementRect.top;\n    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n    // If the element has become wider than the boundary, we can't\n    // do much to make it fit so we just anchor it to the left.\n    if (boundaryRect.width > elementRect.width) {\n      if (leftOverflow > 0) {\n        x += leftOverflow;\n      }\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      }\n    } else {\n      x = 0;\n    }\n    // If the element has become taller than the boundary, we can't\n    // do much to make it fit so we just anchor it to the top.\n    if (boundaryRect.height > elementRect.height) {\n      if (topOverflow > 0) {\n        y += topOverflow;\n      }\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      }\n    } else {\n      y = 0;\n    }\n    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n      this.setFreeDragPosition({\n        y,\n        x\n      });\n    }\n  }\n  /** Gets the drag start delay, based on the event type. */\n  _getDragStartDelay(event) {\n    const value = this.dragStartDelay;\n    if (typeof value === 'number') {\n      return value;\n    } else if (isTouchEvent(event)) {\n      return value.touch;\n    }\n    return value ? value.mouse : 0;\n  }\n  /** Updates the internal state of the draggable element when scrolling has occurred. */\n  _updateOnScroll(event) {\n    const scrollDifference = this._parentPositions.handleScroll(event);\n    if (scrollDifference) {\n      const target = _getEventTarget(event);\n      // DOMRect dimensions are based on the scroll position of the page and its parent\n      // node so we have to update the cached boundary DOMRect if the user has scrolled.\n      if (this._boundaryRect && target !== this._boundaryElement && target.contains(this._boundaryElement)) {\n        adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n      }\n      this._pickupPositionOnPage.x += scrollDifference.left;\n      this._pickupPositionOnPage.y += scrollDifference.top;\n      // If we're in free drag mode, we have to update the active transform, because\n      // it isn't relative to the viewport like the preview inside a drop list.\n      if (!this._dropContainer) {\n        this._activeTransform.x -= scrollDifference.left;\n        this._activeTransform.y -= scrollDifference.top;\n        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n      }\n    }\n  }\n  /** Gets the scroll position of the viewport. */\n  _getViewportScrollPosition() {\n    return this._parentPositions.positions.get(this._document)?.scrollPosition || this._parentPositions.getViewportScrollPosition();\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (this._cachedShadowRoot === undefined) {\n      this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Gets the element into which the drag preview should be inserted. */\n  _getPreviewInsertionPoint(initialParent, shadowRoot) {\n    const previewContainer = this._previewContainer || 'global';\n    if (previewContainer === 'parent') {\n      return initialParent;\n    }\n    if (previewContainer === 'global') {\n      const documentRef = this._document;\n      // We can't use the body if the user is in fullscreen mode,\n      // because the preview will render under the fullscreen element.\n      // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n      return shadowRoot || documentRef.fullscreenElement || documentRef.webkitFullscreenElement || documentRef.mozFullScreenElement || documentRef.msFullscreenElement || documentRef.body;\n    }\n    return coerceElement(previewContainer);\n  }\n  /** Lazily resolves and returns the dimensions of the preview. */\n  _getPreviewRect() {\n    // Cache the preview element rect if we haven't cached it already or if\n    // we cached it too early before the element dimensions were computed.\n    if (!this._previewRect || !this._previewRect.width && !this._previewRect.height) {\n      this._previewRect = this._preview ? this._preview.getBoundingClientRect() : this._initialDomRect;\n    }\n    return this._previewRect;\n  }\n  /** Handles a native `dragstart` event. */\n  _nativeDragStart = event => {\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        event.preventDefault();\n      }\n    } else if (!this.disabled) {\n      // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n      // but some cases like dragging of links can slip through (see #24403).\n      event.preventDefault();\n    }\n  };\n  /** Gets a handle that is the target of an event. */\n  _getTargetHandle(event) {\n    return this._handles.find(handle => {\n      return event.target && (event.target === handle || handle.contains(event.target));\n    });\n  }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n  event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n  if (from === to) {\n    return;\n  }\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n  array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const from = clamp(currentIndex, currentArray.length - 1);\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n  }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray[currentIndex]);\n  }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n  return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Cache of the dimensions of all the items inside the container. */\n  _itemPositions = [];\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeDraggables;\n  /** Direction in which the list is oriented. */\n  orientation = 'vertical';\n  /** Layout direction of the drop list. */\n  direction;\n  constructor(_dragDropRegistry) {\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    delta: 0,\n    overlaps: false\n  };\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const siblings = this._itemPositions;\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n    if (newIndex === -1 && siblings.length > 0) {\n      return null;\n    }\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n    const siblingAtNewPosition = siblings[newIndex];\n    const currentPosition = siblings[currentIndex].clientRect;\n    const newPosition = siblingAtNewPosition.clientRect;\n    const delta = currentIndex > newIndex ? 1 : -1;\n    // How many pixels the item's placeholder should be offset.\n    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n    // How many pixels all the other items should be offset.\n    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n    // Save the previous order of the items before moving the item to its new index.\n    // We use this to check whether an item has been moved as a result of the sorting.\n    const oldOrder = siblings.slice();\n    // Shuffle the array in place.\n    moveItemInArray(siblings, currentIndex, newIndex);\n    siblings.forEach((sibling, index) => {\n      // Don't do anything if the position hasn't changed.\n      if (oldOrder[index] === sibling) {\n        return;\n      }\n      const isDraggedItem = sibling.drag === item;\n      const offset = isDraggedItem ? itemOffset : siblingOffset;\n      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() : sibling.drag.getRootElement();\n      // Update the offset to reflect the new position.\n      sibling.offset += offset;\n      const transformAmount = Math.round(sibling.offset * (1 / sibling.drag.scale));\n      // Since we're moving the items with a `transform`, we need to adjust their cached\n      // client rects to reflect their new position, as well as swap their positions in the cache.\n      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n      // elements may be mid-animation which will give us a wrong result.\n      if (isHorizontal) {\n        // Round the transforms since some browsers will\n        // blur the elements, for sub-pixel transforms.\n        elementToOffset.style.transform = combineTransforms(`translate3d(${transformAmount}px, 0, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, 0, offset);\n      } else {\n        elementToOffset.style.transform = combineTransforms(`translate3d(0, ${transformAmount}px, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, offset, 0);\n      }\n    });\n    // Note that it's important that we do this after the client rects have been adjusted.\n    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n    this._previousSwap.drag = siblingAtNewPosition.drag;\n    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    return {\n      previousIndex: currentIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    const newIndex = index == null || index < 0 ?\n    // We use the coordinates of where the item entered the drop\n    // zone to figure out at which index it should be inserted.\n    this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    const activeDraggables = this._activeDraggables;\n    const currentIndex = activeDraggables.indexOf(item);\n    const placeholder = item.getPlaceholderElement();\n    let newPositionReference = activeDraggables[newIndex];\n    // If the item at the new position is the same as the item that is being dragged,\n    // it means that we're trying to restore the item to its initial position. In this\n    // case we should use the next item from the list as the reference.\n    if (newPositionReference === item) {\n      newPositionReference = activeDraggables[newIndex + 1];\n    }\n    // If we didn't find a new position reference, it means that either the item didn't start off\n    // in this container, or that the item requested to be inserted at the end of the list.\n    if (!newPositionReference && (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) && this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n      newPositionReference = activeDraggables[0];\n    }\n    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n    // into another container and back again), we have to ensure that it isn't duplicated.\n    if (currentIndex > -1) {\n      activeDraggables.splice(currentIndex, 1);\n    }\n    // Don't use items that are being dragged as a reference, because\n    // their element has been moved down to the bottom of the body.\n    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n      const element = newPositionReference.getRootElement();\n      element.parentElement.insertBefore(placeholder, element);\n      activeDraggables.splice(newIndex, 0, item);\n    } else {\n      this._element.appendChild(placeholder);\n      activeDraggables.push(item);\n    }\n    // The transform needs to be cleared so it doesn't throw off the measurements.\n    placeholder.style.transform = '';\n    // Note that usually `start` is called together with `enter` when an item goes into a new\n    // container. This will cache item positions, but we need to refresh them since the amount\n    // of items has changed.\n    this._cacheItemPositions();\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeDraggables = items.slice();\n    this._cacheItemPositions();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    // TODO(crisbeto): may have to wait for the animations to finish.\n    this._activeDraggables?.forEach(item => {\n      const rootElement = item.getRootElement();\n      if (rootElement) {\n        const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n        rootElement.style.transform = initialTransform || '';\n      }\n    });\n    this._itemPositions = [];\n    this._activeDraggables = [];\n    this._previousSwap.drag = null;\n    this._previousSwap.delta = 0;\n    this._previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeDraggables;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n    // The rest of the logic still stands no matter what orientation we're in, however\n    // we need to invert the array when determining the index.\n    const items = this.orientation === 'horizontal' && this.direction === 'rtl' ? this._itemPositions.slice().reverse() : this._itemPositions;\n    return items.findIndex(currentItem => currentItem.drag === item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll(topDifference, leftDifference) {\n    // Since we know the amount that the user has scrolled we can shift all of the\n    // client rectangles ourselves. This is cheaper than re-measuring everything and\n    // we can avoid inconsistent behavior where we might be measuring the element before\n    // its position has changed.\n    this._itemPositions.forEach(({\n      clientRect\n    }) => {\n      adjustDomRect(clientRect, topDifference, leftDifference);\n    });\n    // We need two loops for this, because we want all of the cached\n    // positions to be up-to-date before we re-sort the item.\n    this._itemPositions.forEach(({\n      drag\n    }) => {\n      if (this._dragDropRegistry.isDragging(drag)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        drag._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    this._element = container;\n  }\n  /** Refreshes the position cache of the items and sibling containers. */\n  _cacheItemPositions() {\n    const isHorizontal = this.orientation === 'horizontal';\n    this._itemPositions = this._activeDraggables.map(drag => {\n      const elementToMeasure = drag.getVisibleElement();\n      return {\n        drag,\n        offset: 0,\n        initialTransform: elementToMeasure.style.transform || '',\n        clientRect: getMutableClientRect(elementToMeasure)\n      };\n    }).sort((a, b) => {\n      return isHorizontal ? a.clientRect.left - b.clientRect.left : a.clientRect.top - b.clientRect.top;\n    });\n  }\n  /**\n   * Gets the offset in pixels by which the item that is being dragged should be moved.\n   * @param currentPosition Current position of the item.\n   * @param newPosition Position of the item where the current item should be moved.\n   * @param delta Direction in which the user is moving.\n   */\n  _getItemOffsetPx(currentPosition, newPosition, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left : newPosition.top - currentPosition.top;\n    // Account for differences in the item width/height.\n    if (delta === -1) {\n      itemOffset += isHorizontal ? newPosition.width - currentPosition.width : newPosition.height - currentPosition.height;\n    }\n    return itemOffset;\n  }\n  /**\n   * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n   * @param currentIndex Index of the item currently being dragged.\n   * @param siblings All of the items in the list.\n   * @param delta Direction in which the user is moving.\n   */\n  _getSiblingOffsetPx(currentIndex, siblings, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentPosition = siblings[currentIndex].clientRect;\n    const immediateSibling = siblings[currentIndex + delta * -1];\n    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n    if (immediateSibling) {\n      const start = isHorizontal ? 'left' : 'top';\n      const end = isHorizontal ? 'right' : 'bottom';\n      // Get the spacing between the start of the current item and the end of the one immediately\n      // after it in the direction in which the user is dragging, or vice versa. We add it to the\n      // offset in order to push the element to where it will be when it's inline and is influenced\n      // by the `margin` of its siblings.\n      if (delta === -1) {\n        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n      } else {\n        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n      }\n    }\n    return siblingOffset;\n  }\n  /**\n   * Checks if pointer is entering in the first position\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _shouldEnterAsFirstChild(pointerX, pointerY) {\n    if (!this._activeDraggables.length) {\n      return false;\n    }\n    const itemPositions = this._itemPositions;\n    const isHorizontal = this.orientation === 'horizontal';\n    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n    // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n    const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n    if (reversed) {\n      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n    } else {\n      const firstItemRect = itemPositions[0].clientRect;\n      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const index = this._itemPositions.findIndex(({\n      drag,\n      clientRect\n    }) => {\n      // Skip the item itself.\n      if (drag === item) {\n        return false;\n      }\n      if (delta) {\n        const direction = isHorizontal ? delta.x : delta.y;\n        // If the user is still hovering over the same item as last time, their cursor hasn't left\n        // the item after we made the swap, and they didn't change the direction in which they're\n        // dragging, we don't consider it a direction swap.\n        if (drag === this._previousSwap.drag && this._previousSwap.overlaps && direction === this._previousSwap.delta) {\n          return false;\n        }\n      }\n      return isHorizontal ?\n      // Round these down since most browsers report client rects with\n      // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n      pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n    });\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n}\n\n/**\n * Strategy that only supports sorting on a list that might wrap.\n * Items are reordered by moving their DOM nodes around.\n * @docs-private\n */\nclass MixedSortStrategy {\n  _document;\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Lazily-resolved root node containing the list. Use `_getRootNode` to read this. */\n  _rootNode;\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeItems;\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    deltaX: 0,\n    deltaY: 0,\n    overlaps: false\n  };\n  /**\n   * Keeps track of the relationship between a node and its next sibling. This information\n   * is used to restore the DOM to the order it was in before dragging started.\n   */\n  _relatedNodes = [];\n  constructor(_document, _dragDropRegistry) {\n    this._document = _document;\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    const childNodes = this._element.childNodes;\n    this._relatedNodes = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i];\n      this._relatedNodes.push([node, node.nextSibling]);\n    }\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n    const previousSwap = this._previousSwap;\n    if (newIndex === -1 || this._activeItems[newIndex] === item) {\n      return null;\n    }\n    const toSwapWith = this._activeItems[newIndex];\n    // Prevent too many swaps over the same item.\n    if (previousSwap.drag === toSwapWith && previousSwap.overlaps && previousSwap.deltaX === pointerDelta.x && previousSwap.deltaY === pointerDelta.y) {\n      return null;\n    }\n    const previousIndex = this.getItemIndex(item);\n    const current = item.getPlaceholderElement();\n    const overlapElement = toSwapWith.getRootElement();\n    if (newIndex > previousIndex) {\n      overlapElement.after(current);\n    } else {\n      overlapElement.before(current);\n    }\n    moveItemInArray(this._activeItems, previousIndex, newIndex);\n    const newOverlapElement = this._getRootNode().elementFromPoint(pointerX, pointerY);\n    // Note: it's tempting to save the entire `pointerDelta` object here, however that'll\n    // break this functionality, because the same object is passed for all `sort` calls.\n    previousSwap.deltaX = pointerDelta.x;\n    previousSwap.deltaY = pointerDelta.y;\n    previousSwap.drag = toSwapWith;\n    previousSwap.overlaps = overlapElement === newOverlapElement || overlapElement.contains(newOverlapElement);\n    return {\n      previousIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    let enterIndex = index == null || index < 0 ? this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    // In some cases (e.g. when the container has padding) we might not be able to figure\n    // out which item to insert the dragged item next to, because the pointer didn't overlap\n    // with anything. In that case we find the item that's closest to the pointer.\n    if (enterIndex === -1) {\n      enterIndex = this._getClosestItemIndexToPointer(item, pointerX, pointerY);\n    }\n    const targetItem = this._activeItems[enterIndex];\n    const currentIndex = this._activeItems.indexOf(item);\n    if (currentIndex > -1) {\n      this._activeItems.splice(currentIndex, 1);\n    }\n    if (targetItem && !this._dragDropRegistry.isDragging(targetItem)) {\n      this._activeItems.splice(enterIndex, 0, item);\n      targetItem.getRootElement().before(item.getPlaceholderElement());\n    } else {\n      this._activeItems.push(item);\n      this._element.appendChild(item.getPlaceholderElement());\n    }\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeItems = items.slice();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    const root = this._element;\n    const previousSwap = this._previousSwap;\n    // Moving elements around in the DOM can break things like the `@for` loop, because it\n    // uses comment nodes to know where to insert elements. To avoid such issues, we restore\n    // the DOM nodes in the list to their original order when the list is reset.\n    // Note that this could be simpler if we just saved all the nodes, cleared the root\n    // and then appended them in the original order. We don't do it, because it can break\n    // down depending on when the snapshot was taken. E.g. we may end up snapshotting the\n    // placeholder element which is removed after dragging.\n    for (let i = this._relatedNodes.length - 1; i > -1; i--) {\n      const [node, nextSibling] = this._relatedNodes[i];\n      if (node.parentNode === root && node.nextSibling !== nextSibling) {\n        if (nextSibling === null) {\n          root.appendChild(node);\n        } else if (nextSibling.parentNode === root) {\n          root.insertBefore(node, nextSibling);\n        }\n      }\n    }\n    this._relatedNodes = [];\n    this._activeItems = [];\n    previousSwap.drag = null;\n    previousSwap.deltaX = previousSwap.deltaY = 0;\n    previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeItems;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    return this._activeItems.indexOf(item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll() {\n    this._activeItems.forEach(item => {\n      if (this._dragDropRegistry.isDragging(item)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        item._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    if (container !== this._element) {\n      this._element = container;\n      this._rootNode = undefined;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY) {\n    const elementAtPoint = this._getRootNode().elementFromPoint(Math.floor(pointerX), Math.floor(pointerY));\n    const index = elementAtPoint ? this._activeItems.findIndex(item => {\n      const root = item.getRootElement();\n      return elementAtPoint === root || root.contains(elementAtPoint);\n    }) : -1;\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n  /** Lazily resolves the list's root node. */\n  _getRootNode() {\n    // Resolve the root node lazily to ensure that the drop list is in its final place in the DOM.\n    if (!this._rootNode) {\n      this._rootNode = _getShadowRoot(this._element) || this._document;\n    }\n    return this._rootNode;\n  }\n  /**\n   * Finds the index of the item that's closest to the item being dragged.\n   * @param item Item being dragged.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _getClosestItemIndexToPointer(item, pointerX, pointerY) {\n    if (this._activeItems.length === 0) {\n      return -1;\n    }\n    if (this._activeItems.length === 1) {\n      return 0;\n    }\n    let minDistance = Infinity;\n    let minIndex = -1;\n    // Find the Euclidean distance (https://en.wikipedia.org/wiki/Euclidean_distance) between each\n    // item and the pointer, and return the smallest one. Note that this is a bit flawed in that DOM\n    // nodes are rectangles, not points, so we use the top/left coordinates. It should be enough\n    // for our purposes.\n    for (let i = 0; i < this._activeItems.length; i++) {\n      const current = this._activeItems[i];\n      if (current !== item) {\n        const {\n          x,\n          y\n        } = current.getRootElement().getBoundingClientRect();\n        const distance = Math.hypot(pointerX - x, pointerY - y);\n        if (distance < minDistance) {\n          minDistance = distance;\n          minIndex = i;\n        }\n      }\n    }\n    return minIndex;\n  }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection;\n(function (AutoScrollVerticalDirection) {\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n})(AutoScrollVerticalDirection || (AutoScrollVerticalDirection = {}));\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection;\n(function (AutoScrollHorizontalDirection) {\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n})(AutoScrollHorizontalDirection || (AutoScrollHorizontalDirection = {}));\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n  _dragDropRegistry;\n  _ngZone;\n  _viewportRuler;\n  /** Element that the drop list is attached to. */\n  element;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  disabled = false;\n  /** Whether sorting items within the list is disabled. */\n  sortingDisabled = false;\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis;\n  /**\n   * Whether auto-scrolling the view when the user\n   * moves their pointer close to the edges is disabled.\n   */\n  autoScrollDisabled = false;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep = 2;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Function that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Emits right before dragging has started. */\n  beforeStarted = new Subject();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new Subject();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new Subject();\n  /** Emits when the user drops an item inside the container. */\n  dropped = new Subject();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new Subject();\n  /** Emits when a dragging sequence is started in a list connected to the current one. */\n  receivingStarted = new Subject();\n  /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n  receivingStopped = new Subject();\n  /** Arbitrary data that can be attached to the drop list. */\n  data;\n  /** Element that is the direct parent of the drag items. */\n  _container;\n  /** Whether an item in the list is being dragged. */\n  _isDragging = false;\n  /** Keeps track of the positions of any parent scrollable elements. */\n  _parentPositions;\n  /** Strategy being used to sort items within the list. */\n  _sortStrategy;\n  /** Cached `DOMRect` of the drop list. */\n  _domRect;\n  /** Draggable items in the container. */\n  _draggables = [];\n  /** Drop lists that are connected to the current one. */\n  _siblings = [];\n  /** Connected siblings that currently have a dragged item. */\n  _activeSiblings = new Set();\n  /** Subscription to the window being scrolled. */\n  _viewportScrollSubscription = Subscription.EMPTY;\n  /** Vertical direction in which the list is currently scrolling. */\n  _verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  /** Horizontal direction in which the list is currently scrolling. */\n  _horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  /** Node that is being auto-scrolled. */\n  _scrollNode;\n  /** Used to signal to the current auto-scroll sequence when to stop. */\n  _stopScrollTimers = new Subject();\n  /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n  _cachedShadowRoot = null;\n  /** Reference to the document. */\n  _document;\n  /** Elements that can be scrolled while the user is dragging. */\n  _scrollableElements = [];\n  /** Initial value for the element's `scroll-snap-type` style. */\n  _initialScrollSnap;\n  /** Direction of the list's layout. */\n  _direction = 'ltr';\n  constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n    this._dragDropRegistry = _dragDropRegistry;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    const coercedElement = this.element = coerceElement(element);\n    this._document = _document;\n    this.withOrientation('vertical').withElementContainer(coercedElement);\n    _dragDropRegistry.registerDropContainer(this);\n    this._parentPositions = new ParentPositionTracker(_document);\n  }\n  /** Removes the drop list functionality from the DOM element. */\n  dispose() {\n    this._stopScrolling();\n    this._stopScrollTimers.complete();\n    this._viewportScrollSubscription.unsubscribe();\n    this.beforeStarted.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this.sorted.complete();\n    this.receivingStarted.complete();\n    this.receivingStopped.complete();\n    this._activeSiblings.clear();\n    this._scrollNode = null;\n    this._parentPositions.clear();\n    this._dragDropRegistry.removeDropContainer(this);\n  }\n  /** Whether an item from this list is currently being dragged. */\n  isDragging() {\n    return this._isDragging;\n  }\n  /** Starts dragging an item. */\n  start() {\n    this._draggingStarted();\n    this._notifyReceivingSiblings();\n  }\n  /**\n   * Attempts to move an item into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    this._draggingStarted();\n    // If sorting is disabled, we want the item to return to its starting\n    // position if the user is returning it to its initial container.\n    if (index == null && this.sortingDisabled) {\n      index = this._draggables.indexOf(item);\n    }\n    this._sortStrategy.enter(item, pointerX, pointerY, index);\n    // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n    // can change when the sort strategy moves the item around inside `enter`.\n    this._cacheParentPositions();\n    // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n    this._notifyReceivingSiblings();\n    this.entered.next({\n      item,\n      container: this,\n      currentIndex: this.getItemIndex(item)\n    });\n  }\n  /**\n   * Removes an item from the container after it was dragged into another container by the user.\n   * @param item Item that was dragged out.\n   */\n  exit(item) {\n    this._reset();\n    this.exited.next({\n      item,\n      container: this\n    });\n  }\n  /**\n   * Drops an item into this container.\n   * @param item Item being dropped into the container.\n   * @param currentIndex Index at which the item should be inserted.\n   * @param previousIndex Index of the item when dragging started.\n   * @param previousContainer Container from which the item got dragged in.\n   * @param isPointerOverContainer Whether the user's pointer was over the\n   *    container when the item was dropped.\n   * @param distance Distance the user has dragged since the start of the dragging sequence.\n   * @param event Event that triggered the dropping sequence.\n   *\n   * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n   */\n  drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n    this._reset();\n    this.dropped.next({\n      item,\n      currentIndex,\n      previousIndex,\n      container: this,\n      previousContainer,\n      isPointerOverContainer,\n      distance,\n      dropPoint,\n      event\n    });\n  }\n  /**\n   * Sets the draggable items that are a part of this list.\n   * @param items Items that are a part of this list.\n   */\n  withItems(items) {\n    const previousItems = this._draggables;\n    this._draggables = items;\n    items.forEach(item => item._withDropContainer(this));\n    if (this.isDragging()) {\n      const draggedItems = previousItems.filter(item => item.isDragging());\n      // If all of the items being dragged were removed\n      // from the list, abort the current drag sequence.\n      if (draggedItems.every(item => items.indexOf(item) === -1)) {\n        this._reset();\n      } else {\n        this._sortStrategy.withItems(this._draggables);\n      }\n    }\n    return this;\n  }\n  /** Sets the layout direction of the drop list. */\n  withDirection(direction) {\n    this._direction = direction;\n    if (this._sortStrategy instanceof SingleAxisSortStrategy) {\n      this._sortStrategy.direction = direction;\n    }\n    return this;\n  }\n  /**\n   * Sets the containers that are connected to this one. When two or more containers are\n   * connected, the user will be allowed to transfer items between them.\n   * @param connectedTo Other containers that the current containers should be connected to.\n   */\n  connectedTo(connectedTo) {\n    this._siblings = connectedTo.slice();\n    return this;\n  }\n  /**\n   * Sets the orientation of the container.\n   * @param orientation New orientation for the container.\n   */\n  withOrientation(orientation) {\n    if (orientation === 'mixed') {\n      this._sortStrategy = new MixedSortStrategy(this._document, this._dragDropRegistry);\n    } else {\n      const strategy = new SingleAxisSortStrategy(this._dragDropRegistry);\n      strategy.direction = this._direction;\n      strategy.orientation = orientation;\n      this._sortStrategy = strategy;\n    }\n    this._sortStrategy.withElementContainer(this._container);\n    this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    return this;\n  }\n  /**\n   * Sets which parent elements are can be scrolled while the user is dragging.\n   * @param elements Elements that can be scrolled.\n   */\n  withScrollableParents(elements) {\n    const element = this._container;\n    // We always allow the current element to be scrollable\n    // so we need to ensure that it's in the array.\n    this._scrollableElements = elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n    return this;\n  }\n  /**\n   * Configures the drop list so that a different element is used as the container for the\n   * dragged items. This is useful for the cases when one might not have control over the\n   * full DOM that sets up the dragging.\n   * Note that the alternate container needs to be a descendant of the drop list.\n   * @param container New element container to be assigned.\n   */\n  withElementContainer(container) {\n    if (container === this._container) {\n      return this;\n    }\n    const element = coerceElement(this.element);\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && container !== element && !element.contains(container)) {\n      throw new Error('Invalid DOM structure for drop list. Alternate container element must be a descendant of the drop list.');\n    }\n    const oldContainerIndex = this._scrollableElements.indexOf(this._container);\n    const newContainerIndex = this._scrollableElements.indexOf(container);\n    if (oldContainerIndex > -1) {\n      this._scrollableElements.splice(oldContainerIndex, 1);\n    }\n    if (newContainerIndex > -1) {\n      this._scrollableElements.splice(newContainerIndex, 1);\n    }\n    if (this._sortStrategy) {\n      this._sortStrategy.withElementContainer(container);\n    }\n    this._cachedShadowRoot = null;\n    this._scrollableElements.unshift(container);\n    this._container = container;\n    return this;\n  }\n  /** Gets the scrollable parents that are registered with this drop container. */\n  getScrollableParents() {\n    return this._scrollableElements;\n  }\n  /**\n   * Figures out the index of an item in the container.\n   * @param item Item whose index should be determined.\n   */\n  getItemIndex(item) {\n    return this._isDragging ? this._sortStrategy.getItemIndex(item) : this._draggables.indexOf(item);\n  }\n  /**\n   * Whether the list is able to receive the item that\n   * is currently being dragged inside a connected drop list.\n   */\n  isReceiving() {\n    return this._activeSiblings.size > 0;\n  }\n  /**\n   * Sorts an item inside the container based on its position.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  _sortItem(item, pointerX, pointerY, pointerDelta) {\n    // Don't sort the item if sorting is disabled or it's out of range.\n    if (this.sortingDisabled || !this._domRect || !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n      return;\n    }\n    const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n    if (result) {\n      this.sorted.next({\n        previousIndex: result.previousIndex,\n        currentIndex: result.currentIndex,\n        container: this,\n        item\n      });\n    }\n  }\n  /**\n   * Checks whether the user's pointer is close to the edges of either the\n   * viewport or the drop list and starts the auto-scroll sequence.\n   * @param pointerX User's pointer position along the x axis.\n   * @param pointerY User's pointer position along the y axis.\n   */\n  _startScrollingIfNecessary(pointerX, pointerY) {\n    if (this.autoScrollDisabled) {\n      return;\n    }\n    let scrollNode;\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Check whether we should start scrolling any of the parent containers.\n    this._parentPositions.positions.forEach((position, element) => {\n      // We have special handling for the `document` below. Also this would be\n      // nicer with a  for...of loop, but it requires changing a compiler flag.\n      if (element === this._document || !position.clientRect || scrollNode) {\n        return;\n      }\n      if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._direction, pointerX, pointerY);\n        if (verticalScrollDirection || horizontalScrollDirection) {\n          scrollNode = element;\n        }\n      }\n    });\n    // Otherwise check if we can start scrolling the viewport.\n    if (!verticalScrollDirection && !horizontalScrollDirection) {\n      const {\n        width,\n        height\n      } = this._viewportRuler.getViewportSize();\n      const domRect = {\n        width,\n        height,\n        top: 0,\n        right: width,\n        bottom: height,\n        left: 0\n      };\n      verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n      horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n      scrollNode = window;\n    }\n    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection || horizontalScrollDirection !== this._horizontalScrollDirection || scrollNode !== this._scrollNode)) {\n      this._verticalScrollDirection = verticalScrollDirection;\n      this._horizontalScrollDirection = horizontalScrollDirection;\n      this._scrollNode = scrollNode;\n      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n        this._ngZone.runOutsideAngular(this._startScrollInterval);\n      } else {\n        this._stopScrolling();\n      }\n    }\n  }\n  /** Stops any currently-running auto-scroll sequences. */\n  _stopScrolling() {\n    this._stopScrollTimers.next();\n  }\n  /** Starts the dragging sequence within the list. */\n  _draggingStarted() {\n    const styles = this._container.style;\n    this.beforeStarted.next();\n    this._isDragging = true;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n    // Prevent the check from running on apps not using an alternate container. Ideally we\n    // would always run it, but introducing it at this stage would be a breaking change.\n    this._container !== coerceElement(this.element)) {\n      for (const drag of this._draggables) {\n        if (!drag.isDragging() && drag.getVisibleElement().parentNode !== this._container) {\n          throw new Error('Invalid DOM structure for drop list. All items must be placed directly inside of the element container.');\n        }\n      }\n    }\n    // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n    // scrolling. The browser seems to round the value based on the snapping points which means\n    // that we can't increment/decrement the scroll position.\n    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n    styles.scrollSnapType = styles.msScrollSnapType = 'none';\n    this._sortStrategy.start(this._draggables);\n    this._cacheParentPositions();\n    this._viewportScrollSubscription.unsubscribe();\n    this._listenToScrollEvents();\n  }\n  /** Caches the positions of the configured scrollable parents. */\n  _cacheParentPositions() {\n    this._parentPositions.cache(this._scrollableElements);\n    // The list element is always in the `scrollableElements`\n    // so we can take advantage of the cached `DOMRect`.\n    this._domRect = this._parentPositions.positions.get(this._container).clientRect;\n  }\n  /** Resets the container to its initial state. */\n  _reset() {\n    this._isDragging = false;\n    const styles = this._container.style;\n    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n    this._siblings.forEach(sibling => sibling._stopReceiving(this));\n    this._sortStrategy.reset();\n    this._stopScrolling();\n    this._viewportScrollSubscription.unsubscribe();\n    this._parentPositions.clear();\n  }\n  /** Starts the interval that'll auto-scroll the element. */\n  _startScrollInterval = () => {\n    this._stopScrolling();\n    interval(0, animationFrameScheduler).pipe(takeUntil(this._stopScrollTimers)).subscribe(() => {\n      const node = this._scrollNode;\n      const scrollStep = this.autoScrollStep;\n      if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n        node.scrollBy(0, -scrollStep);\n      } else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n        node.scrollBy(0, scrollStep);\n      }\n      if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n        node.scrollBy(-scrollStep, 0);\n      } else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n        node.scrollBy(scrollStep, 0);\n      }\n    });\n  };\n  /**\n   * Checks whether the user's pointer is positioned over the container.\n   * @param x Pointer position along the X axis.\n   * @param y Pointer position along the Y axis.\n   */\n  _isOverContainer(x, y) {\n    return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n  }\n  /**\n   * Figures out whether an item should be moved into a sibling\n   * drop container, based on its current position.\n   * @param item Drag item that is being moved.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _getSiblingContainerFromPosition(item, x, y) {\n    return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n  }\n  /**\n   * Checks whether the drop list can receive the passed-in item.\n   * @param item Item that is being dragged into the list.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _canReceive(item, x, y) {\n    if (!this._domRect || !isInsideClientRect(this._domRect, x, y) || !this.enterPredicate(item, this)) {\n      return false;\n    }\n    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n    // If there's no element at the pointer position, then\n    // the client rect is probably scrolled out of the view.\n    if (!elementFromPoint) {\n      return false;\n    }\n    // The `DOMRect`, that we're using to find the container over which the user is\n    // hovering, doesn't give us any information on whether the element has been scrolled\n    // out of the view or whether it's overlapping with other containers. This means that\n    // we could end up transferring the item into a container that's invisible or is positioned\n    // below another one. We use the result from `elementFromPoint` to get the top-most element\n    // at the pointer position and to find whether it's one of the intersecting drop containers.\n    return elementFromPoint === this._container || this._container.contains(elementFromPoint);\n  }\n  /**\n   * Called by one of the connected drop lists when a dragging sequence has started.\n   * @param sibling Sibling in which dragging has started.\n   */\n  _startReceiving(sibling, items) {\n    const activeSiblings = this._activeSiblings;\n    if (!activeSiblings.has(sibling) && items.every(item => {\n      // Note that we have to add an exception to the `enterPredicate` for items that started off\n      // in this drop list. The drag ref has logic that allows an item to return to its initial\n      // container, if it has left the initial container and none of the connected containers\n      // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n      return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n    })) {\n      activeSiblings.add(sibling);\n      this._cacheParentPositions();\n      this._listenToScrollEvents();\n      this.receivingStarted.next({\n        initiator: sibling,\n        receiver: this,\n        items\n      });\n    }\n  }\n  /**\n   * Called by a connected drop list when dragging has stopped.\n   * @param sibling Sibling whose dragging has stopped.\n   */\n  _stopReceiving(sibling) {\n    this._activeSiblings.delete(sibling);\n    this._viewportScrollSubscription.unsubscribe();\n    this.receivingStopped.next({\n      initiator: sibling,\n      receiver: this\n    });\n  }\n  /**\n   * Starts listening to scroll events on the viewport.\n   * Used for updating the internal state of the list.\n   */\n  _listenToScrollEvents() {\n    this._viewportScrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(event => {\n      if (this.isDragging()) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n          this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n        }\n      } else if (this.isReceiving()) {\n        this._cacheParentPositions();\n      }\n    });\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (!this._cachedShadowRoot) {\n      const shadowRoot = _getShadowRoot(this._container);\n      this._cachedShadowRoot = shadowRoot || this._document;\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Notifies any siblings that may potentially receive the item. */\n  _notifyReceivingSiblings() {\n    const draggedItems = this._sortStrategy.getActiveItemsSnapshot().filter(item => item.isDragging());\n    this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n  }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n  const {\n    top,\n    bottom,\n    height\n  } = clientRect;\n  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n    return AutoScrollVerticalDirection.UP;\n  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n    return AutoScrollVerticalDirection.DOWN;\n  }\n  return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n  const {\n    left,\n    right,\n    width\n  } = clientRect;\n  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n    return AutoScrollHorizontalDirection.LEFT;\n  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n    return AutoScrollHorizontalDirection.RIGHT;\n  }\n  return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n  let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  // Note that we here we do some extra checks for whether the element is actually scrollable in\n  // a certain direction and we only assign the scroll direction if it is. We do this so that we\n  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n  if (computedVertical) {\n    const scrollTop = element.scrollTop;\n    if (computedVertical === AutoScrollVerticalDirection.UP) {\n      if (scrollTop > 0) {\n        verticalScrollDirection = AutoScrollVerticalDirection.UP;\n      }\n    } else if (element.scrollHeight - scrollTop > element.clientHeight) {\n      verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n    }\n  }\n  if (computedHorizontal) {\n    const scrollLeft = element.scrollLeft;\n    if (direction === 'rtl') {\n      if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n        // In RTL `scrollLeft` will be negative when scrolled.\n        if (scrollLeft < 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n        }\n      } else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n      }\n    } else {\n      if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n        if (scrollLeft > 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n        }\n      } else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n      }\n    }\n  }\n  return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind a capturing event. */\nconst capturingEventOptions = {\n  capture: true\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = {\n  passive: false,\n  capture: true\n};\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nclass _ResetsLoader {\n  static ɵfac = function _ResetsLoader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _ResetsLoader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _ResetsLoader,\n    selectors: [[\"ng-component\"]],\n    hostAttrs: [\"cdk-drag-resets-container\", \"\"],\n    decls: 0,\n    vars: 0,\n    template: function _ResetsLoader_Template(rf, ctx) {},\n    styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_ResetsLoader, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'cdk-drag-resets-container': ''\n      },\n      styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\\n\"]\n    }]\n  }], null, null);\n})();\n// TODO(crisbeto): remove generics when making breaking changes.\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\nclass DragDropRegistry {\n  _ngZone = inject(NgZone);\n  _document = inject(DOCUMENT);\n  _styleLoader = inject(_CdkPrivateStyleLoader);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  _cleanupDocumentTouchmove;\n  /** Registered drop container instances. */\n  _dropInstances = new Set();\n  /** Registered drag item instances. */\n  _dragInstances = new Set();\n  /** Drag item instances that are currently being dragged. */\n  _activeDragInstances = signal([]);\n  /** Keeps track of the event listeners that we've bound to the `document`. */\n  _globalListeners;\n  /**\n   * Predicate function to check if an item is being dragged.  Moved out into a property,\n   * because it'll be called a lot and we don't want to create a new function every time.\n   */\n  _draggingPredicate = item => item.isDragging();\n  /**\n   * Map tracking DOM nodes and their corresponding drag directives. Note that this is different\n   * from looking through the `_dragInstances` and getting their root node, because the root node\n   * isn't necessarily the node that the directive is set on.\n   */\n  _domNodesToDirectives = null;\n  /**\n   * Emits the `touchmove` or `mousemove` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  pointerMove = new Subject();\n  /**\n   * Emits the `touchend` or `mouseup` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  pointerUp = new Subject();\n  /**\n   * Emits when the viewport has been scrolled while the user is dragging an item.\n   * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n   * @breaking-change 13.0.0\n   */\n  scroll = new Subject();\n  constructor() {}\n  /** Adds a drop container to the registry. */\n  registerDropContainer(drop) {\n    if (!this._dropInstances.has(drop)) {\n      this._dropInstances.add(drop);\n    }\n  }\n  /** Adds a drag item instance to the registry. */\n  registerDragItem(drag) {\n    this._dragInstances.add(drag);\n    // The `touchmove` event gets bound once, ahead of time, because WebKit\n    // won't preventDefault on a dynamically-added `touchmove` listener.\n    // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n    if (this._dragInstances.size === 1) {\n      this._ngZone.runOutsideAngular(() => {\n        // The event handler has to be explicitly active,\n        // because newer browsers make it passive by default.\n        this._cleanupDocumentTouchmove?.();\n        this._cleanupDocumentTouchmove = _bindEventWithOptions(this._renderer, this._document, 'touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n      });\n    }\n  }\n  /** Removes a drop container from the registry. */\n  removeDropContainer(drop) {\n    this._dropInstances.delete(drop);\n  }\n  /** Removes a drag item instance from the registry. */\n  removeDragItem(drag) {\n    this._dragInstances.delete(drag);\n    this.stopDragging(drag);\n    if (this._dragInstances.size === 0) {\n      this._cleanupDocumentTouchmove?.();\n    }\n  }\n  /**\n   * Starts the dragging sequence for a drag instance.\n   * @param drag Drag instance which is being dragged.\n   * @param event Event that initiated the dragging.\n   */\n  startDragging(drag, event) {\n    // Do not process the same drag twice to avoid memory leaks and redundant listeners\n    if (this._activeDragInstances().indexOf(drag) > -1) {\n      return;\n    }\n    this._styleLoader.load(_ResetsLoader);\n    this._activeDragInstances.update(instances => [...instances, drag]);\n    if (this._activeDragInstances().length === 1) {\n      // We explicitly bind __active__ listeners here, because newer browsers will default to\n      // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n      // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n      const isTouchEvent = event.type.startsWith('touch');\n      const endEventHandler = e => this.pointerUp.next(e);\n      const toBind = [\n      // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n      // the document. See https://github.com/angular/components/issues/17144.\n      ['scroll', e => this.scroll.next(e), capturingEventOptions],\n      // Preventing the default action on `mousemove` isn't enough to disable text selection\n      // on Safari so we need to prevent the selection event as well. Alternatively this can\n      // be done by setting `user-select: none` on the `body`, however it has causes a style\n      // recalculation which can be expensive on pages with a lot of elements.\n      ['selectstart', this._preventDefaultWhileDragging, activeCapturingEventOptions]];\n      if (isTouchEvent) {\n        toBind.push(['touchend', endEventHandler, capturingEventOptions], ['touchcancel', endEventHandler, capturingEventOptions]);\n      } else {\n        toBind.push(['mouseup', endEventHandler, capturingEventOptions]);\n      }\n      // We don't have to bind a move event for touch drag sequences, because\n      // we already have a persistent global one bound from `registerDragItem`.\n      if (!isTouchEvent) {\n        toBind.push(['mousemove', e => this.pointerMove.next(e), activeCapturingEventOptions]);\n      }\n      this._ngZone.runOutsideAngular(() => {\n        this._globalListeners = toBind.map(([name, handler, options]) => _bindEventWithOptions(this._renderer, this._document, name, handler, options));\n      });\n    }\n  }\n  /** Stops dragging a drag item instance. */\n  stopDragging(drag) {\n    this._activeDragInstances.update(instances => {\n      const index = instances.indexOf(drag);\n      if (index > -1) {\n        instances.splice(index, 1);\n        return [...instances];\n      }\n      return instances;\n    });\n    if (this._activeDragInstances().length === 0) {\n      this._clearGlobalListeners();\n    }\n  }\n  /** Gets whether a drag item instance is currently being dragged. */\n  isDragging(drag) {\n    return this._activeDragInstances().indexOf(drag) > -1;\n  }\n  /**\n   * Gets a stream that will emit when any element on the page is scrolled while an item is being\n   * dragged.\n   * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n   *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n   *   be used to include an additional top-level listener at the shadow root level.\n   */\n  scrolled(shadowRoot) {\n    const streams = [this.scroll];\n    if (shadowRoot && shadowRoot !== this._document) {\n      // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n      // because we want to guarantee that the event is bound outside of the `NgZone`. With\n      // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n      streams.push(new Observable(observer => {\n        return this._ngZone.runOutsideAngular(() => {\n          const cleanup = _bindEventWithOptions(this._renderer, shadowRoot, 'scroll', event => {\n            if (this._activeDragInstances().length) {\n              observer.next(event);\n            }\n          }, capturingEventOptions);\n          return () => {\n            cleanup();\n          };\n        });\n      }));\n    }\n    return merge(...streams);\n  }\n  /**\n   * Tracks the DOM node which has a draggable directive.\n   * @param node Node to track.\n   * @param dragRef Drag directive set on the node.\n   */\n  registerDirectiveNode(node, dragRef) {\n    this._domNodesToDirectives ??= new WeakMap();\n    this._domNodesToDirectives.set(node, dragRef);\n  }\n  /**\n   * Stops tracking a draggable directive node.\n   * @param node Node to stop tracking.\n   */\n  removeDirectiveNode(node) {\n    this._domNodesToDirectives?.delete(node);\n  }\n  /**\n   * Gets the drag directive corresponding to a specific DOM node, if any.\n   * @param node Node for which to do the lookup.\n   */\n  getDragDirectiveForNode(node) {\n    return this._domNodesToDirectives?.get(node) || null;\n  }\n  ngOnDestroy() {\n    this._dragInstances.forEach(instance => this.removeDragItem(instance));\n    this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n    this._domNodesToDirectives = null;\n    this._clearGlobalListeners();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n  /**\n   * Event listener that will prevent the default browser action while the user is dragging.\n   * @param event Event whose default action should be prevented.\n   */\n  _preventDefaultWhileDragging = event => {\n    if (this._activeDragInstances().length > 0) {\n      event.preventDefault();\n    }\n  };\n  /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n  _persistentTouchmoveListener = event => {\n    if (this._activeDragInstances().length > 0) {\n      // Note that we only want to prevent the default action after dragging has actually started.\n      // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n      // but it could be pushed back if the user has set up a drag delay or threshold.\n      if (this._activeDragInstances().some(this._draggingPredicate)) {\n        event.preventDefault();\n      }\n      this.pointerMove.next(event);\n    }\n  };\n  /** Clears out the global event listeners from the `document`. */\n  _clearGlobalListeners() {\n    this._globalListeners?.forEach(cleanup => cleanup());\n    this._globalListeners = undefined;\n  }\n  static ɵfac = function DragDropRegistry_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDropRegistry)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DragDropRegistry,\n    factory: DragDropRegistry.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDropRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n  _document = inject(DOCUMENT);\n  _ngZone = inject(NgZone);\n  _viewportRuler = inject(ViewportRuler);\n  _dragDropRegistry = inject(DragDropRegistry);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  constructor() {}\n  /**\n   * Turns an element into a draggable item.\n   * @param element Element to which to attach the dragging functionality.\n   * @param config Object used to configure the dragging behavior.\n   */\n  createDrag(element, config = DEFAULT_CONFIG) {\n    return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry, this._renderer);\n  }\n  /**\n   * Turns an element into a drop list.\n   * @param element Element to which to attach the drop list functionality.\n   */\n  createDropList(element) {\n    return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n  }\n  static ɵfac = function DragDrop_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDrop)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DragDrop,\n    factory: DragDrop.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDrop, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n  if (node.nodeType !== 1) {\n    throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n  }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n  element = inject(ElementRef);\n  _parentDrag = inject(CDK_DRAG_PARENT, {\n    optional: true,\n    skipSelf: true\n  });\n  _dragDropRegistry = inject(DragDropRegistry);\n  /** Emits when the state of the handle has changed. */\n  _stateChanges = new Subject();\n  /** Whether starting to drag through this handle is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._stateChanges.next(this);\n  }\n  _disabled = false;\n  constructor() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      assertElementNode(this.element.nativeElement, 'cdkDragHandle');\n    }\n    this._parentDrag?._addHandle(this);\n  }\n  ngAfterViewInit() {\n    if (!this._parentDrag) {\n      let parent = this.element.nativeElement.parentElement;\n      while (parent) {\n        const ref = this._dragDropRegistry.getDragDirectiveForNode(parent);\n        if (ref) {\n          this._parentDrag = ref;\n          ref._addHandle(this);\n          break;\n        }\n        parent = parent.parentElement;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._parentDrag?._removeHandle(this);\n    this._stateChanges.complete();\n  }\n  static ɵfac = function CdkDragHandle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragHandle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragHandle,\n    selectors: [[\"\", \"cdkDragHandle\", \"\"]],\n    hostAttrs: [1, \"cdk-drag-handle\"],\n    inputs: {\n      disabled: [2, \"cdkDragHandleDisabled\", \"disabled\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_HANDLE,\n      useExisting: CdkDragHandle\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragHandle, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDragHandle]',\n      host: {\n        'class': 'cdk-drag-handle'\n      },\n      providers: [{\n        provide: CDK_DRAG_HANDLE,\n        useExisting: CdkDragHandle\n      }]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragHandleDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n  element = inject(ElementRef);\n  dropContainer = inject(CDK_DROP_LIST, {\n    optional: true,\n    skipSelf: true\n  });\n  _ngZone = inject(NgZone);\n  _viewContainerRef = inject(ViewContainerRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _selfHandle = inject(CDK_DRAG_HANDLE, {\n    optional: true,\n    self: true\n  });\n  _parentDrag = inject(CDK_DRAG_PARENT, {\n    optional: true,\n    skipSelf: true\n  });\n  _dragDropRegistry = inject(DragDropRegistry);\n  _destroyed = new Subject();\n  _handles = new BehaviorSubject([]);\n  _previewTemplate;\n  _placeholderTemplate;\n  /** Reference to the underlying drag instance. */\n  _dragRef;\n  /** Arbitrary data to attach to this drag instance. */\n  data;\n  /** Locks the position of the dragged element along the specified axis. */\n  lockAxis;\n  /**\n   * Selector that will be used to determine the root draggable element, starting from\n   * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n   * when trying to enable dragging on an element that you might not have access to.\n   */\n  rootElementSelector;\n  /**\n   * Node or selector that will be used to determine the element to which the draggable's\n   * position will be constrained. If a string is passed in, it'll be used as a selector that\n   * will be matched starting from the element's parent and going up the DOM until a match\n   * has been found.\n   */\n  boundaryElement;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay;\n  /**\n   * Sets the position of a `CdkDrag` that is outside of a drop container.\n   * Can be used to restore the element's position for a returning user.\n   */\n  freeDragPosition;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this.dropContainer && this.dropContainer.disabled);\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._dragRef.disabled = this._disabled;\n  }\n  _disabled;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * Configures the place into which the preview of the item will be inserted. Can be configured\n   * globally through `CDK_DROP_LIST`. Possible values:\n   * - `global` - Preview will be inserted at the bottom of the `<body>`. The advantage is that\n   * you don't have to worry about `overflow: hidden` or `z-index`, but the item won't retain\n   * its inherited styles.\n   * - `parent` - Preview will be inserted into the parent of the drag item. The advantage is that\n   * inherited styles will be preserved, but it may be clipped by `overflow: hidden` or not be\n   * visible due to `z-index`. Furthermore, the preview is going to have an effect over selectors\n   * like `:nth-child` and some flexbox configurations.\n   * - `ElementRef<HTMLElement> | HTMLElement` - Preview will be inserted into a specific element.\n   * Same advantages and disadvantages as `parent`.\n   */\n  previewContainer;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Emits when the user starts dragging the item. */\n  started = new EventEmitter();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new EventEmitter();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new EventEmitter();\n  /** Emits when the user has moved the item into a new container. */\n  entered = new EventEmitter();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new EventEmitter();\n  /** Emits when the user drops the item inside a container. */\n  dropped = new EventEmitter();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = new Observable(observer => {\n    const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n      source: this,\n      pointerPosition: movedEvent.pointerPosition,\n      event: movedEvent.event,\n      delta: movedEvent.delta,\n      distance: movedEvent.distance\n    }))).subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n    };\n  });\n  _injector = inject(Injector);\n  constructor() {\n    const dropContainer = this.dropContainer;\n    const config = inject(CDK_DRAG_CONFIG, {\n      optional: true\n    });\n    const dragDrop = inject(DragDrop);\n    this._dragRef = dragDrop.createDrag(this.element, {\n      dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n      pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ? config.pointerDirectionChangeThreshold : 5,\n      zIndex: config?.zIndex\n    });\n    this._dragRef.data = this;\n    this._dragDropRegistry.registerDirectiveNode(this.element.nativeElement, this);\n    if (config) {\n      this._assignDefaults(config);\n    }\n    // Note that usually the container is assigned when the drop list is picks up the item, but in\n    // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n    // where there are no items on the first change detection pass, but the items get picked up as\n    // soon as the user triggers another pass by dragging. This is a problem, because the item would\n    // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n    // is too late since the two modes save different kinds of information. We work around it by\n    // assigning the drop container both from here and the list.\n    if (dropContainer) {\n      this._dragRef._withDropContainer(dropContainer._dropListRef);\n      dropContainer.addItem(this);\n      // The drop container reads this so we need to sync it here.\n      dropContainer._dropListRef.beforeStarted.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._dragRef.scale = this.scale;\n      });\n    }\n    this._syncInputs(this._dragRef);\n    this._handleEvents(this._dragRef);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._dragRef.getPlaceholderElement();\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._dragRef.getRootElement();\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._dragRef.reset();\n  }\n  /**\n   * Gets the pixel coordinates of the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    return this._dragRef.getFreeDragPosition();\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._dragRef.setFreeDragPosition(value);\n  }\n  ngAfterViewInit() {\n    // We need to wait until after render, in order for the reference\n    // element to be in the proper place in the DOM. This is mostly relevant\n    // for draggable elements inside portals since they get stamped out in\n    // their original DOM position, and then they get transferred to the portal.\n    afterNextRender(() => {\n      this._updateRootElement();\n      this._setupHandlesListener();\n      this._dragRef.scale = this.scale;\n      if (this.freeDragPosition) {\n        this._dragRef.setFreeDragPosition(this.freeDragPosition);\n      }\n    }, {\n      injector: this._injector\n    });\n  }\n  ngOnChanges(changes) {\n    const rootSelectorChange = changes['rootElementSelector'];\n    const positionChange = changes['freeDragPosition'];\n    // We don't have to react to the first change since it's being\n    // handled in the `afterNextRender` queued up in the constructor.\n    if (rootSelectorChange && !rootSelectorChange.firstChange) {\n      this._updateRootElement();\n    }\n    // Scale affects the free drag position so we need to sync it up here.\n    this._dragRef.scale = this.scale;\n    // Skip the first change since it's being handled in the `afterNextRender` queued up in the\n    // constructor.\n    if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n      this._dragRef.setFreeDragPosition(this.freeDragPosition);\n    }\n  }\n  ngOnDestroy() {\n    if (this.dropContainer) {\n      this.dropContainer.removeItem(this);\n    }\n    this._dragDropRegistry.removeDirectiveNode(this.element.nativeElement);\n    // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n    this._ngZone.runOutsideAngular(() => {\n      this._handles.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._dragRef.dispose();\n    });\n  }\n  _addHandle(handle) {\n    const handles = this._handles.getValue();\n    handles.push(handle);\n    this._handles.next(handles);\n  }\n  _removeHandle(handle) {\n    const handles = this._handles.getValue();\n    const index = handles.indexOf(handle);\n    if (index > -1) {\n      handles.splice(index, 1);\n      this._handles.next(handles);\n    }\n  }\n  _setPreviewTemplate(preview) {\n    this._previewTemplate = preview;\n  }\n  _resetPreviewTemplate(preview) {\n    if (preview === this._previewTemplate) {\n      this._previewTemplate = null;\n    }\n  }\n  _setPlaceholderTemplate(placeholder) {\n    this._placeholderTemplate = placeholder;\n  }\n  _resetPlaceholderTemplate(placeholder) {\n    if (placeholder === this._placeholderTemplate) {\n      this._placeholderTemplate = null;\n    }\n  }\n  /** Syncs the root element with the `DragRef`. */\n  _updateRootElement() {\n    const element = this.element.nativeElement;\n    let rootElement = element;\n    if (this.rootElementSelector) {\n      rootElement = element.closest !== undefined ? element.closest(this.rootElementSelector) :\n      // Comment tag doesn't have closest method, so use parent's one.\n      element.parentElement?.closest(this.rootElementSelector);\n    }\n    if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      assertElementNode(rootElement, 'cdkDrag');\n    }\n    this._dragRef.withRootElement(rootElement || element);\n  }\n  /** Gets the boundary element, based on the `boundaryElement` value. */\n  _getBoundaryElement() {\n    const boundary = this.boundaryElement;\n    if (!boundary) {\n      return null;\n    }\n    if (typeof boundary === 'string') {\n      return this.element.nativeElement.closest(boundary);\n    }\n    return coerceElement(boundary);\n  }\n  /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n  _syncInputs(ref) {\n    ref.beforeStarted.subscribe(() => {\n      if (!ref.isDragging()) {\n        const dir = this._dir;\n        const dragStartDelay = this.dragStartDelay;\n        const placeholder = this._placeholderTemplate ? {\n          template: this._placeholderTemplate.templateRef,\n          context: this._placeholderTemplate.data,\n          viewContainer: this._viewContainerRef\n        } : null;\n        const preview = this._previewTemplate ? {\n          template: this._previewTemplate.templateRef,\n          context: this._previewTemplate.data,\n          matchSize: this._previewTemplate.matchSize,\n          viewContainer: this._viewContainerRef\n        } : null;\n        ref.disabled = this.disabled;\n        ref.lockAxis = this.lockAxis;\n        ref.scale = this.scale;\n        ref.dragStartDelay = typeof dragStartDelay === 'object' && dragStartDelay ? dragStartDelay : coerceNumberProperty(dragStartDelay);\n        ref.constrainPosition = this.constrainPosition;\n        ref.previewClass = this.previewClass;\n        ref.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(placeholder).withPreviewTemplate(preview).withPreviewContainer(this.previewContainer || 'global');\n        if (dir) {\n          ref.withDirection(dir.value);\n        }\n      }\n    });\n    // This only needs to be resolved once.\n    ref.beforeStarted.pipe(take(1)).subscribe(() => {\n      // If we managed to resolve a parent through DI, use it.\n      if (this._parentDrag) {\n        ref.withParent(this._parentDrag._dragRef);\n        return;\n      }\n      // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n      // the item was projected into another item by something like `ngTemplateOutlet`.\n      let parent = this.element.nativeElement.parentElement;\n      while (parent) {\n        const parentDrag = this._dragDropRegistry.getDragDirectiveForNode(parent);\n        if (parentDrag) {\n          ref.withParent(parentDrag._dragRef);\n          break;\n        }\n        parent = parent.parentElement;\n      }\n    });\n  }\n  /** Handles the events from the underlying `DragRef`. */\n  _handleEvents(ref) {\n    ref.started.subscribe(startEvent => {\n      this.started.emit({\n        source: this,\n        event: startEvent.event\n      });\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.released.subscribe(releaseEvent => {\n      this.released.emit({\n        source: this,\n        event: releaseEvent.event\n      });\n    });\n    ref.ended.subscribe(endEvent => {\n      this.ended.emit({\n        source: this,\n        distance: endEvent.distance,\n        dropPoint: endEvent.dropPoint,\n        event: endEvent.event\n      });\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.entered.subscribe(enterEvent => {\n      this.entered.emit({\n        container: enterEvent.container.data,\n        item: this,\n        currentIndex: enterEvent.currentIndex\n      });\n    });\n    ref.exited.subscribe(exitEvent => {\n      this.exited.emit({\n        container: exitEvent.container.data,\n        item: this\n      });\n    });\n    ref.dropped.subscribe(dropEvent => {\n      this.dropped.emit({\n        previousIndex: dropEvent.previousIndex,\n        currentIndex: dropEvent.currentIndex,\n        previousContainer: dropEvent.previousContainer.data,\n        container: dropEvent.container.data,\n        isPointerOverContainer: dropEvent.isPointerOverContainer,\n        item: this,\n        distance: dropEvent.distance,\n        dropPoint: dropEvent.dropPoint,\n        event: dropEvent.event\n      });\n    });\n  }\n  /** Assigns the default input values based on a provided config object. */\n  _assignDefaults(config) {\n    const {\n      lockAxis,\n      dragStartDelay,\n      constrainPosition,\n      previewClass,\n      boundaryElement,\n      draggingDisabled,\n      rootElementSelector,\n      previewContainer\n    } = config;\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.dragStartDelay = dragStartDelay || 0;\n    if (lockAxis) {\n      this.lockAxis = lockAxis;\n    }\n    if (constrainPosition) {\n      this.constrainPosition = constrainPosition;\n    }\n    if (previewClass) {\n      this.previewClass = previewClass;\n    }\n    if (boundaryElement) {\n      this.boundaryElement = boundaryElement;\n    }\n    if (rootElementSelector) {\n      this.rootElementSelector = rootElementSelector;\n    }\n    if (previewContainer) {\n      this.previewContainer = previewContainer;\n    }\n  }\n  /** Sets up the listener that syncs the handles with the drag ref. */\n  _setupHandlesListener() {\n    // Listen for any newly-added handles.\n    this._handles.pipe(\n    // Sync the new handles with the DragRef.\n    tap(handles => {\n      const handleElements = handles.map(handle => handle.element);\n      // Usually handles are only allowed to be a descendant of the drag element, but if\n      // the consumer defined a different drag root, we should allow the drag element\n      // itself to be a handle too.\n      if (this._selfHandle && this.rootElementSelector) {\n        handleElements.push(this.element);\n      }\n      this._dragRef.withHandles(handleElements);\n    }),\n    // Listen if the state of any of the handles changes.\n    switchMap(handles => {\n      return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n    }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n      // Enabled/disable the handle that changed in the DragRef.\n      const dragRef = this._dragRef;\n      const handle = handleInstance.element.nativeElement;\n      handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n    });\n  }\n  static ɵfac = function CdkDrag_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDrag)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDrag,\n    selectors: [[\"\", \"cdkDrag\", \"\"]],\n    hostAttrs: [1, \"cdk-drag\"],\n    hostVars: 4,\n    hostBindings: function CdkDrag_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n      }\n    },\n    inputs: {\n      data: [0, \"cdkDragData\", \"data\"],\n      lockAxis: [0, \"cdkDragLockAxis\", \"lockAxis\"],\n      rootElementSelector: [0, \"cdkDragRootElement\", \"rootElementSelector\"],\n      boundaryElement: [0, \"cdkDragBoundary\", \"boundaryElement\"],\n      dragStartDelay: [0, \"cdkDragStartDelay\", \"dragStartDelay\"],\n      freeDragPosition: [0, \"cdkDragFreeDragPosition\", \"freeDragPosition\"],\n      disabled: [2, \"cdkDragDisabled\", \"disabled\", booleanAttribute],\n      constrainPosition: [0, \"cdkDragConstrainPosition\", \"constrainPosition\"],\n      previewClass: [0, \"cdkDragPreviewClass\", \"previewClass\"],\n      previewContainer: [0, \"cdkDragPreviewContainer\", \"previewContainer\"],\n      scale: [2, \"cdkDragScale\", \"scale\", numberAttribute]\n    },\n    outputs: {\n      started: \"cdkDragStarted\",\n      released: \"cdkDragReleased\",\n      ended: \"cdkDragEnded\",\n      entered: \"cdkDragEntered\",\n      exited: \"cdkDragExited\",\n      dropped: \"cdkDragDropped\",\n      moved: \"cdkDragMoved\"\n    },\n    exportAs: [\"cdkDrag\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PARENT,\n      useExisting: CdkDrag\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDrag, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDrag]',\n      exportAs: 'cdkDrag',\n      host: {\n        'class': 'cdk-drag',\n        '[class.cdk-drag-disabled]': 'disabled',\n        '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n      },\n      providers: [{\n        provide: CDK_DRAG_PARENT,\n        useExisting: CdkDrag\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input,\n      args: ['cdkDragData']\n    }],\n    lockAxis: [{\n      type: Input,\n      args: ['cdkDragLockAxis']\n    }],\n    rootElementSelector: [{\n      type: Input,\n      args: ['cdkDragRootElement']\n    }],\n    boundaryElement: [{\n      type: Input,\n      args: ['cdkDragBoundary']\n    }],\n    dragStartDelay: [{\n      type: Input,\n      args: ['cdkDragStartDelay']\n    }],\n    freeDragPosition: [{\n      type: Input,\n      args: ['cdkDragFreeDragPosition']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    constrainPosition: [{\n      type: Input,\n      args: ['cdkDragConstrainPosition']\n    }],\n    previewClass: [{\n      type: Input,\n      args: ['cdkDragPreviewClass']\n    }],\n    previewContainer: [{\n      type: Input,\n      args: ['cdkDragPreviewContainer']\n    }],\n    scale: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragScale',\n        transform: numberAttribute\n      }]\n    }],\n    started: [{\n      type: Output,\n      args: ['cdkDragStarted']\n    }],\n    released: [{\n      type: Output,\n      args: ['cdkDragReleased']\n    }],\n    ended: [{\n      type: Output,\n      args: ['cdkDragEnded']\n    }],\n    entered: [{\n      type: Output,\n      args: ['cdkDragEntered']\n    }],\n    exited: [{\n      type: Output,\n      args: ['cdkDragExited']\n    }],\n    dropped: [{\n      type: Output,\n      args: ['cdkDragDropped']\n    }],\n    moved: [{\n      type: Output,\n      args: ['cdkDragMoved']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n  /** Drop lists registered inside the group. */\n  _items = new Set();\n  /** Whether starting a dragging sequence from inside this group is disabled. */\n  disabled = false;\n  ngOnDestroy() {\n    this._items.clear();\n  }\n  static ɵfac = function CdkDropListGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDropListGroup)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDropListGroup,\n    selectors: [[\"\", \"cdkDropListGroup\", \"\"]],\n    inputs: {\n      disabled: [2, \"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute]\n    },\n    exportAs: [\"cdkDropListGroup\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DROP_LIST_GROUP,\n      useExisting: CdkDropListGroup\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDropListGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDropListGroup]',\n      exportAs: 'cdkDropListGroup',\n      providers: [{\n        provide: CDK_DROP_LIST_GROUP,\n        useExisting: CdkDropListGroup\n      }]\n    }]\n  }], null, {\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListGroupDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n  element = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _scrollDispatcher = inject(ScrollDispatcher);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _group = inject(CDK_DROP_LIST_GROUP, {\n    optional: true,\n    skipSelf: true\n  });\n  /** Refs that have been synced with the drop ref most recently. */\n  _latestSortedRefs;\n  /** Emits when the list has been destroyed. */\n  _destroyed = new Subject();\n  /** Whether the element's scrollable parents have been resolved. */\n  _scrollableParentsResolved;\n  /** Keeps track of the drop lists that are currently on the page. */\n  static _dropLists = [];\n  /** Reference to the underlying drop list instance. */\n  _dropListRef;\n  /**\n   * Other draggable containers that this container is connected to and into which the\n   * container's items can be transferred. Can either be references to other drop containers,\n   * or their unique IDs.\n   */\n  connectedTo = [];\n  /** Arbitrary data to attach to this container. */\n  data;\n  /** Direction in which the list is oriented. */\n  orientation;\n  /**\n   * Unique ID for the drop zone. Can be used as a reference\n   * in the `connectedTo` of another `CdkDropList`.\n   */\n  id = inject(_IdGenerator).getId('cdk-drop-list-');\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  get disabled() {\n    return this._disabled || !!this._group && this._group.disabled;\n  }\n  set disabled(value) {\n    // Usually we sync the directive and ref state right before dragging starts, in order to have\n    // a single point of failure and to avoid having to use setters for everything. `disabled` is\n    // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n    // the user in a disabled state, so we also need to sync it as it's being set.\n    this._dropListRef.disabled = this._disabled = value;\n  }\n  _disabled;\n  /** Whether sorting within this drop list is disabled. */\n  sortingDisabled;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Functions that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Whether to auto-scroll the view when the user moves their pointer close to the edges. */\n  autoScrollDisabled;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep;\n  /**\n   * Selector that will be used to resolve an alternate element container for the drop list.\n   * Passing an alternate container is useful for the cases where one might not have control\n   * over the parent node of the draggable items within the list (e.g. due to content projection).\n   * This allows for usages like:\n   *\n   * ```\n   * <div cdkDropList cdkDropListElementContainer=\".inner\">\n   *   <div class=\"inner\">\n   *     <div cdkDrag></div>\n   *   </div>\n   * </div>\n   * ```\n   */\n  elementContainerSelector;\n  /** Emits when the user drops an item inside the container. */\n  dropped = new EventEmitter();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new EventEmitter();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new EventEmitter();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new EventEmitter();\n  /**\n   * Keeps track of the items that are registered with this container. Historically we used to\n   * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n   * well which means that we can't handle cases like dragging the headers of a `mat-table`\n   * correctly. What we do instead is to have the items register themselves with the container\n   * and then we sort them based on their position in the DOM.\n   */\n  _unsortedItems = new Set();\n  constructor() {\n    const dragDrop = inject(DragDrop);\n    const config = inject(CDK_DRAG_CONFIG, {\n      optional: true\n    });\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      assertElementNode(this.element.nativeElement, 'cdkDropList');\n    }\n    this._dropListRef = dragDrop.createDropList(this.element);\n    this._dropListRef.data = this;\n    if (config) {\n      this._assignDefaults(config);\n    }\n    this._dropListRef.enterPredicate = (drag, drop) => {\n      return this.enterPredicate(drag.data, drop.data);\n    };\n    this._dropListRef.sortPredicate = (index, drag, drop) => {\n      return this.sortPredicate(index, drag.data, drop.data);\n    };\n    this._setupInputSyncSubscription(this._dropListRef);\n    this._handleEvents(this._dropListRef);\n    CdkDropList._dropLists.push(this);\n    if (this._group) {\n      this._group._items.add(this);\n    }\n  }\n  /** Registers an items with the drop list. */\n  addItem(item) {\n    this._unsortedItems.add(item);\n    // Only sync the items while dragging since this method is\n    // called when items are being initialized one-by-one.\n    if (this._dropListRef.isDragging()) {\n      this._syncItemsWithRef(this.getSortedItems().map(item => item._dragRef));\n    }\n  }\n  /** Removes an item from the drop list. */\n  removeItem(item) {\n    this._unsortedItems.delete(item);\n    // This method might be called on destroy so we always want to sync with the ref.\n    // Note that we reuse the last set of synced items, rather than re-sorting the whole\n    // list, because it can slow down re-renders of large lists (see #30737).\n    if (this._latestSortedRefs) {\n      const index = this._latestSortedRefs.indexOf(item._dragRef);\n      if (index > -1) {\n        this._latestSortedRefs.splice(index, 1);\n        this._syncItemsWithRef(this._latestSortedRefs);\n      }\n    }\n  }\n  /** Gets the registered items in the list, sorted by their position in the DOM. */\n  getSortedItems() {\n    return Array.from(this._unsortedItems).sort((a, b) => {\n      const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n      // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n      // tslint:disable-next-line:no-bitwise\n      return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n    });\n  }\n  ngOnDestroy() {\n    const index = CdkDropList._dropLists.indexOf(this);\n    if (index > -1) {\n      CdkDropList._dropLists.splice(index, 1);\n    }\n    if (this._group) {\n      this._group._items.delete(this);\n    }\n    this._latestSortedRefs = undefined;\n    this._unsortedItems.clear();\n    this._dropListRef.dispose();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n  _setupInputSyncSubscription(ref) {\n    if (this._dir) {\n      this._dir.change.pipe(startWith(this._dir.value), takeUntil(this._destroyed)).subscribe(value => ref.withDirection(value));\n    }\n    ref.beforeStarted.subscribe(() => {\n      const siblings = coerceArray(this.connectedTo).map(drop => {\n        if (typeof drop === 'string') {\n          const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n          if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n          }\n          return correspondingDropList;\n        }\n        return drop;\n      });\n      if (this._group) {\n        this._group._items.forEach(drop => {\n          if (siblings.indexOf(drop) === -1) {\n            siblings.push(drop);\n          }\n        });\n      }\n      // Note that we resolve the scrollable parents here so that we delay the resolution\n      // as long as possible, ensuring that the element is in its final place in the DOM.\n      if (!this._scrollableParentsResolved) {\n        const scrollableParents = this._scrollDispatcher.getAncestorScrollContainers(this.element).map(scrollable => scrollable.getElementRef().nativeElement);\n        this._dropListRef.withScrollableParents(scrollableParents);\n        // Only do this once since it involves traversing the DOM and the parents\n        // shouldn't be able to change without the drop list being destroyed.\n        this._scrollableParentsResolved = true;\n      }\n      if (this.elementContainerSelector) {\n        const container = this.element.nativeElement.querySelector(this.elementContainerSelector);\n        if (!container && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw new Error(`CdkDropList could not find an element container matching the selector \"${this.elementContainerSelector}\"`);\n        }\n        ref.withElementContainer(container);\n      }\n      ref.disabled = this.disabled;\n      ref.lockAxis = this.lockAxis;\n      ref.sortingDisabled = this.sortingDisabled;\n      ref.autoScrollDisabled = this.autoScrollDisabled;\n      ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n      ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef)).withOrientation(this.orientation);\n    });\n  }\n  /** Handles events from the underlying DropListRef. */\n  _handleEvents(ref) {\n    ref.beforeStarted.subscribe(() => {\n      this._syncItemsWithRef(this.getSortedItems().map(item => item._dragRef));\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.entered.subscribe(event => {\n      this.entered.emit({\n        container: this,\n        item: event.item.data,\n        currentIndex: event.currentIndex\n      });\n    });\n    ref.exited.subscribe(event => {\n      this.exited.emit({\n        container: this,\n        item: event.item.data\n      });\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.sorted.subscribe(event => {\n      this.sorted.emit({\n        previousIndex: event.previousIndex,\n        currentIndex: event.currentIndex,\n        container: this,\n        item: event.item.data\n      });\n    });\n    ref.dropped.subscribe(dropEvent => {\n      this.dropped.emit({\n        previousIndex: dropEvent.previousIndex,\n        currentIndex: dropEvent.currentIndex,\n        previousContainer: dropEvent.previousContainer.data,\n        container: dropEvent.container.data,\n        item: dropEvent.item.data,\n        isPointerOverContainer: dropEvent.isPointerOverContainer,\n        distance: dropEvent.distance,\n        dropPoint: dropEvent.dropPoint,\n        event: dropEvent.event\n      });\n      // Mark for check since all of these events run outside of change\n      // detection and we're not guaranteed for something else to have triggered it.\n      this._changeDetectorRef.markForCheck();\n    });\n    merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Assigns the default input values based on a provided config object. */\n  _assignDefaults(config) {\n    const {\n      lockAxis,\n      draggingDisabled,\n      sortingDisabled,\n      listAutoScrollDisabled,\n      listOrientation\n    } = config;\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n    this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n    this.orientation = listOrientation || 'vertical';\n    if (lockAxis) {\n      this.lockAxis = lockAxis;\n    }\n  }\n  /** Syncs up the registered drag items with underlying drop list ref. */\n  _syncItemsWithRef(items) {\n    this._latestSortedRefs = items;\n    this._dropListRef.withItems(items);\n  }\n  static ɵfac = function CdkDropList_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDropList)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDropList,\n    selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]],\n    hostAttrs: [1, \"cdk-drop-list\"],\n    hostVars: 7,\n    hostBindings: function CdkDropList_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n      }\n    },\n    inputs: {\n      connectedTo: [0, \"cdkDropListConnectedTo\", \"connectedTo\"],\n      data: [0, \"cdkDropListData\", \"data\"],\n      orientation: [0, \"cdkDropListOrientation\", \"orientation\"],\n      id: \"id\",\n      lockAxis: [0, \"cdkDropListLockAxis\", \"lockAxis\"],\n      disabled: [2, \"cdkDropListDisabled\", \"disabled\", booleanAttribute],\n      sortingDisabled: [2, \"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute],\n      enterPredicate: [0, \"cdkDropListEnterPredicate\", \"enterPredicate\"],\n      sortPredicate: [0, \"cdkDropListSortPredicate\", \"sortPredicate\"],\n      autoScrollDisabled: [2, \"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute],\n      autoScrollStep: [0, \"cdkDropListAutoScrollStep\", \"autoScrollStep\"],\n      elementContainerSelector: [0, \"cdkDropListElementContainer\", \"elementContainerSelector\"]\n    },\n    outputs: {\n      dropped: \"cdkDropListDropped\",\n      entered: \"cdkDropListEntered\",\n      exited: \"cdkDropListExited\",\n      sorted: \"cdkDropListSorted\"\n    },\n    exportAs: [\"cdkDropList\"],\n    features: [i0.ɵɵProvidersFeature([\n    // Prevent child drop lists from picking up the same group as their parent.\n    {\n      provide: CDK_DROP_LIST_GROUP,\n      useValue: undefined\n    }, {\n      provide: CDK_DROP_LIST,\n      useExisting: CdkDropList\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDropList, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDropList], cdk-drop-list',\n      exportAs: 'cdkDropList',\n      providers: [\n      // Prevent child drop lists from picking up the same group as their parent.\n      {\n        provide: CDK_DROP_LIST_GROUP,\n        useValue: undefined\n      }, {\n        provide: CDK_DROP_LIST,\n        useExisting: CdkDropList\n      }],\n      host: {\n        'class': 'cdk-drop-list',\n        '[attr.id]': 'id',\n        '[class.cdk-drop-list-disabled]': 'disabled',\n        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n      }\n    }]\n  }], () => [], {\n    connectedTo: [{\n      type: Input,\n      args: ['cdkDropListConnectedTo']\n    }],\n    data: [{\n      type: Input,\n      args: ['cdkDropListData']\n    }],\n    orientation: [{\n      type: Input,\n      args: ['cdkDropListOrientation']\n    }],\n    id: [{\n      type: Input\n    }],\n    lockAxis: [{\n      type: Input,\n      args: ['cdkDropListLockAxis']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    sortingDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListSortingDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    enterPredicate: [{\n      type: Input,\n      args: ['cdkDropListEnterPredicate']\n    }],\n    sortPredicate: [{\n      type: Input,\n      args: ['cdkDropListSortPredicate']\n    }],\n    autoScrollDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListAutoScrollDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    autoScrollStep: [{\n      type: Input,\n      args: ['cdkDropListAutoScrollStep']\n    }],\n    elementContainerSelector: [{\n      type: Input,\n      args: ['cdkDropListElementContainer']\n    }],\n    dropped: [{\n      type: Output,\n      args: ['cdkDropListDropped']\n    }],\n    entered: [{\n      type: Output,\n      args: ['cdkDropListEntered']\n    }],\n    exited: [{\n      type: Output,\n      args: ['cdkDropListExited']\n    }],\n    sorted: [{\n      type: Output,\n      args: ['cdkDropListSorted']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n  templateRef = inject(TemplateRef);\n  _drag = inject(CDK_DRAG_PARENT, {\n    optional: true\n  });\n  /** Context data to be added to the preview template instance. */\n  data;\n  /** Whether the preview should preserve the same size as the item that is being dragged. */\n  matchSize = false;\n  constructor() {\n    this._drag?._setPreviewTemplate(this);\n  }\n  ngOnDestroy() {\n    this._drag?._resetPreviewTemplate(this);\n  }\n  static ɵfac = function CdkDragPreview_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragPreview)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragPreview,\n    selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]],\n    inputs: {\n      data: \"data\",\n      matchSize: [2, \"matchSize\", \"matchSize\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PREVIEW,\n      useExisting: CdkDragPreview\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragPreview, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkDragPreview]',\n      providers: [{\n        provide: CDK_DRAG_PREVIEW,\n        useExisting: CdkDragPreview\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input\n    }],\n    matchSize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n  templateRef = inject(TemplateRef);\n  _drag = inject(CDK_DRAG_PARENT, {\n    optional: true\n  });\n  /** Context data to be added to the placeholder template instance. */\n  data;\n  constructor() {\n    this._drag?._setPlaceholderTemplate(this);\n  }\n  ngOnDestroy() {\n    this._drag?._resetPlaceholderTemplate(this);\n  }\n  static ɵfac = function CdkDragPlaceholder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragPlaceholder)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragPlaceholder,\n    selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]],\n    inputs: {\n      data: \"data\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PLACEHOLDER,\n      useExisting: CdkDragPlaceholder\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkDragPlaceholder]',\n      providers: [{\n        provide: CDK_DRAG_PLACEHOLDER,\n        useExisting: CdkDragPlaceholder\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input\n    }]\n  });\n})();\nconst DRAG_DROP_DIRECTIVES = [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder];\nclass DragDropModule {\n  static ɵfac = function DragDropModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDropModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DragDropModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DragDrop],\n    imports: [CdkScrollableModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDropModule, [{\n    type: NgModule,\n    args: [{\n      imports: DRAG_DROP_DIRECTIVES,\n      exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n      providers: [DragDrop]\n    }]\n  }], null, null);\n})();\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import { Component, Input } from '@angular/core';\nimport { SellerType } from '@core/enums';\nimport { Ad, Photos } from '@core/models';\nimport { environment } from '@environments/environment';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'findqo-place-ad-photo-preview',\n    templateUrl: './place-ad-photo-preview.component.html',\n    styleUrl: './place-ad-photo-preview.component.scss',\n    standalone: false\n})\nexport class PlaceAdPhotoPreviewComponent {\n\tconstructor(\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate placeAdService: PlaceAdService\n\t) {\n\t\tthis.adData$ = this.placeAdFacade.getAdData$();\n\t}\n\n\t@Input() images: Photos[];\n\tadData$: Observable<Ad>;\n\tdefaultUserImg: string = environment.defaultAvatarImg;\n\treadonly sellerType = SellerType;\n\tdetailBadges = this.placeAdService.getPropertiesDetailsBadge();\n}\n","<div\n\t*ngIf=\"{\n\t\tadData: adData$ | async\n\t} as vm\"\n>\n\t<p class=\"text-caption-regular fg-general-4 mt-xl-5 mt-0 mb-3 mb-xl-0\">{{ 'n3698' | translations }}</p>\n\n\t<div class=\"ad-details my-xl-3 bg-basic-1 p-3 p-sm-0\">\n\t\t<div *ngIf=\"vm.adData?.seller?.sellerTypeId === sellerType.BUSINESS\" class=\"row justify-content-start align-items-center dealer-details gap-2 bg-basic-1\">\n\t\t\t<div class=\"col-auto\">\n\t\t\t\t<img [src]=\"vm.adData?.seller?.picture || defaultUserImg\" alt=\"Dealer Image\" class=\"dealer-img\" />\n\t\t\t</div>\n\n\t\t\t<div class=\"col overflow-hidden\">\n\t\t\t\t<p class=\"text-body-regular fg-general-5 text-truncate\">{{ vm.adData?.seller?.name }}</p>\n\n\t\t\t\t<p class=\"text-caption-regular fg-general-4\">{{ vm.adData?.seller?.tagline }}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"row overflow-hidden bg-basic-1 border-bottom-10px\" [class.border-top-5px]=\"vm.adData?.seller?.sellerTypeId === sellerType.INDIVIDUAL\">\n\t\t\t<div class=\"row gap-1 gap-sm-2\">\n\t\t\t\t<div class=\"large-photo flex-grow-1\">\n\t\t\t\t\t<div class=\"bg-general-1 image-container position-relative\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t[ngSrc]=\"(!images[0]?.uploadFailed ? images[0]?.url : null) | adImagePipe\"\n\t\t\t\t\t\t\t[ngClass]=\"{ 'object-fit-contain': images.length <= 2 || images.length === 0 }\"\n\t\t\t\t\t\t\tclass=\"image-1 h-100 image-skeleton-loader\"\n\t\t\t\t\t\t\t[alt]=\"vm.adData?.title\"\n\t\t\t\t\t\t\tfindqoAdImage\n\t\t\t\t\t\t\tpriority\n\t\t\t\t\t\t\tfill\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t@if (images.length > 2 || images.length === 0) {\n\t\t\t\t\t<div class=\"col-sm-auto small-photos ad-style d-flex flex-sm-column justify-content-between gap-1 gap-sm-0\">\n\t\t\t\t\t\t<div *ngFor=\"let img of [1, 2]; let i = index\" class=\"bg-general-1 sub-image position-relative\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t[ngSrc]=\"(!images[i + 1]?.uploadFailed ? images[i + 1]?.url : null) | adImagePipe\"\n\t\t\t\t\t\t\t\tclass=\"other-images image-skeleton-loader\"\n\t\t\t\t\t\t\t\t[class.gallery-img]=\"i === 1\"\n\t\t\t\t\t\t\t\t[alt]=\"vm.adData?.title\"\n\t\t\t\t\t\t\t\tfindqoAdImage\n\t\t\t\t\t\t\t\tpriority\n\t\t\t\t\t\t\t\tfill\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div class=\"col-auto py-3 py-sm-4 px-2 px-sm-3 position-relative d-flex flex-column w-100\">\n\t\t\t\t<div class=\"row justify-content-between\">\n\t\t\t\t\t<div class=\"col-sm order-last order-sm-first\">\n\t\t\t\t\t\t<span class=\"text-body-medium lh-18px fg-general-5\">{{ vm.adData?.title }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-auto order-first order-sm-last\">\n\t\t\t\t\t\t<span class=\"d-block px-2 bg-info-1 fg-info-3 rounded-1 text-small-12px-regular h-25px\">\n\t\t\t\t\t\t\t{{ 'n3309' | translations }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<ng-container *ngFor=\"let badge of detailBadges\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclass=\"me-2 text-caption-regular lh-18px align-middle fg-general-4\"\n\t\t\t\t\t\t\t*ngIf=\"vm.adData?.[badge?.property] && vm.adData?.[badge?.property] !== '0'\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<mat-icon class=\"detail-icon fg-general-3\">{{ badge?.icon }}</mat-icon>\n\n\t\t\t\t\t\t\t<span *ngIf=\"badge?.property === 'propertySize'; else showBadgeValue\" class=\"ms-0 d-inline-block\">\n\t\t\t\t\t\t\t\t{{ vm.adData?.[badge?.property]?.value }} {{ vm.adData?.[badge?.property]?.parameter }}\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<ng-template #showBadgeValue>\n\t\t\t\t\t\t\t\t<span>{{ vm.adData?.[badge?.property] }}</span>\n\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"mt-2 fg-general-4 text-caption-regular d-none d-sm-block\">\n\t\t\t\t\t<mat-icon class=\"fg-general-3 detail-icon\">location_on</mat-icon>\n\n\t\t\t\t\t<span class=\"d-inline-block lh-18px align-middle\">{{ vm.adData?.location?.county }}</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"text-body-regular fg-general-5 mt-auto pt-3 d-flex justify-content-between\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{{ vm?.adData?.price | adPrice: vm?.adData?.rentalPeriod }}\n\n\t\t\t\t\t\t<div class=\"d-sm-none mt-1\">\n\t\t\t\t\t\t\t<mat-icon class=\"fg-general-3 detail-icon\">location_on</mat-icon>\n\n\t\t\t\t\t\t\t<span class=\"d-inline-block fg-general-4 text-caption-regular align-middle\">{{ vm.adData?.location?.county }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Photos } from '@core/models';\n\n@Component({\n    selector: 'findqo-place-ad-preview-dialog',\n    templateUrl: './place-ad-preview-dialog.component.html',\n    styleUrl: './place-ad-preview-dialog.component.scss',\n    standalone: false\n})\nexport class PlaceAdPreviewDialogComponent implements OnInit {\n\tconstructor(\n\t\t@Inject(MAT_DIALOG_DATA) public data: { images: Photos[] },\n\t\tpublic dialogRef?: MatDialogRef<PlaceAdPreviewDialogComponent>\n\t) {}\n\n\timages = [];\n\n\tngOnInit(): void {\n\t\tthis.images = this.data?.images;\n\t}\n}\n","<div class=\"container px-0 pb-3 pb-sm-0 h-100\">\n\t<div class=\"row align-items-center justify-content-between border-bottom py-10px px-3 bg-basic-1\">\n\t\t<div class=\"col\">\n\t\t\t<h4 class=\"fg-general-5 heading-4-regular\">{{ 'n363' | translations }}</h4>\n\t\t</div>\n\n\t\t<div class=\"col-auto\">\n\t\t\t<button class=\"bg-general-1\" mat-dialog-close class=\"close-btn bg-general-1\">\n\t\t\t\t<mat-icon class=\"justify-content-center fg-general-4 mx-auto fs-20px\">close</mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<button hidden cdkFocusInitial></button>\n\n\t<mat-dialog-content class=\"preview-content\">\n\t\t<findqo-place-ad-photo-preview [images]=\"images\"></findqo-place-ad-photo-preview>\n\t</mat-dialog-content>\n</div>\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n//to validate video url in place ad video tour. Note:currently we are validating whether its a valid url from youtube or vimeo.\nexport function VideoUrlValidator(): ValidatorFn {\n\treturn (control: AbstractControl): { [key: string]: unknown } | null => {\n\t\tconst VALUE = control?.value?.trim();\n\n\t\tif (VALUE === null || VALUE === undefined || VALUE === '') {\n\t\t\treturn null; // Allow empty value\n\t\t}\n\n\t\t// Regular expressions for Vimeo, YouTube\n\t\tconst vimeoPattern = /^https:\\/\\/(player\\.)?vimeo\\.com\\/(video\\/)?\\d+(\\/[?&]\\S*)?/;\n\t\tconst youtubePattern = /^(https:\\/\\/)?(www\\.)?(youtube\\.com\\/(watch\\?.*v=|embed\\/|v\\/|shorts\\/)|youtu\\.be\\/)[\\w-]{11}($|[?&](?!.*[?&]))/;\n\n\t\treturn youtubePattern.test(VALUE) || vimeoPattern.test(VALUE) ? null : { invalidUrl: true };\n\t};\n}\n","import { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { HttpEventType } from '@angular/common/http';\nimport { Component, Inject, OnDestroy, OnInit, PLATFORM_ID } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription, debounceTime, finalize, fromEvent, map, pairwise, startWith, takeUntil, takeWhile } from 'rxjs';\n\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { PlaceAdDataStatus, PlaceAdType } from '@core/enums';\nimport { Photos, ReOrderImage } from '@core/models';\nimport { ImageService } from '@core/services/image.service';\nimport { ViewportService } from '@core/services/viewport.service';\nimport { PlaceAdPreviewDialogComponent } from '@feature/place-ad/dialogs/place-ad-preiview-dialog/place-ad-preview-dialog.component';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { DestroyService } from '@shared/services/destroy.service';\nimport { VideoUrlValidator } from '@shared/validators/video-url.validator';\n\n@Component({\n    selector: 'findqo-place-ad-photo',\n    templateUrl: './place-ad-photo.component.html',\n    styleUrls: ['./place-ad-photo.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdPhotoComponent implements OnInit, OnDestroy {\n\tconstructor(\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate destroy: DestroyService,\n\t\tpublic viewport: ViewportService,\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate imageService: ImageService,\n\t\tprivate dialog: MatDialog\n\t) {}\n\n\tprivate uploadSubscriptions: Subscription[] = [];\n\n\tvideoUrl = new FormControl('', [VideoUrlValidator()]);\n\tfileName: string;\n\tlessImage = false;\n\timages: Photos[] = [];\n\timageUpdatedStatus: PlaceAdDataStatus = PlaceAdDataStatus.NOT_CREATED; //  to handle data update from tab switch after data submitted once\n\tisSubmitted = false;\n\tyoutubeUrlStatus: PlaceAdDataStatus = PlaceAdDataStatus.NOT_CREATED;\n\tminImages = 1;\n\tisLoading = false;\n\tskeletonLoaders = [];\n\tpreviewDialogRef: MatDialogRef<PlaceAdPreviewDialogComponent, any>;\n\tresizeEventSubscription: Subscription;\n\n\tonFileSelected(event: Event): void {\n\t\tconst FILES = event?.['target']['files'];\n\n\t\tthis.uploadPhoto(FILES);\n\t}\n\n\tgetDroppedFile(event: FileList): void {\n\t\tthis.uploadPhoto(event);\n\t}\n\n\tuploadPhoto(event: FileList): void {\n\t\tif (event?.length <= 0 || this.images?.length >= 50) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(event).forEach(async (key) => {\n\t\t\tlet FILE = event[key];\n\t\t\tconst FILE_READER: FileReader = new FileReader();\n\t\t\tlet fileCompressed = false;\n\n\t\t\tif (FILE.type.includes('heic') || FILE.type.includes('heif')) {\n\t\t\t\tthis.isLoading = true;\n\t\t\t\tthis.skeletonLoaders.push('1'); //to show image-skeleton-loader\n\t\t\t\tfileCompressed = true;\n\t\t\t}\n\n\t\t\tFILE_READER.onloadend = async (event) => {\n\t\t\t\tif (this.isLoading) {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t}\n\n\t\t\t\tif (this.images.length === 50) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst INDEX = this.images.push({ isUploading: true, url: FILE_READER.result, progress: 0, id: null, file: FILE, hide: fileCompressed }) - 1;\n\t\t\t\tthis.images[INDEX]['progress'] = 0;\n\t\t\t\tconst IMAGE_FORM_DATA: FormData = new FormData();\n\n\t\t\t\tif (!fileCompressed) {\n\t\t\t\t\tFILE = await this.imageService.imageCompression(FILE);\n\t\t\t\t}\n\n\t\t\t\tIMAGE_FORM_DATA.append('image', FILE, FILE?.name);\n\n\t\t\t\tconst UPLOAD_SUBSCRIPTIONS = this.placeAdFacade\n\t\t\t\t\t.uploadImage(IMAGE_FORM_DATA)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tfinalize(() => {\n\t\t\t\t\t\t\tif (FILE.type.includes('heic') || FILE.type.includes('heif')) {\n\t\t\t\t\t\t\t\tthis.skeletonLoaders.pop();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe({\n\t\t\t\t\t\tnext: (event) => {\n\t\t\t\t\t\t\tif (event['type'] === HttpEventType.UploadProgress) {\n\t\t\t\t\t\t\t\tthis.images[INDEX]['progress'] = Math.round((event['loaded'] / event['total']) * 100);\n\t\t\t\t\t\t\t} else if (event['type'] === HttpEventType.Response) {\n\t\t\t\t\t\t\t\tif (event['status'] === 201) {\n\t\t\t\t\t\t\t\t\tthis.images[INDEX].id = event['body']['data']?.id;\n\t\t\t\t\t\t\t\t\tthis.images[INDEX].url = event['body']['data']?.url;\n\t\t\t\t\t\t\t\t\tthis.images[INDEX].hide = false;\n\t\t\t\t\t\t\t\t\tthis.images[INDEX].isUploading = false;\n\t\t\t\t\t\t\t\t\tthis.placeAdFacade.setIsAdUpdated(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\t\tthis.images[INDEX].progress = 0;\n\t\t\t\t\t\t\tthis.images[INDEX].uploadFailed = true;\n\t\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\t\tthis.images[INDEX].hide = false;\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\tthis.uploadSubscriptions.push(UPLOAD_SUBSCRIPTIONS);\n\t\t\t\tthis.updateImageUploadStatus();\n\n\t\t\t\tif (this.isSubmitted) {\n\t\t\t\t\tthis.lessImage = this.images.length < this.minImages;\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (this.images.length <= 50) {\n\t\t\t\tFILE_READER.readAsDataURL(FILE);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync reuploadFailedImage(index: number): Promise<void> {\n\t\tconst FAILED_IMAGE = this.images[index];\n\n\t\tif (FAILED_IMAGE.uploadFailed) {\n\t\t\tconst FILE = FAILED_IMAGE.file;\n\n\t\t\tconst IMAGE_FORM_DATA: FormData = new FormData();\n\t\t\tIMAGE_FORM_DATA.append('image', FILE, FILE?.name);\n\n\t\t\tconst UPLOAD_SUBSCRIPTIONS = this.placeAdFacade.uploadImage(IMAGE_FORM_DATA).subscribe({\n\t\t\t\tnext: (event) => {\n\t\t\t\t\tif (event['type'] === HttpEventType.UploadProgress) {\n\t\t\t\t\t\tthis.images[index]['progress'] = Math.round((event['loaded'] / event['total']) * 100);\n\t\t\t\t\t\tthis.images[index]['uploadFailed'] = false;\n\t\t\t\t\t} else if (event['type'] === HttpEventType.Response) {\n\t\t\t\t\t\tif (event['status'] === 201) {\n\t\t\t\t\t\t\tthis.images[index]['id'] = event['body']['data']['id'];\n\t\t\t\t\t\t\tthis.images[index]['url'] = event['body']['data']['url'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: (err) => {\n\t\t\t\t\tthis.images[index].progress = 0;\n\t\t\t\t\tthis.images[index].uploadFailed = true;\n\t\t\t\t\tthis.images[index].hide = false;\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tthis.uploadSubscriptions.push(UPLOAD_SUBSCRIPTIONS);\n\t\t\tthis.updateImageUploadStatus();\n\t\t}\n\t}\n\n\tdeleteImage(index: number, imagId: string): void {\n\t\tif (this.images?.length <= this.minImages) {\n\t\t\tthis.setTabIndex();\n\t\t}\n\n\t\tthis.placeAdService.setIsNextButtonDisabled(true);\n\n\t\tthis.placeAdFacade\n\t\t\t.onDeleteImage(imagId)\n\t\t\t.then(() => {\n\t\t\t\tthis.images.splice(index, 1);\n\t\t\t\tthis.updateImageUploadStatus();\n\t\t\t\tthis.placeAdFacade.setIsAdUpdated(true);\n\n\t\t\t\tif (this.images.length < this.minImages) {\n\t\t\t\t\tthis.setTabIndex();\n\t\t\t\t}\n\n\t\t\t\tthis.placeAdService.setIsNextButtonDisabled(false);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthis.placeAdService.setIsNextButtonDisabled(false);\n\t\t\t});\n\t}\n\n\tdrop(event: any): void {\n\t\tmoveItemInArray(this.images, event.previousIndex, event.currentIndex);\n\t\tthis.updateImageUploadStatus();\n\t}\n\n\tsetAsMain(index: number): void {\n\t\tmoveItemInArray(this.images, index, 0);\n\n\t\tthis.updateImageUploadStatus();\n\t}\n\n\tcancelUpload(imageIndex: number): void {\n\t\tif (imageIndex >= 0 && imageIndex < this.uploadSubscriptions.length) {\n\t\t\tthis.uploadSubscriptions[imageIndex].unsubscribe();\n\t\t\tthis.images.splice(imageIndex, 1);\n\t\t} else if (imageIndex >= 0) {\n\t\t\tthis.images.splice(imageIndex, 1);\n\t\t}\n\t}\n\n\treOrderImages(): ReOrderImage[] {\n\t\tconst updatedImagesArray: ReOrderImage[] = [];\n\n\t\tthis.images.forEach((image, index) => {\n\t\t\tupdatedImagesArray.push({ id: image?.id, order: index + 1, isCover: index === 0 ? 1 : 0 });\n\t\t});\n\n\t\treturn updatedImagesArray;\n\t}\n\n\tupdateImageUploadStatus(): void {\n\t\tif (this.imageUpdatedStatus === PlaceAdDataStatus?.UPDATED) {\n\t\t\tthis.imageUpdatedStatus = PlaceAdDataStatus?.UPDATED_AGAIN;\n\t\t}\n\n\t\tif (this.imageUpdatedStatus === PlaceAdDataStatus?.UPDATED_AGAIN) {\n\t\t\tthis.lessImage = this.images.length < this.minImages;\n\t\t}\n\t}\n\n\tcallReOrderImageApi(): void {\n\t\tthis.placeAdFacade.reOrderImage(this.reOrderImages()).then(() => {\n\t\t\tthis.imageUpdatedStatus = PlaceAdDataStatus.UPDATED;\n\t\t\tthis.lessImage = this.images?.length < this.minImages;\n\t\t});\n\t}\n\n\tprivate setTabIndex(): void {\n\t\tconst CURRENT_TAB_INDEX = this.placeAdService.getTabIndex();\n\t\tthis.placeAdService.setStepsEnableStatus(CURRENT_TAB_INDEX);\n\t\tthis.placeAdService.setTabIndex(CURRENT_TAB_INDEX);\n\t}\n\n\tasync onNext(): Promise<boolean> {\n\t\t//to prevent user from going to next tab if the videoUrl is entered and its invalid even if there is correct image data\n\t\tthis.lessImage = this.images?.length < this.minImages;\n\t\tthis.isSubmitted = true;\n\t\tconst UPDATE_TAB_INDEX = this.placeAdService.getTabIndex() + 1;\n\n\t\tif (this.images?.length >= this.minImages && this.images[this.images.length - 1]?.id && this.videoUrl?.valid) {\n\t\t\ttry {\n\t\t\t\tif (this.youtubeUrlStatus === PlaceAdDataStatus?.UPDATED_AGAIN) {\n\t\t\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.YOUTUBE_VIDEO_URL, this.videoUrl.value);\n\n\t\t\t\t\tawait this.placeAdFacade.updateYoutubeUrlData();\n\t\t\t\t\tthis.youtubeUrlStatus = PlaceAdDataStatus.UPDATED;\n\t\t\t\t\tthis.videoUrl.setErrors(null);\n\n\t\t\t\t\tif (this.imageUpdatedStatus !== PlaceAdDataStatus?.UPDATED) {\n\t\t\t\t\t\tawait this.callReOrderImageApi();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.placeAdService.directTabIndexUpdate(UPDATE_TAB_INDEX);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.imageUpdatedStatus !== PlaceAdDataStatus?.UPDATED) {\n\t\t\t\t\t\tawait this.callReOrderImageApi();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.placeAdService.directTabIndexUpdate(UPDATE_TAB_INDEX);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true; // Successfully processed\n\t\t\t} catch (error) {\n\t\t\t\tif (this.youtubeUrlStatus === PlaceAdDataStatus?.UPDATED_AGAIN) {\n\t\t\t\t\tthis.videoUrl.setErrors({ invalid: true });\n\t\t\t\t}\n\n\t\t\t\tthis.setTabIndex();\n\t\t\t\treturn false; // Error occurred\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setTabIndex(); // Insufficient images or invalid video URL\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//update videoUrl data in placeAd data\n\tupdateYoutubeUrlField(): void {\n\t\tlet count = 0;\n\n\t\tthis.videoUrl.valueChanges.pipe(startWith(''), pairwise(), takeUntil(this.destroy)).subscribe(([prev, next]: [string, string]) => {\n\t\t\tif (!this.videoUrl.valid) {\n\t\t\t\tthis.placeAdService.deleteIndividualControl(PlaceAdType.YOUTUBE_VIDEO_URL);\n\t\t\t\tthis.youtubeUrlStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\tthis.setTabIndex();\n\t\t\t} else {\n\t\t\t\tif (JSON.stringify(prev) !== JSON.stringify(next)) {\n\t\t\t\t\tcount++;\n\n\t\t\t\t\tif (this.placeAdFacade.getIsEditMode() && count > 1) {\n\t\t\t\t\t\tthis.youtubeUrlStatus = PlaceAdDataStatus?.UPDATED_AGAIN;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.youtubeUrlStatus = PlaceAdDataStatus?.UPDATED_AGAIN;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\trotateImage(index: number, imageId: string): void {\n\t\tconst IMAGE_URL = this.images[index].url as string;\n\n\t\tthis.imageService.rotateImage(IMAGE_URL).then((blob) => {\n\t\t\tconst ROTATED_IMAGE = URL.createObjectURL(blob);\n\n\t\t\tthis.images[index].url = ROTATED_IMAGE;\n\n\t\t\tconst IMAGE_FORM_DATA: FormData = new FormData();\n\n\t\t\tIMAGE_FORM_DATA.append('image', blob);\n\n\t\t\tthis.placeAdFacade.uploadAdImageAfterRotate(this.placeAdFacade.getAdId(), imageId, IMAGE_FORM_DATA).subscribe();\n\t\t});\n\t}\n\n\t//to patch edit data if any\n\tpatchEditAdData(): void {\n\t\tthis.placeAdFacade.editAdData$.subscribe((editData) => {\n\t\t\tif (editData?.images?.length > 0) {\n\t\t\t\teditData?.images?.forEach((image) => {\n\t\t\t\t\tthis.images.push(image);\n\t\t\t\t});\n\n\t\t\t\tthis.imageUpdatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t}\n\n\t\t\tif (editData?.youtubeVideoUrl) {\n\t\t\t\tthis.videoUrl.patchValue(editData?.youtubeVideoUrl);\n\t\t\t\tthis.videoUrl.markAsTouched();\n\t\t\t\tthis.youtubeUrlStatus = PlaceAdDataStatus.UPDATED;\n\t\t\t}\n\t\t});\n\t}\n\n\topenPreviewAd(): void {\n\t\tthis.previewDialogRef = this.dialog.open(PlaceAdPreviewDialogComponent, {\n\t\t\tdata: {\n\t\t\t\timages: this.images,\n\t\t\t},\n\t\t\twidth: '100%',\n\t\t\tmaxWidth: '630px',\n\t\t\tpanelClass: 'ad-preview-dialog',\n\t\t\tid: 'preview-ad',\n\t\t});\n\n\t\tif (!this.resizeEventSubscription) {\n\t\t\tthis.onWindowResize();\n\t\t}\n\t}\n\n\tonWindowResize(): void {\n\t\tthis.resizeEventSubscription = fromEvent(window, 'resize')\n\t\t\t.pipe(\n\t\t\t\ttakeWhile(() => {\n\t\t\t\t\treturn !!this.dialog.getDialogById('preview-ad');\n\t\t\t\t}),\n\t\t\t\tdebounceTime(100),\n\t\t\t\tmap(() => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: window.innerWidth,\n\t\t\t\t\t\theight: window.innerHeight,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((data) => {\n\t\t\t\tif (data?.width > 1200) {\n\t\t\t\t\tthis.previewDialogRef.close();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.resizeEventSubscription) {\n\t\t\tthis.resizeEventSubscription.unsubscribe();\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t\tthis.updateYoutubeUrlField();\n\t\tthis.patchEditAdData();\n\t}\n}\n","<mat-progress-bar mode=\"indeterminate\" class=\"position-fixed loading-progress\" *ngIf=\"isLoading\"></mat-progress-bar>\n\n<div>\n\t<div class=\"row gap-4 justify-content-center\">\n\t\t<div class=\"col w-550px px-lg-3\">\n\t\t\t<!-- Heading -->\n\t\t\t<div class=\"mb-4\">\n\t\t\t\t<h3 class=\"mb-1 fg-general-5 heading-3\">{{ 'n281' | translations }}</h3>\n\n\t\t\t\t<p class=\"fs-12px lh-16px fw-400 fg-general-3\">\n\t\t\t\t\t'A minimum 1 image required to showcase your ad! Gain more leads by uploading quality photos. And pick the best photo as your cover photo.'\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclass=\"re-order-container bg-info-1 fg-info-3 d-flex justify-content-center align-items-center\"\n\t\t\t\t*ngIf=\"images?.length > 1 && !!images?.[1]?.id\"\n\t\t\t\t[ngClass]=\"viewport?.mobile ? 'text-caption-regular' : 'text-body-regular'\"\n\t\t\t>\n\t\t\t\t<mat-icon class=\"material-icons-outlined re-order-icon fs-20px\">tips_and_updates</mat-icon>\n\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"fw-500\">{{ 'n3105' | translations }}</span>\n\t\t\t\t\t&nbsp;\n\n\t\t\t\t\t<span>{{ 'n3106' | translations }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Drag and drop UI -->\n\t\t\t<a\n\t\t\t\tclass=\"drop-photo d-flex justify-content-center align-items-center mb-4 text-center cursor-pointer\"\n\t\t\t\tfindqoDragDrop\n\t\t\t\t(fileDropped)=\"getDroppedFile($event)\"\n\t\t\t\t*ngIf=\"images.length <= 0 && !isLoading; else imageContainer\"\n\t\t\t\t(click)=\"uploadFile.value = ''; uploadFile.click()\"\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"icon bg-info-1 mb-3 mx-auto\">\n\t\t\t\t\t\t<mat-icon class=\"material-symbols-outlined fg-info-3\">add_photo_alternate</mat-icon>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<p class=\"lh-16px fs-12px fg-general-4\">{{ 'n3074' | translations }}</p>\n\n\t\t\t\t\t<p class=\"fg-general-4 lh-16px fs-12px\">\n\t\t\t\t\t\t{{ 'n3075' | translations }}\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tclass=\"d-none\"\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t#uploadFile\n\t\t\t\t\t\t(change)=\"onFileSelected($event)\"\n\t\t\t\t\t\taccept=\"image/jpg,image/png,image/jpeg,image/heic,image/heif,image/webp\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<p class=\"lh-16px fs-12px fg-general-2\">{{ 'n288' | translations }}</p>\n\t\t\t\t</div>\n\t\t\t</a>\n\n\t\t\t<!-- Image uploaded UI -->\n\n\t\t\t<ng-template #imageContainer>\n\t\t\t\t<div class=\"row gap-3 mb-4\" cdkDropList (cdkDropListDropped)=\"drop($event)\" findqoDragDrop (fileDropped)=\"getDroppedFile($event)\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tcdkDrag\n\t\t\t\t\t\tclass=\"col-auto cursor-pointer\"\n\t\t\t\t\t\t*ngFor=\"let image of images; let i = index\"\n\t\t\t\t\t\tpreviewClass=\"drag-preview\"\n\t\t\t\t\t\t[class.disabled]=\"image.isUploading === true\"\n\t\t\t\t\t\t[cdkDragDisabled]=\"!image?.id || image.isUploading === true\"\n\t\t\t\t\t\t[ngClass]=\"{ 'mb-2': viewport?.mobile && !image?.id, 'd-none': image['hide'] }\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"position-relative rounded-1 photo-view\" [class.highligt-main-img]=\"(i | adMainPhoto: images) && image?.id\">\n\t\t\t\t\t\t\t<img [src]=\"image?.url\" alt=\"Ad Image\" class=\"ad-image\" [class.rounded-0]=\"(i | adMainPhoto: images) && image?.id\" />\n\n\t\t\t\t\t\t\t<div *ngIf=\"image.uploadFailed\">\n\t\t\t\t\t\t\t\t<div class=\"p-2 bg-error-3 text-align-centre position-absolute upload-failed\">\n\t\t\t\t\t\t\t\t\t<div class=\"d-flex align-items-center justify-content-center fg-basic-1\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"text-caption-regular fg-basic-1\">{{ 'n3351' | translations }}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<ng-container *ngIf=\"!image?.id; else deleteTemplate\">\n\t\t\t\t\t\t\t\t<button mat-mini-fab class=\"position-absolute cancel-img\" aria-label=\"close button\" disableRipple (click)=\"cancelUpload(i)\" type=\"button\">\n\t\t\t\t\t\t\t\t\t<mat-icon class=\"fg-basic-1 fs-18px delete-icon\">close</mat-icon>\n\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t<mat-progress-bar mode=\"determinate\" [value]=\"image?.progress\" class=\"img-progress position-absolute mx-2\"></mat-progress-bar>\n\t\t\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t\t\t<ng-template #deleteTemplate>\n\t\t\t\t\t\t\t\t<div class=\"row position-absolute button-container\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-auto px-0\" *ngIf=\"image?.id\" [ngClass]=\"(i | adMainPhoto: images) ? 'ms-1' : 'ms-2'\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"cover-image px-2\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"fs-14px fw-400 image-index d-inline-block text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ (i | adMainPhoto: images) ? ('n3536' | translations) : (i | adPhotoIndex: images) }}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"col ps-0 d-flex gap-2 justify-content-end pe-2\">\n\t\t\t\t\t\t\t\t\t\t<button mat-mini-fab class=\"rotate-img\" aria-label=\"rotate button\" disableRipple (click)=\"rotateImage(i, image?.id)\" type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"fg-basic-1 fs-18px rotate-icon\">rotate_90_degrees_cw</mat-icon>\n\t\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t\t<button mat-mini-fab class=\"delete-img\" aria-label=\"close button\" disableRipple (click)=\"deleteImage(i, image?.id)\" type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"fg-basic-1 fs-18px delete-icon\">delete</mat-icon>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<a class=\"bg-basic-1 fg-info-3 text-body-regular main-photo-link cursor-pointer\" (click)=\"reuploadFailedImage(i)\" *ngIf=\"image.uploadFailed\">\n\t\t\t\t\t\t\t{{ 'n3352' | translations }}\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclass=\"bg-basic-1 fg-info-3 text-body-regular main-photo-link cursor-pointer\"\n\t\t\t\t\t\t\t(click)=\"setAsMain(i)\"\n\t\t\t\t\t\t\t*ngIf=\"!(i | adMainPhoto: images) && !!image?.id\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ 'n3104' | translations }}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<!-- image skeleton loader -->\n\t\t\t\t\t<div class=\"col-auto align-middle\" *ngFor=\"let load of skeletonLoaders\">\n\t\t\t\t\t\t<div class=\"skeleton-loader rounded-1 mb-2\">\n\t\t\t\t\t\t\t<p class=\"fg-general-4 fs-14px align-middle text-center fw-400 w-100\">{{ 'n3471' | translations }}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-auto col-sm-4 bg-general-1 rounded-1 add-photo align-middle cursor-pointer position-relative\" *ngIf=\"images.length !== 50\">\n\t\t\t\t\t\t<a class=\"text-decoration-none d-block h-100\" (click)=\"uploadFile.value = ''; uploadFile.click()\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tclass=\"d-none\"\n\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t#uploadFile\n\t\t\t\t\t\t\t\t(change)=\"onFileSelected($event)\"\n\t\t\t\t\t\t\t\taccept=\"image/jpg,image/png,image/jpeg,image/heic,image/heif,image/webp\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div class=\"add-more-photo w-100 text-center\">\n\t\t\t\t\t\t\t\t<mat-icon class=\"add-photo-icon fg-general-4 material-icons-outlined mx-auto\">add_photo_alternate</mat-icon>\n\n\t\t\t\t\t\t\t\t<p class=\"fg-general-4 fs-14px lh-18px fw-400\">{{ 'n3045' | translations }}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ng-template>\n\n\t\t\t<div class=\"photo-alert rounded-1 bg-neutral-1 my-4 px-3\" *ngIf=\"images.length <= 0 || lessImage\" [class.image-alert]=\"lessImage\">\n\t\t\t\t<div class=\"fg-neutral-3 fs-14px fw-400\">\n\t\t\t\t\t<mat-icon class=\"fg-neutral-3 fs-20px me-2 align-middle\" *ngIf=\"images.length === 0 && !lessImage\">error_outline</mat-icon>\n\n\t\t\t\t\t<mat-icon class=\"fg-error-3 fs-20px me-2 align-middle material-icons-round\" *ngIf=\"lessImage\">warning_amber</mat-icon>\n\n\t\t\t\t\t<span class=\"lh-18px d-inline-block\">At least 1 photo is required</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<button mat-button class=\"fg-info-3 text-body-regular d-block mb-4 d-xl-none px-0\" (click)=\"openPreviewAd()\">{{ 'n3697' | translations }}</button>\n\n\t\t\t<!-- Video Url UI -->\n\t\t\t<h3 class=\"fg-general-5 heading-3 mb-2\">{{ 'n3040' | translations }}</h3>\n\t\t\t<mat-form-field id=\"videoControl\" appearance=\"outline\" [ngClass]=\"{ 'no-subscript': !videoUrl.errors }\">\n\t\t\t\t<input type=\"text\" [placeholder]=\"'n3748' | translations\" matInput [formControl]=\"videoUrl\" />\n\t\t\t\t<!-- TODO:Need to check with design team for appropriate error message -->\n\t\t\t\t<mat-error *ngIf=\"videoUrl.hasError\" class=\"text-caption-regular\">Invalid Url. Please enter a valid url.</mat-error>\n\t\t\t</mat-form-field>\n\n\t\t\t<p class=\"text-caption-regular fg-general-5 mt-2\">{{ 'n3039' | translations }}</p>\n\t\t</div>\n\n\t\t<div class=\"col-auto w-626px px-lg-3 d-xl-block d-none\">\n\t\t\t<findqo-place-ad-photo-preview [images]=\"images\"></findqo-place-ad-photo-preview>\n\t\t</div>\n\t</div>\n</div>\n\n<!-- <findqo-place-ad-tab-buttons (nextTab)=\"onNext()\"></findqo-place-ad-tab-buttons> -->\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdPhotoPreviewComponent } from './place-ad-photo-preview.component';\n\n@NgModule({\n\tdeclarations: [PlaceAdPhotoPreviewComponent],\n\timports: [SharedModule],\n\texports: [PlaceAdPhotoPreviewComponent],\n})\nexport class PlaceAdPhotoPreviewModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PlaceAdPhotoPreviewModule } from '@feature/place-ad/components/place-ad-photo-preview/place-ad-photo-preview.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdPreviewDialogComponent } from './place-ad-preview-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n\tdeclarations: [PlaceAdPreviewDialogComponent],\n\timports: [SharedModule, MatDialogModule, PlaceAdPhotoPreviewModule],\n\texports: [PlaceAdPreviewDialogComponent],\n})\nexport class PlaceAdPreviewDialogModule {}\n","import { NgModule } from '@angular/core';\n\nimport { CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport { ButtonModule } from '@shared/components/button/button.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { PlaceAdPhotoPreviewModule } from '../place-ad-photo-preview/place-ad-photo-preview.module';\nimport { PlaceAdPhotoComponent } from './place-ad-photo.component';\nimport { PlaceAdPreviewDialogModule } from '@feature/place-ad/dialogs/place-ad-preiview-dialog/place-ad-preivew-dialog.module';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdPhotoComponent],\n\timports: [\n\t\tSharedModule,\n\t\tMatProgressBarModule,\n\t\tMatInputModule,\n\t\tCdkDropList,\n\t\tCdkDrag,\n\t\tButtonModule,\n\t\tPlaceAdTabButtonsModule,\n\t\tPlaceAdPhotoPreviewModule,\n\t\tPlaceAdPreviewDialogModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t],\n\texports: [PlaceAdPhotoComponent],\n})\nexport class PlaceAdPhotoModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { ButtonType } from '@shared/components/button/button.component';\n\nexport interface CouponCode {\n\tcouponCode: string;\n}\n\n@Component({\n    selector: 'findqo-place-ad-view-coupon',\n    templateUrl: './place-ad-view-coupon.component.html',\n    styleUrls: ['./place-ad-view-coupon.component.scss'],\n    standalone: false\n})\nexport class PlaceAdViewCouponComponent {\n\tconstructor(@Inject(MAT_DIALOG_DATA) public data: CouponCode, private dialogRef: MatDialogRef<PlaceAdViewCouponComponent>) {}\n\n\treadonly buttonType = ButtonType;\n\n\tapplyCouponCode(): void {\n\t\tthis.dialogRef.close(!!this.data?.couponCode);\n\t}\n}\n","<div class=\"container p-0\">\n\t<div class=\"row mx-0 px-3 justify-content-between align-items-center dialog-header\">\n\t\t<div class=\"col-auto px-0\">\n\t\t\t<h4 class=\"heading-4 fg-general-5 m-0\">{{ 'n3079' | translations | titlecase }}</h4>\n\t\t</div>\n\n\t\t<div class=\"col-auto px-0\">\n\t\t\t<button mat-icon-button mat-dialog-close class=\"close-btn\">\n\t\t\t\t<mat-icon class=\"justify-content-center fg-general-4\">close</mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<div class=\"p-3\">\n\t\t<span class=\"coupon-data bg-general-1 px-3 d-block fg-info-3 text-body-regular\" *ngIf=\"data?.couponCode; else noCoupon\">{{ data?.couponCode }}</span>\n\n\t\t<ng-template #noCoupon>\n\t\t\t<span class=\"d-block fg-general-4 text-body-regular\">{{ 'n3396' | translations }}</span>\n\t\t</ng-template>\n\t</div>\n\n\t<div class=\"row mx-0 gap-3 p-3 dialog-actions\">\n\t\t<div class=\"col px-0\">\n\t\t\t<findqo-button\n\t\t\t\t[btnType]=\"buttonType.FILLED\"\n\t\t\t\t[label]=\"data?.couponCode ? ('n3348' | translations) : ('n600' | translations)\"\n\t\t\t\t[materialIconPrefix]=\"data?.couponCode ? 'sentiment_satisfied_alt' : ''\"\n\t\t\t\t[isStopPropagation]=\"true\"\n\t\t\t\t[btnClass]=\"'text-body-regular w-100'\"\n\t\t\t\t(clicked)=\"applyCouponCode()\"\n\t\t\t></findqo-button>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { APP_ROUTE } from '@core/constants';\nimport { AuthService } from '@core/data-access/services/auth.service';\nimport { AdPaymentStatus, AdStatus, AisleType, FeatureVersion, PlaceAdPlanTypes, PlaceAdPlansId, SectionType, SellerType } from '@core/enums';\nimport { SubscriptionStatus, SubscriptionTier, SubscriptionType } from '@core/enums/profile.enum';\nimport { ClientUser, CommonItem, EditAdResponseData, PageMetaData, PlanTierAccount, PlanTiers, SubscriptionInfo, planTiers } from '@core/models';\nimport { SnackService } from '@core/services/snack.service';\nimport { ViewportService } from '@core/services/viewport.service';\nimport { environment } from '@environments/environment';\nimport { MyProfileFacade } from '@feature/my-profile/my-profile.facade';\nimport { BRANDED_COUPON_CODE, COUPON_PRICE, FEATURED_AD_PLAN_IDS, INDIVIDUAL_COUPON_CODE, LIMITED_COUPON_CODE } from '@feature/place-ad/place-ad.constant';\nimport { DAYS_LISTED } from '@feature/place-ad/place-ad.constant';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { DestroyService } from '@shared/services/destroy.service';\nimport { Observable, finalize, switchMap, takeUntil } from 'rxjs';\nimport { InvalidSubscriptionDialogComponent } from '../invalid-subscription-dialog/invalid-subscription-dialog.component';\nimport { PlaceAdViewCouponComponent } from '../place-ad-view-coupon/place-ad-view-coupon.component';\n\n@Component({\n    selector: 'findqo-place-ad-plans',\n    templateUrl: './place-ad-plans.component.html',\n    styleUrls: ['./place-ad-plans.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdPlansComponent implements OnInit {\n\tconstructor(\n\t\tpublic viewport: ViewportService,\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate placeAdfacade: PlaceAdFacade,\n\t\tprivate matDialog: MatDialog,\n\t\tprivate snackService: SnackService,\n\t\tprivate destroy: DestroyService,\n\t\tprivate profileFacade: MyProfileFacade,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly auth: AuthService,\n\t\tprivate readonly route: ActivatedRoute,\n\t) {\n\t\tthis.planTierDetails$ = placeAdfacade.planTierDetails$;\n\t\tthis.currentSeller$ = placeAdService.getCurrentSellerId$();\n\t\tthis.editAdData$ = placeAdfacade.getEditAdData$();\n\t\tthis.currentSection$ = placeAdfacade.getCurrentSection$();\n\t\tthis.currentAilse$ = placeAdfacade.getCurrentAisle$();\n\t}\n\treadonly SubscriptionTiers = SubscriptionTier;\n\treadonly user: ClientUser = this.auth.user();\n\treadonly currency = FeatureVersion?.V1 ? 'iqd' : 'EUR';\n\treadonly brandedCouponCode = BRANDED_COUPON_CODE;\n\treadonly limitedCouponCode = LIMITED_COUPON_CODE;\n\ttenantInUrl = environment.tenantIn;\n\treadonly planTierDetails$: Observable<PlanTiers>;\n\tcurrentSeller$: Observable<string>;\n\tpreviousPlanPrice: string;\n\treadonly editAdData$: Observable<EditAdResponseData>;\n\tisPaidAd = false;\n\treadonly sectionType = SectionType;\n\treadonly aisleType = AisleType;\n\treadonly sellerType = SellerType;\n\taisle: any;\n\treadonly PlanTypes = PlaceAdPlanTypes;\n\tcouponNumber = new FormControl(undefined, Validators.required); //Note: this for closed release\n\treadonly adPaymentStatus = AdPaymentStatus;\n\treadonly adStatus = AdStatus;\n\tcurrentSection$: Observable<CommonItem>;\n\tcurrentAilse$: Observable<CommonItem>;\n\tsubscriptionTier: any;\n\tadsCount = 4;\n\thasPlanAdsLeft: boolean;\n\tsubscriptionInfo: SubscriptionInfo;\n\tplanTierData: PlanTiers;\n\tisLoading = true;\n\treadonly subscriptionStatus = SubscriptionStatus;\n\tdaysListed: string;\n\tpayCoupon = false; //Note: disabling selecting ads plan for this closed release\n\tselectedPlan: string;\n\tplanDetails: any;\n\tSELLER_TYPE_ID: string;\n\tisLoadingCoupon = false;\n\tisCouponApplied = false;\n\tisInValidCoupon = false;\n\tisValid = true; //TODO: remove this once API is ready\n\ttoday = new Date();\n\texpiredDate;\n\tcouponCode: string;\n\teditAdData: any;\n\tnewSellerTypeId: string;\n\n\tonSubscribe(): void {\n\t\tconst IS_AGENT = this.auth.user()?.roles.some((role) => role === 'isAgentUser');\n\n\t\tif (IS_AGENT) {\n\t\t\tthis.snackService.open({\n\t\t\t\tdata: { message: 'You are not subscribed to any plan, please contact your business administrator' },\n\t\t\t\tpanelClass: ['snackbar-error'],\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.router.navigate([APP_ROUTE.agentHub.businessPaymentPlans]);\n\t}\n\n\tupdatePlan(planDetails: PlanTierAccount, selectedPlan: string, sellerType: string): void {\n\t\tif (this.subscriptionInfo?.status === SubscriptionStatus.EXPIRED && sellerType === SellerType.BUSINESS && this.expiredDate < this.today) {\n\t\t\tthis.placeAdfacade.setIsAllowNavigation$(true);\n\t\t\tthis.matDialog.open(InvalidSubscriptionDialogComponent, {\n\t\t\t\tmaxWidth: '375px',\n\t\t\t\twidth: '95%',\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif (!this.isLoadingCoupon) {\n\t\t\tconst PRICE =\n\t\t\t\t(sellerType === SellerType.BUSINESS &&\n\t\t\t\t\tthis.hasPlanAdsLeft &&\n\t\t\t\t\tselectedPlan === this.PlanTypes.FEATURED &&\n\t\t\t\t\t(this.subscriptionTier === 'premium-unlimited' || this.subscriptionTier === 'premium-unlimited-yearly')) ||\n\t\t\t\t(sellerType === SellerType.BUSINESS &&\n\t\t\t\t\tselectedPlan === this.PlanTypes.STANDARD &&\n\t\t\t\t\t(this.subscriptionTier === 'premium-unlimited' || this.subscriptionTier === 'premium-unlimited-yearly'))\n\t\t\t\t\t? 0\n\t\t\t\t\t: sellerType === SellerType.BUSINESS && selectedPlan === this.PlanTypes.STANDARD && this.hasPlanAdsLeft && this.subscriptionTier === 'limited-yearly'\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: sellerType === SellerType.INDIVIDUAL && this.isCouponApplied && selectedPlan === this.PlanTypes.STANDARD\n\t\t\t\t\t\t\t? COUPON_PRICE\n\t\t\t\t\t\t\t: +planDetails?.features[0]?.price?.price;\n\t\t\tthis.selectedPlan = selectedPlan;\n\n\t\t\tif (selectedPlan === this.PlanTypes.FEATURED && this.subscriptionTier === 'limited-yearly') {\n\t\t\t\tthis.placeAdfacade.setIsFeaturedAd(true);\n\t\t\t} else {\n\t\t\t\tthis.placeAdfacade.setIsFeaturedAd(planDetails?.features[0]?.featured?.isFeaturedBadge === '1');\n\t\t\t}\n\n\t\t\tthis.placeAdfacade.setAdPlanPrice(PRICE);\n\n\t\t\tthis.placeAdfacade.setSelectedPlanTierId(planDetails?.id);\n\n\t\t\tif (this.isInValidCoupon) {\n\t\t\t\tthis.isInValidCoupon = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tonPayCoupon(event): void {\n\t\tthis.payCoupon = event?.checked;\n\t}\n\n\tasync onNext(): Promise<boolean> {\n\t\tconst isDisabled = this.placeAdService.getisNextButtonDisabled$();\n\t\ttry {\n\t\t\tif (\n\t\t\t\t!isDisabled &&\n\t\t\t\t((this.selectedPlan && this.isCouponApplied) ||\n\t\t\t\t\tthis.selectedPlan ||\n\t\t\t\t\t(this.placeAdfacade.getEditAdData()?.adPayment?.status === this.adPaymentStatus.PAID &&\n\t\t\t\t\t\tthis.placeAdfacade.getEditAdData()?.adStatus?.status !== this.adStatus.EXPIRED))\n\t\t\t) {\n\t\t\t\tconst TOTAL_TABS = this.placeAdService.getTotalTabs();\n\t\t\t\tthis.placeAdService.setTabIndex(TOTAL_TABS);\n\t\t\t\tthis.placeAdService.setStepsEnableStatus(TOTAL_TABS);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.snackService.open({\n\t\t\t\t\tdata: { translationKey: 'n3387' },\n\t\t\t\t\tpanelClass: 'snackbar-error',\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tonViewCoupon(): void {\n\t\tthis.matDialog\n\t\t\t.open(PlaceAdViewCouponComponent, {\n\t\t\t\twidth: '343px',\n\t\t\t\theight: 'auto',\n\t\t\t\tmaxWidth: 'unset',\n\t\t\t\tdata: {\n\t\t\t\t\tcouponCode: '', // TODO: get the value from Api once Api is ready\n\t\t\t\t},\n\t\t\t\tbackdropClass: 'inquiry-backdrop',\n\t\t\t})\n\t\t\t.afterClosed()\n\t\t\t.subscribe((apply) => {\n\t\t\t\tif (apply) {\n\t\t\t\t\tthis.couponNumber.setValue(''); // TODO: get the value from Api once Api is ready\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tonApplyCoupon(showSnakcbar = true): void {\n\t\tthis.isLoadingCoupon = true;\n\t\tconst BODY = {\n\t\t\tcoupon: this.couponNumber.value,\n\t\t\tadId: this.placeAdfacade.getAdId(),\n\t\t};\n\n\t\tthis.placeAdfacade\n\t\t\t.verifyCoupon(BODY, showSnakcbar)\n\t\t\t.then(() => {\n\t\t\t\tthis.selectedPlan = PlaceAdPlanTypes.STANDARD;\n\t\t\t\tthis.isLoadingCoupon = false;\n\t\t\t\tthis.isCouponApplied = true;\n\t\t\t\tthis.isInValidCoupon = false;\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthis.isLoadingCoupon = false;\n\t\t\t\tthis.isCouponApplied = false;\n\t\t\t\tthis.isInValidCoupon = true;\n\t\t\t\tthis.couponNumber.setValue(INDIVIDUAL_COUPON_CODE);\n\t\t\t\tthis.selectedPlan = null;\n\t\t\t});\n\t}\n\n\tonRemoveCoupon(): void {\n\t\tthis.isCouponApplied = false;\n\n\t\tif (this.selectedPlan) {\n\t\t\t//set the price based on selected plan tier\n\t\t\tconst PRICE =\n\t\t\t\tthis.selectedPlan === this.PlanTypes.FEATURED\n\t\t\t\t\t? this.placeAdfacade.getPlanTierDetails()?.individualAccount[1]?.features[0]?.price?.price\n\t\t\t\t\t: this.placeAdfacade.getPlanTierDetails()?.individualAccount[0]?.features[0]?.price?.price;\n\n\t\t\tthis.placeAdfacade.setSelectedPlanTierId(this.selectedPlan === this.PlanTypes.FEATURED ? '2' : '1');\n\t\t\tthis.placeAdfacade.setAdPlanPrice(+PRICE);\n\t\t}\n\n\t\tthis.placeAdfacade.setCouponCode(undefined);\n\t}\n\n\tupdateEditAdCouponData(planTiers: PlanTiers): void {\n\t\tthis.editAdData$\n\t\t\t.pipe(\n\t\t\t\tswitchMap((editAdData) => {\n\t\t\t\t\tthis.editAdData = editAdData;\n\t\t\t\t\t//if payment already done and adstatus not sold update plan price to 0\n\t\t\t\t\tif (\n\t\t\t\t\t\teditAdData?.adPayment?.status === AdPaymentStatus.PAID &&\n\t\t\t\t\t\teditAdData?.adStatus?.status !== this.adStatus.SOLD &&\n\t\t\t\t\t\teditAdData?.adStatus?.status !== this.adStatus.EXPIRED\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.placeAdfacade.setAdPlanPrice(COUPON_PRICE);\n\t\t\t\t\t\tthis.isPaidAd = true;\n\n\t\t\t\t\t\tif (editAdData?.adPayment?.couponCode) {\n\t\t\t\t\t\t\tthis.couponNumber.setValue(editAdData.adPayment.couponCode);\n\t\t\t\t\t\t\tthis.placeAdfacade.setCouponCode(editAdData.adPayment.couponCode);\n\t\t\t\t\t\t\tthis.isCouponApplied = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.isPaidAd = false;\n\n\t\t\t\t\t\t//if not paid set plan price\n\t\t\t\t\t\tif (editAdData?.adPayment?.planTier?.id) {\n\t\t\t\t\t\t\tconst IS_FEATURED_AD = FEATURED_AD_PLAN_IDS.includes(<PlaceAdPlansId>editAdData?.adPayment?.planTier?.id);\n\t\t\t\t\t\t\tconst PLAN_PRICE = IS_FEATURED_AD\n\t\t\t\t\t\t\t\t? planTiers?.individualAccount[1]?.features[0]?.price?.price\n\t\t\t\t\t\t\t\t: planTiers?.individualAccount[0]?.features[0]?.price?.price;\n\t\t\t\t\t\t\tthis.placeAdfacade.setAdPlanPrice(+PLAN_PRICE);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//to set selected plan irrespective of paid or not if edit ad payment  data is available\n\t\t\t\t\tif (editAdData?.adPayment?.planTier?.id) {\n\t\t\t\t\t\tconst IS_FEATURED_AD = editAdData?.isFeatured === '1';\n\n\t\t\t\t\t\tthis.selectedPlan = IS_FEATURED_AD ? this.PlanTypes.FEATURED : this.PlanTypes.STANDARD;\n\t\t\t\t\t\tthis.placeAdfacade.setIsFeaturedAd(IS_FEATURED_AD);\n\t\t\t\t\t\tthis.placeAdfacade.setSelectedPlanTierId(IS_FEATURED_AD ? PlaceAdPlansId.FEATURED_AD : PlaceAdPlansId.STANDARD_AD);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.currentSeller$;\n\t\t\t\t}),\n\t\t\t\ttakeUntil(this.destroy),\n\t\t\t)\n\t\t\t.subscribe((sellerId) => {\n\t\t\t\tif (sellerId === SellerType.BUSINESS && (this.subscriptionTier === 'premium-unlimited' || this.subscriptionTier === 'premium-unlimited-yearly')) {\n\t\t\t\t\tthis.isCouponApplied = true;\n\t\t\t\t\tthis.isInValidCoupon = false;\n\t\t\t\t\tthis.couponNumber.setValue(this.brandedCouponCode);\n\t\t\t\t\tthis.placeAdfacade.setAdPlanPrice(COUPON_PRICE);\n\t\t\t\t\tthis.placeAdfacade.setCouponCode(this.couponNumber?.value);\n\t\t\t\t\t//If we are in edit ad flow we dont select any plan by default\n\t\t\t\t\tif (this.editAdData && this.editAdData?.adStatus?.status !== this.adStatus.SOLD && this.editAdData?.adStatus?.status !== this.adStatus.EXPIRED) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.selectedPlan =\n\t\t\t\t\t\tthis.subscriptionInfo.status !== SubscriptionStatus.EXPIRED ? (this.hasPlanAdsLeft ? this.PlanTypes.FEATURED : this.PlanTypes.STANDARD) : null;\n\t\t\t\t\tthis.placeAdfacade.setIsFeaturedAd(this.hasPlanAdsLeft);\n\t\t\t\t} else if (sellerId === SellerType.BUSINESS && this.subscriptionTier === 'limited-yearly') {\n\t\t\t\t\tthis.isCouponApplied = true;\n\t\t\t\t\tthis.isInValidCoupon = false;\n\t\t\t\t\tthis.couponNumber.setValue(this.limitedCouponCode);\n\n\t\t\t\t\tif (this.hasPlanAdsLeft) {\n\t\t\t\t\t\tthis.placeAdfacade.setAdPlanPrice(COUPON_PRICE);\n\n\t\t\t\t\t\tthis.placeAdfacade.setCouponCode(this.couponNumber?.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.placeAdfacade.setAdPlanPrice(+this.placeAdfacade.getPlanTierDetails()?.individualAccount[0]?.features[0]?.price?.price);\n\t\t\t\t\t}\n\t\t\t\t\t//If we are in edit ad flow we dont select any plan by default\n\t\t\t\t\tif (this.editAdData && this.editAdData?.adStatus?.status !== this.adStatus.SOLD && this.editAdData?.adStatus?.status !== this.adStatus.EXPIRED) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.placeAdfacade.setIsFeaturedAd(false);\n\t\t\t\t\tthis.selectedPlan = this.subscriptionInfo.status !== SubscriptionStatus.EXPIRED ? (this.hasPlanAdsLeft ? this.PlanTypes.STANDARD : null) : null;\n\t\t\t\t} else {\n\t\t\t\t\t//if not paid ad apply coupon for individual account type\n\t\t\t\t\tif (!this.isPaidAd) {\n\t\t\t\t\t\tthis.couponNumber.setValue(INDIVIDUAL_COUPON_CODE);\n\t\t\t\t\t\tthis.onApplyCoupon(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\t// Subscribe to query parameter changes\n\t\tthis.route.queryParams.pipe(takeUntil(this.destroy)).subscribe((params) => {\n\t\t\tthis.newSellerTypeId = params['sellerTypeId'];\n\t\t\tif (this.newSellerTypeId && this.newSellerTypeId !== this.SELLER_TYPE_ID) {\n\t\t\t\tthis.SELLER_TYPE_ID = this.newSellerTypeId;\n\t\t\t\tthis.initializeComponent();\n\t\t\t}\n\t\t});\n\n\t\tthis.initializeComponent();\n\t}\n\n\tprivate initializeComponent(): void {\n\t\tthis.isLoading = true;\n\n\t\t// Subscribe to current aisle\n\t\tthis.currentAilse$.subscribe((res) => {\n\t\t\tthis.aisle = res?.reference;\n\t\t\tthis.daysListed = this.getDaysListed(this.aisle);\n\n\t\t\tthis.planDetails = {\n\t\t\t\tfeatured: [\n\t\t\t\t\t{ text: `Ad listed for ${this.daysListed} days` },\n\t\t\t\t\t{ text: 'n3334' },\n\t\t\t\t\t{ text: 'n3363' },\n\t\t\t\t\t{ text: 'n3333' },\n\t\t\t\t\t{ text: 'n3332', hintText: 'n3313' },\n\t\t\t\t\t{ text: 'n3330' },\n\t\t\t\t\t{ text: 'n3397', text2: 'n3398', hintText: 'n3315' },\n\t\t\t\t],\n\t\t\t\tstandard: [{ text: `Ad listed for ${this.daysListed} days` }, { text: 'n3397', text2: 'n3398', hintText: 'n3315' }],\n\t\t\t};\n\t\t});\n\t\tif (this.newSellerTypeId) {\n\t\t\tthis.SELLER_TYPE_ID = this.newSellerTypeId;\n\t\t} else {\n\t\t\tthis.SELLER_TYPE_ID = this.placeAdfacade.getSellerTypeId();\n\t\t}\n\n\t\tconst TOTAL_TABS = this.placeAdService.getTotalTabs();\n\t\tif (this.SELLER_TYPE_ID === this.sellerType.INDIVIDUAL) {\n\t\t\tthis.placeAdfacade.loadPlanTiers().then((planTiers: PlanTiers) => {\n\t\t\t\tthis.placeAdfacade\n\t\t\t\t\t.getPaymentCount({\n\t\t\t\t\t\tuserId: this.user?.id,\n\t\t\t\t\t\tsellerTypeId: this.SELLER_TYPE_ID,\n\t\t\t\t\t\tcouponCode: INDIVIDUAL_COUPON_CODE,\n\t\t\t\t\t})\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tswitchMap((meta: PageMetaData) => {\n\t\t\t\t\t\t\tthis.adsCount = +(meta?.total ?? 0);\n\n\t\t\t\t\t\t\tthis.hasPlanAdsLeft = this.adsCount < 5;\n\t\t\t\t\t\t\treturn this.profileFacade.getSubscriptionInfo();\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tfinalize(() => {\n\t\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe(\n\t\t\t\t\t\t(res) => {\n\t\t\t\t\t\t\tthis.subscriptionInfo = res;\n\t\t\t\t\t\t\tthis.expiredDate = new Date(this.subscriptionInfo?.dates?.expired);\n\t\t\t\t\t\t\tthis.updateEditAdCouponData(planTiers);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.updateEditAdCouponData(planTiers);\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t// Fetch subscription info first before proceeding to getPaymentCount\n\t\tthis.profileFacade\n\t\t\t.getSubscriptionInfo()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((res) => {\n\t\t\t\t\tthis.subscriptionInfo = res;\n\n\t\t\t\t\t// Fetch payment count now that subscriptionInfo is available\n\t\t\t\t\treturn this.placeAdfacade.getPaymentCount({\n\t\t\t\t\t\tuserId: this.user?.id,\n\t\t\t\t\t\tsellerTypeId: this.SELLER_TYPE_ID,\n\t\t\t\t\t\tcouponCode: this.getCouponCode(this.subscriptionInfo?.planTier?.reference, this.SELLER_TYPE_ID),\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t\tswitchMap((meta: PageMetaData) => {\n\t\t\t\t\tthis.adsCount = this.getAdsCount(meta, this.SELLER_TYPE_ID);\n\t\t\t\t\tthis.hasPlanAdsLeft = this.checkPlanAdsLeft(this.adsCount, this.subscriptionInfo?.planTier?.reference);\n\n\t\t\t\t\treturn this.placeAdfacade.loadPlanTiers();\n\t\t\t\t}),\n\t\t\t\tfinalize(() => {\n\t\t\t\t\tthis.placeAdService.getTabIndex$().subscribe((step) => {\n\t\t\t\t\t\tconst IS_SUBSCRIPTION_ACTIVE = this.subscriptionInfo?.status !== this.subscriptionStatus.EXPIRED;\n\t\t\t\t\t\tthis.placeAdService.setIsNextButtonDisabled(!IS_SUBSCRIPTION_ACTIVE && this.SELLER_TYPE_ID === this.sellerType.BUSINESS && TOTAL_TABS - 7 === 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\t(planTiers: PlanTiers) => {\n\t\t\t\t\tthis.subscriptionTier = this.subscriptionInfo?.planTier?.reference;\n\t\t\t\t\tthis.placeAdfacade.setSubscriptionTier(this.subscriptionTier);\n\t\t\t\t\tthis.expiredDate = new Date(this.subscriptionInfo?.dates?.expired);\n\t\t\t\t\tthis.updateEditAdCouponData(planTiers);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.hasPlanAdsLeft = false;\n\t\t\t\t},\n\t\t\t);\n\t}\n\n\t// Helper functions for cleaner code\n\tprivate getDaysListed(aisle: string): string {\n\t\tif (aisle.includes('rent')) {\n\t\t\treturn DAYS_LISTED.RENT;\n\t\t} else if (aisle.includes('share')) {\n\t\t\treturn DAYS_LISTED.SHARE;\n\t\t} else if (aisle.includes('sell')) {\n\t\t\treturn DAYS_LISTED.SALE;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getCouponCode(planTierRef: string | undefined, sellerTypeId: string): string {\n\t\tif (sellerTypeId === SellerType.INDIVIDUAL) {\n\t\t\treturn INDIVIDUAL_COUPON_CODE;\n\t\t} else if (sellerTypeId === SellerType.BUSINESS) {\n\t\t\tswitch (planTierRef) {\n\t\t\t\tcase 'limited-yearly':\n\t\t\t\t\treturn this.limitedCouponCode;\n\t\t\t\tcase 'premium-unlimited':\n\t\t\t\t\treturn this.brandedCouponCode;\n\t\t\t\tcase 'premium-unlimited-yearly':\n\t\t\t\t\treturn this.brandedCouponCode;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\tprivate getAdsCount(meta: PageMetaData, sellerTypeId: string): number {\n\t\treturn +(meta?.total ?? 0);\n\t}\n\n\tprivate checkPlanAdsLeft(adsCount: number, planTierRef: string | undefined): boolean {\n\t\treturn planTierRef === 'limited-yearly' ? adsCount < 2 : adsCount < 5;\n\t}\n}\n","<div\n\tclass=\"position-relative\"\n\t*ngIf=\"{\n\t\tplanTierDetails: planTierDetails$ | async,\n\t\tcurrentSeller: currentSeller$ | async,\n\t\teditAdData: editAdData$ | async,\n\t\tcurrenSection: currentSection$ | async,\n\t\tcurrentAilse: currentAilse$ | async\n\t} as vm\"\n\t[class.disable-selection]=\"\n\t\tisLoading ||\n\t\t((vm?.editAdData | adPaid: vm?.currentSeller : isCouponApplied : false) &&\n\t\t\tvm.editAdData.adStatus.status !== 'expired' &&\n\t\t\tvm.editAdData.adStatus.status !== 'payment-pending')\n\t\"\n>\n\t<h3 class=\"heading-3 mt-4 fg-general-5 mb-2\">{{ 'n3033' | translations }}</h3>\n\n\t<p class=\"fg-general-4 mb-4 fs-12px lh-16px fw-400\">{{ 'n2972' | translations }}</p>\n\n\t<div\n\t\tclass=\"feature-ad-count row my-4 p-3 gap-2 border-rounded\"\n\t\t[class.is-plan-not-active]=\"(subscriptionInfo?.status === subscriptionStatus.EXPIRED && vm.currentSeller === sellerType.BUSINESS) || !hasPlanAdsLeft\"\n\t\t[ngClass]=\"{ 'd-none': adsCount >= 2 && vm.currentSeller === sellerType.INDIVIDUAL }\"\n\t>\n\t\t<div class=\"col-auto\">\n\t\t\t<mat-icon class=\"fs-20px material-symbols-outlined\">info</mat-icon>\n\t\t</div>\n\n\t\t<div class=\"col\">\n\t\t\t<ng-container *ngIf=\"adsCount < 2 && vm.currentSeller === sellerType.INDIVIDUAL\">\n\t\t\t\t<p class=\"text-body-medium fg-info-3\">You have {{ 2 - (adsCount <= 2 ? adsCount : 2) }} FREE standard ad</p>\n\t\t\t\t<p class=\"text-body-regular fg-info-3\">Simply select the standard ad to post your ad for FREE.</p>\n\t\t\t</ng-container>\n\t\t\t<ng-container\n\t\t\t\t*ngIf=\"vm.currentSeller === sellerType.BUSINESS && subscriptionTier === 'limited-yearly' && subscriptionInfo?.status !== subscriptionStatus.EXPIRED\"\n\t\t\t>\n\t\t\t\t<p class=\"text-body-medium fg-info-3\">You have {{ 2 - (adsCount <= 2 ? adsCount : 2) }} FREE standard ad</p>\n\t\t\t\t<p class=\"text-body-regular fg-info-3\">Your subscription includes up to 2 standard ads at a time.</p>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container\n\t\t\t\t*ngIf=\"\n\t\t\t\t\t((subscriptionInfo?.status !== subscriptionStatus.EXPIRED && vm.currentSeller === sellerType.BUSINESS) ||\n\t\t\t\t\t\t(this.expiredDate > this.today && vm.currentSeller === sellerType.BUSINESS)) &&\n\t\t\t\t\t(subscriptionTier === 'premium-unlimited' || subscriptionTier === 'premium-unlimited-yearly')\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\t<p class=\"text-body-medium fg-info-3\">{{ 'n4078' | translations }}: {{ 5 - (adsCount <= 5 ? adsCount : 5) }}/5</p>\n\t\t\t\t<p class=\"text-body-regular fg-info-3\">{{ 'n4079' | translations }}</p>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container\n\t\t\t\t*ngIf=\"subscriptionInfo?.status === subscriptionStatus.EXPIRED && vm.currentSeller === sellerType.BUSINESS && this.expiredDate < this.today\"\n\t\t\t>\n\t\t\t\t<p class=\"text-body-medium fg-error-3\">{{ 'n4080' | translations }}</p>\n\t\t\t\t<p class=\"text-body-regular fg-error-3\">\n\t\t\t\t\t{{ 'n4081' | translations }}\n\t\t\t\t\t<a class=\"fg-error-3 text-underline\" (click)=\"onSubscribe()\">{{ 'n4082' | translations }}</a>\n\t\t\t\t</p>\n\t\t\t</ng-container>\n\t\t</div>\n\t</div>\n\n\t<div class=\"row justify-content-center gap-sm-5 gap-2 mx-auto\">\n\t\t<div\n\t\t\tclass=\"col-auto border rounded-1 mw-418px\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'selected-plan': selectedPlan === PlanTypes.FEATURED\n\t\t\t}\"\n\t\t>\n\t\t\t<a class=\"d-block p-3 h-100\">\n\t\t\t\t<div class=\"row justify-content-between align-items-center\">\n\t\t\t\t\t<div class=\"col\">\n\t\t\t\t\t\t<h4 class=\"fg-general-5 heading-4-regular\">{{ 'n260' | translations | uppercase }}</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"col text-end\"\n\t\t\t\t\t\t*ngIf=\"\n\t\t\t\t\t\t\tvm?.currentSeller === sellerType.INDIVIDUAL ||\n\t\t\t\t\t\t\t(vm?.currentSeller === sellerType.BUSINESS &&\n\t\t\t\t\t\t\t\t(this.subscriptionTier === 'limited-yearly' ||\n\t\t\t\t\t\t\t\t\t((subscriptionTier === SubscriptionTiers.PREMIUM_UNLIMITED || subscriptionTier === SubscriptionTiers.PREMIUM_UNLIMITED_YEARLY) &&\n\t\t\t\t\t\t\t\t\t\t!hasPlanAdsLeft)))\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<h3 class=\"fg-general-5 heading-3\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\tvm?.planTierDetails?.individualAccount[1]?.features[0]?.price.price\n\t\t\t\t\t\t\t\t\t\t| currency: vm?.planTierDetails?.individualAccount[1]?.features[0]?.price?.currency\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<img\n\t\t\t\t\t[src]=\"!viewport?.mobile ? 'assets/images/place-an-ad/featured-ad-illustrations-lg.png' : 'assets/images/place-an-ad/featured-ad-illus-mobile.png'\"\n\t\t\t\t\talt=\"Featured Ad\"\n\t\t\t\t\tclass=\"mx-auto align-middle my-3\"\n\t\t\t\t/>\n\n\t\t\t\t<ng-container *ngFor=\"let plan of planDetails?.featured; let i = index; let last = last\">\n\t\t\t\t\t<div class=\"row align-items-start\">\n\t\t\t\t\t\t<div class=\"col-auto\">\n\t\t\t\t\t\t\t<mat-icon class=\"fs-14px plan-icon fg-success-3 me-2 align-middle\">check_circle</mat-icon>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col\">\n\t\t\t\t\t\t\t<span class=\"plan-list fg-general-4 fs-14px lh-18px d-inline-block\">\n\t\t\t\t\t\t\t\t{{ plan?.text | translations }}\n\n\t\t\t\t\t\t\t\t<a class=\"plan-list fg-prim-2 fs-14px\" *ngIf=\"plan?.text2\" [href]=\"'https://tenantin.ie/'\" target=\"_blank\">\n\t\t\t\t\t\t\t\t\t{{ plan?.text2 | translations }}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-auto ps-3\" *ngIf=\"plan?.hintText\">\n\t\t\t\t\t\t\t<mat-icon\n\t\t\t\t\t\t\t\tclass=\"fs-14px material-icons-outlined fg-general-3 align-middle\"\n\t\t\t\t\t\t\t\tmatTooltipClass=\"plan-hint\"\n\t\t\t\t\t\t\t\t[matTooltip]=\"plan?.hintText | translations\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\thelp_outline\n\t\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container\n\t\t\t\t\t[ngTemplateOutlet]=\"selectioButton\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{\n\t\t\t\t\t\tplanType: PlanTypes.FEATURED,\n\t\t\t\t\t\tplan: vm?.planTierDetails?.individualAccount[1],\n\t\t\t\t\t\tcanShowPrice:\n\t\t\t\t\t\t\tvm?.currentSeller === sellerType.INDIVIDUAL ||\n\t\t\t\t\t\t\t(vm?.currentSeller === sellerType.BUSINESS &&\n\t\t\t\t\t\t\t\t(subscriptionTier === SubscriptionTiers.LIMITED_YEARLY ||\n\t\t\t\t\t\t\t\t\t((subscriptionTier === SubscriptionTiers.PREMIUM_UNLIMITED || subscriptionTier === SubscriptionTiers.PREMIUM_UNLIMITED_YEARLY) &&\n\t\t\t\t\t\t\t\t\t\t!hasPlanAdsLeft))),\n\t\t\t\t\t\tsellerType: vm.currentSeller,\n\t\t\t\t\t\tisDisabled: false\n\t\t\t\t\t}\"\n\t\t\t\t></ng-container>\n\t\t\t</a>\n\t\t</div>\n\n\t\t<div\n\t\t\tclass=\"col-auto border rounded-1\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'selected-plan': selectedPlan === PlanTypes.STANDARD\n\t\t\t}\"\n\t\t>\n\t\t\t<div class=\"d-flex flex-column justify-content-between h-100 p-3 mw-418px\">\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"row justify-content-between align-items-center\">\n\t\t\t\t\t\t<div class=\"col\">\n\t\t\t\t\t\t\t<h4 class=\"fg-general-5 heading-4-regular\">{{ 'n815' | translations | uppercase }}</h4>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"col text-end\"\n\t\t\t\t\t\t\t*ngIf=\"\n\t\t\t\t\t\t\t\tvm?.currentSeller !== sellerType.BUSINESS ||\n\t\t\t\t\t\t\t\t(vm?.currentSeller === sellerType.BUSINESS && this.subscriptionTier === SubscriptionTiers.LIMITED_YEARLY)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h3 class=\"fg-general-5 heading-3\">\n\t\t\t\t\t\t\t\t<span *ngIf=\"(isCouponApplied && vm?.currentSeller === sellerType.INDIVIDUAL) || (hasPlanAdsLeft && vm?.currentSeller === sellerType.BUSINESS)\">\n\t\t\t\t\t\t\t\t\t{{ 0 | currency: vm?.planTierDetails?.individualAccount[1]?.features[0]?.price?.currency }}\n\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t[class.strike-through]=\"\n\t\t\t\t\t\t\t\t\t\t(isCouponApplied && vm?.currentSeller === sellerType.INDIVIDUAL) || (hasPlanAdsLeft && vm?.currentSeller === sellerType.BUSINESS)\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\tvm?.planTierDetails?.individualAccount[0]?.features[0]?.price.price\n\t\t\t\t\t\t\t\t\t\t\t| currency: vm?.planTierDetails?.individualAccount[0]?.features[0]?.price?.currency\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<img\n\t\t\t\t\t\t[src]=\"!viewport?.mobile ? 'assets/images/place-an-ad/standard-ad-illustrations-lg.svg' : 'assets/images/place-an-ad/standard-ad-illus-mobile.svg'\"\n\t\t\t\t\t\talt=\"Standard Ad\"\n\t\t\t\t\t\tclass=\"d-block align-middle my-3\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ng-container *ngFor=\"let plan of planDetails?.standard; let i = index\">\n\t\t\t\t\t\t<div class=\"row align-items-start\">\n\t\t\t\t\t\t\t<div class=\"col-auto\">\n\t\t\t\t\t\t\t\t<mat-icon class=\"fs-14px plan-icon fg-general-4 me-2 align-middle\">check_circle</mat-icon>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"col\">\n\t\t\t\t\t\t\t\t<span class=\"plan-list fg-general-4 fs-14px lh-18px d-inline-block\">\n\t\t\t\t\t\t\t\t\t{{ plan?.text | translations }}\n\n\t\t\t\t\t\t\t\t\t<a class=\"plan-list fg-prim-2 fs-14px\" *ngIf=\"plan?.text2\" [href]=\"'https://tenantin.ie/'\" target=\"_blank\">\n\t\t\t\t\t\t\t\t\t\t{{ plan?.text2 | translations }}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"col-auto ps-3\" *ngIf=\"plan?.hintText\">\n\t\t\t\t\t\t\t\t<mat-icon\n\t\t\t\t\t\t\t\t\tclass=\"fs-14px material-icons-outlined fg-general-3 align-middle\"\n\t\t\t\t\t\t\t\t\tmatTooltipClass=\"plan-hint\"\n\t\t\t\t\t\t\t\t\t[matTooltip]=\"plan?.hintText | translations\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\thelp_outline\n\t\t\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\n\t\t\t\t<ng-container\n\t\t\t\t\t[ngTemplateOutlet]=\"selectioButton\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{\n\t\t\t\t\t\tplanType: PlanTypes.STANDARD,\n\t\t\t\t\t\tplan: vm?.planTierDetails?.individualAccount[0],\n\t\t\t\t\t\tcanShowPrice:\n\t\t\t\t\t\t\t(vm?.currentSeller !== sellerType.BUSINESS && !isCouponApplied) ||\n\t\t\t\t\t\t\t(vm?.currentSeller === sellerType.BUSINESS && this.subscriptionTier === SubscriptionTiers.LIMITED_YEARLY && !this.hasPlanAdsLeft),\n\t\t\t\t\t\tsellerType: vm.currentSeller,\n\t\t\t\t\t\tisDisabled: false\n\t\t\t\t\t}\"\n\t\t\t\t></ng-container>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<ng-template\n\t\t#selectioButton\n\t\tlet-planType=\"planType\"\n\t\tlet-plan=\"plan\"\n\t\tlet-canShowPrice=\"canShowPrice\"\n\t\tlet-currentSeller=\"sellerType\"\n\t\tlet-isDisabled=\"isDisabled\"\n\t>\n\t\t<button\n\t\t\t(click)=\"updatePlan(plan, planType, vm?.currentSeller)\"\n\t\t\tmat-stroked-button\n\t\t\tcolor=\"primary\"\n\t\t\tclass=\"w-100 mt-3 text-body-regular\"\n\t\t\t*ngIf=\"selectedPlan !== planType\"\n\t\t\t[disabled]=\"isDisabled\"\n\t\t>\n\t\t\t{{ 'n4083' | translations }}\n\t\t\t<span *ngIf=\"canShowPrice\">- {{ plan?.features[0]?.price.price | currency: plan?.features[0]?.price?.currency }}</span>\n\t\t\t<span\n\t\t\t\t*ngIf=\"\n\t\t\t\t\t(planType === PlanTypes.STANDARD && isCouponApplied && currentSeller === sellerType.INDIVIDUAL) ||\n\t\t\t\t\t(planType === PlanTypes.STANDARD &&\n\t\t\t\t\t\tvm?.currentSeller === sellerType.BUSINESS &&\n\t\t\t\t\t\tthis.subscriptionTier === SubscriptionTiers.LIMITED_YEARLY &&\n\t\t\t\t\t\tthis.hasPlanAdsLeft)\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\t- €0.00\n\t\t\t</span>\n\t\t</button>\n\n\t\t<button\n\t\t\t(click)=\"updatePlan(plan, planType, currentSeller)\"\n\t\t\tmat-flat-button\n\t\t\tcolor=\"primary\"\n\t\t\tclass=\"w-100 mt-3 text-body-regular\"\n\t\t\t*ngIf=\"selectedPlan === planType\"\n\t\t\t[disabled]=\"isDisabled\"\n\t\t>\n\t\t\t{{ 'n4084' | translations }}\n\t\t\t<span *ngIf=\"canShowPrice\">- {{ plan?.features[0]?.price.price | currency: plan?.features[0]?.price?.currency }}</span>\n\t\t\t<span\n\t\t\t\t*ngIf=\"\n\t\t\t\t\t(planType === PlanTypes.STANDARD && isCouponApplied && currentSeller === sellerType.INDIVIDUAL) ||\n\t\t\t\t\t(planType === PlanTypes.STANDARD &&\n\t\t\t\t\t\tvm?.currentSeller === sellerType.BUSINESS &&\n\t\t\t\t\t\tthis.subscriptionTier === SubscriptionTiers.LIMITED_YEARLY &&\n\t\t\t\t\t\tthis.hasPlanAdsLeft)\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\t- €0.00\n\t\t\t</span>\n\t\t\t<mat-icon iconPositionEnd>check_circle</mat-icon>\n\t\t</button>\n\t</ng-template>\n\n\t<div class=\"spinner-loader\" *ngIf=\"isLoading\">\n\t\t<mat-spinner [diameter]=\"64\"></mat-spinner>\n\t</div>\n</div>\n\n<!-- <findqo-place-ad-tab-buttons (nextTab)=\"onNext()\"></findqo-place-ad-tab-buttons> -->\n","import { NgModule } from '@angular/core';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nimport { ButtonModule } from '@shared/components/button/button.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdViewCouponComponent } from './place-ad-view-coupon.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n\tdeclarations: [PlaceAdViewCouponComponent],\n\timports: [SharedModule, ButtonModule, ClipboardModule, MatDialogModule],\n\texports: [PlaceAdViewCouponComponent],\n})\nexport class PlaceAdViewCouponModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { InvalidSubscriptionDialogComponent } from './invalid-subscription-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n\tdeclarations: [InvalidSubscriptionDialogComponent],\n\timports: [SharedModule, MatDialogModule],\n\texports: [InvalidSubscriptionDialogComponent],\n})\nexport class InvalidSubscriptionDialogModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdPlansComponent } from './place-ad-plans.component';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { PlaceAdViewCouponModule } from '../place-ad-view-coupon/place-ad-view-coupon.module';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InvalidSubscriptionDialogModule } from '../invalid-subscription-dialog/invalid-subscription-dialog.module';\n\n@NgModule({\n\tdeclarations: [PlaceAdPlansComponent],\n\timports: [\n\t\tSharedModule,\n\t\tMatBadgeModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatInputModule,\n\t\tMatTooltipModule,\n\t\tPlaceAdTabButtonsModule,\n\t\tPlaceAdViewCouponModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tInvalidSubscriptionDialogModule,\n\t],\n\texports: [PlaceAdPlansComponent],\n})\nexport class PlaceAdPlansModule {}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n//to validate if the value is a number or floating point number.To accept only these both\nexport function NumberValidator(): ValidatorFn {\n\treturn (control: AbstractControl): { [key: string]: any } | null => {\n\t\tconst VALUE = control.value;\n\n\t\t// Check if the value is a valid number or floating-point number\n\t\treturn !isNaN(VALUE) && !isNaN(parseFloat(VALUE)) ? null : { invalidNumber: true };\n\t};\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ButtonType } from '@shared/components/button/button.component';\n\n\n@Component({\n    selector: 'findqo-price-on-application-dialog',\n    templateUrl: './price-on-application-dialog.component.html',\n    styleUrl: './price-on-application-dialog.component.scss',\n    standalone: false\n})\nexport class PriceOnApplicationDialogComponent {\n\tconstructor(private dailogRef: MatDialogRef<PriceOnApplicationDialogComponent>,) {}\n\t\n\treadonly buttonType = ButtonType;\n}\n","<div class=\"container p-0\">\n\t<div class=\"row mx-0 px-3 justify-content-between align-items-center dialog-header\">\n\t\t<div class=\"col-auto px-0\">\n\t\t\t<h4 class=\"heading-4-regular fg-general-5 m-0\">{{ 'n3612' | translations }}</h4>\n\t\t</div>\n\n\t\t<div class=\"col-auto px-0\">\n\t\t\t<button mat-icon-button mat-dialog-close class=\"close-btn\">\n\t\t\t\t<mat-icon class=\"justify-content-center fg-general-4 mx-auto fs-20px\">close</mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<div class=\"p-3\">\n\t\t<p class=\"text-body-regular fg-general-4\">\n\t\t\t{{ 'n3613' | translations }}\n\t\t</p>\n\n\t\t<p class=\"text-body-regular fg-general-4 mt-18px\">\n\t\t\t{{ 'n3614' | translations }}\n\t\t</p>\n\n\t\t<img\n\t\t\tngSrc=\"assets/images/place-an-ad/price-on-application.webp\"\n\t\t\tfill\n\t\t\tfetchPriority=\"high\"\n\t\t\tclass=\"position-relative my-4 mx-auto d-block price-on-img\"\n\t\t\talt=\"Price on application\"\n\t\t/>\n\n\t\t<p class=\"text-caption-medium fg-general-3\">{{ 'n3615' | translations }}</p>\n\t</div>\n</div>\n","import { AfterViewInit, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { PropertyWorthState } from '@core/data-access/states/property-worth.state';\nimport { AisleType, SectionType } from '@core/enums';\nimport { PlaceAdFields } from '@core/models';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { DestroyService } from '@shared/services/destroy.service';\nimport { NumberValidator } from '@shared/validators/number.validator';\nimport { Observable, takeUntil } from 'rxjs';\nimport { PriceOnApplicationDialogComponent } from '../price-on-application-dialog/price-on-application-dialog.component';\n@Component({\n    selector: 'findqo-place-ad-price-general',\n    templateUrl: './place-ad-price-general.component.html',\n    styleUrls: ['./place-ad-price-general.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdPriceGeneralComponent implements OnInit, AfterViewInit {\n\tconstructor(\n\t\tprivate fb: FormBuilder,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate destroy: DestroyService,\n\t\tprivate dialog: MatDialog,\n\t\tprivate propertyWorthState: PropertyWorthState,\n\t\tprivate cdref: ChangeDetectorRef,\n\t) {\n\t\tthis.rentalPeriods$ = placeAdFacade.getPlaceAdControlStep$('rentalPeriods');\n\t}\n\n\t@Input() form: FormGroup;\n\tisPriceOnApplication = false;\n\tisRentCommercial = false;\n\tisSellProperties = false;\n\trentalPeriods$: Observable<PlaceAdFields[]>;\n\n\tonUpdate(event: MatCheckboxChange): void {\n\t\tthis.form.get('isPriceOnApplication').patchValue(event.checked);\n\n\t\tif (event.checked) {\n\t\t\tthis.isPriceOnApplication = true;\n\t\t\tthis.form.get('price').patchValue('0');\n\t\t} else {\n\t\t\tthis.isPriceOnApplication = false;\n\t\t\tthis.form.get('price').patchValue('');\n\t\t}\n\t}\n\n\tpatchEditAdData(): void {\n\t\tthis.propertyWorthState.ValuationInfo.pipe(takeUntil(this.destroy)).subscribe((info) => {\n\t\t\tif (info && this.isSellProperties) {\n\t\t\t\tthis.form?.get('isPriceOnApplication').patchValue(true);\n\t\t\t\tthis.isPriceOnApplication = true;\n\t\t\t\tthis.form.get('price').patchValue('0');\n\t\t\t\tthis.cdref.detectChanges();\n\t\t\t}\n\t\t});\n\n\t\tthis.placeAdFacade.editAdData$.pipe(takeUntil(this.destroy)).subscribe((editData) => {\n\t\t\tif (editData && (this.isRentCommercial || this.isSellProperties)) {\n\t\t\t\tthis.form.get('isPriceOnApplication').patchValue(editData.price.isPriceOnApplication === '1' ? true : false);\n\n\t\t\t\tif (this.isRentCommercial) {\n\t\t\t\t\tthis.form.get('rentalPeriodId').patchValue(editData?.rentalPeriod?.id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateRentalPeriod(event: MatSelectChange): void {\n\t\tthis.form.get('rentalPeriodId').patchValue(event.value);\n\t}\n\n\tshowPriceOnApplicationDialog(): void {\n\t\tthis.dialog.open(PriceOnApplicationDialogComponent, {\n\t\t\tpanelClass: 'price-on-application-dialog',\n\t\t});\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.patchEditAdData();\n\t}\n\n\t// to enable and disable price and rentalPeriodId based on isPriceOnApplication value\n\tupdateFormFields(): void {\n\t\tthis.form\n\t\t\t.get('isPriceOnApplication')\n\t\t\t.valueChanges.pipe(takeUntil(this.destroy))\n\t\t\t.subscribe((isApplied) => {\n\t\t\t\tif (isApplied) {\n\t\t\t\t\tthis.form.get('price').disable();\n\n\t\t\t\t\tif (this.isRentCommercial) {\n\t\t\t\t\t\tthis.form.get('rentalPeriodId').disable();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.form.get('price').enable();\n\n\t\t\t\t\tif (this.isRentCommercial) {\n\t\t\t\t\t\tthis.form.get('rentalPeriodId').enable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\t//we will show Price on Application for Rent commercial and Properties For Sale as of now\n\t\tthis.isRentCommercial = this.placeAdFacade.getCurrentAisle()?.reference === AisleType.RENT_COMMERCIAL;\n\t\tthis.isSellProperties = this.placeAdFacade.getCurrentSection()?.reference === SectionType.PROPERTIES_FOR_SALE;\n\t\tthis.form.addControl('price', this.fb.control('', [Validators?.required, Validators.pattern(/(^[1-9]\\d{0,7}(\\.\\d{1,2})?$)/), NumberValidator()]));\n\n\t\tif (this.isRentCommercial) {\n\t\t\tthis.form.addControl('isPriceOnApplication', this.fb.control(false));\n\t\t\tthis.form.addControl('rentalPeriodId', this.fb.control('1'));\n\t\t\tthis.updateFormFields();\n\t\t} else if (this.isSellProperties) {\n\t\t\tthis.form.addControl('isPriceOnApplication', this.fb.control(false));\n\t\t\tthis.updateFormFields();\n\t\t}\n\t}\n}\n","<div *ngIf=\"{ rentalPeriods: rentalPeriods$ | async } as vm\">\n\t<h3 class=\"heading-3 fg-general-5 mb-2\">{{ 'n152' | translations }}</h3>\n\n\t<p class=\"fg-general-4 mb-4 fs-12px lh-16px fw-400\">{{ 'n3031' | translations }}</p>\n\n\t<form [formGroup]=\"form\">\n\t\t<div class=\"row gap-1\">\n\t\t\t<div class=\"col\">\n\t\t\t\t<mat-form-field appearance=\"outline\">\n\t\t\t\t\t<mat-icon class=\"material-symbols-rounded me-1 fg-general-3 euro-icon\">euro</mat-icon>\n\n\t\t\t\t\t<input matInput type=\"number\" class=\"text-body-regular fg-general-5 lh-18px\" formControlName=\"price\" [readonly]=\"isPriceOnApplication\" />\n\n\t\t\t\t\t<span matSuffix class=\"pe-2 fg-general-2 text-body-regular\" *ngIf=\"!isRentCommercial && !isSellProperties\">{{ 'n351' | translations }}</span>\n\n\t\t\t\t\t<mat-error *ngIf=\"form.get('price').hasError('required'); else otherError\" class=\"text-caption-regular\">\n\t\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t\t</mat-error>\n\n\t\t\t\t\t<ng-template #otherError>\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('price').hasError\" class=\"text-caption-regular\">{{ 'n3353' | translations }}</mat-error>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\n\t\t\t<div class=\"col-6 col-sm-4\" *ngIf=\"isRentCommercial && vm?.rentalPeriods\">\n\t\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100\">\n\t\t\t\t\t<mat-select formControlName=\"rentalPeriodId\" (selectionChange)=\"updateRentalPeriod($event)\" class=\"text-body-regular\">\n\t\t\t\t\t\t<mat-option *ngFor=\"let value of vm?.rentalPeriods[0]?.values\" [value]=\"value.id\" class=\"text-body-regular\">\n\t\t\t\t\t\t\t{{ value.name }}\n\t\t\t\t\t\t</mat-option>\n\t\t\t\t\t</mat-select>\n\n\t\t\t\t\t<mat-error *ngIf=\"form.get('rentalPeriodId')?.hasError('required')\" class=\"text-caption-regular\">\n\t\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t\t</mat-error>\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<ng-container *ngIf=\"isRentCommercial || isSellProperties\">\n\t\t\t<mat-checkbox class=\"d-block text-body-regular fg-general-5\" [formControlName]=\"'isPriceOnApplication'\" color=\"primary\" (change)=\"onUpdate($event)\">\n\t\t\t\t<span class=\"ms-1\">{{ 'n3610' | translations }}</span>\n\t\t\t</mat-checkbox>\n\n\t\t\t<p class=\"text-caption-regular fg-general-5 mt-1 mb-4\">{{ 'n3611' | translations }}</p>\n\n\t\t\t<button\n\t\t\t\tmat-button\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tdisableRipple=\"true\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t(click)=\"showPriceOnApplicationDialog()\"\n\t\t\t\tclass=\"text-body-regular px-0 disabled-ripple\"\n\t\t\t>\n\t\t\t\t{{ 'n3612' | translations }}\n\t\t\t\t<mat-icon class=\"material-icons-outlined ms-1\" iconPositionEnd>help_outline</mat-icon>\n\t\t\t</button>\n\t\t</ng-container>\n\t</form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { CommonItem } from '@core/models';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { NumberValidator } from '@shared/validators/number.validator';\n\n@Component({\n    selector: 'findqo-place-ad-price-share-room',\n    templateUrl: './place-ad-price-share-room.component.html',\n    styleUrls: ['./place-ad-price-share-room.component.scss'],\n    standalone: false\n})\nexport class PlaceAdPriceShareRoomComponent implements OnInit {\n\tconstructor(private fb: FormBuilder, private placeAdFacade: PlaceAdFacade) {\n\t\tthis.roomTypes$ = placeAdFacade.getRoomTypes$();\n\t}\n\n\t@Input() form: FormGroup;\n\t@Input() bedroomCount = 1;\n\n\troomTypes$: Observable<CommonItem[]>;\n\n\tcreateNewBedroomData(): FormGroup<{\n\t\tprice: FormControl<string>;\n\t\troomTypeId: FormControl<string>;\n\t}> {\n\t\treturn this.fb.group({\n\t\t\tprice: this.fb.control('', [Validators.required, Validators.pattern(/(^[1-9]\\d{0,7}(\\.\\d{1,2})?$)/), NumberValidator()]),\n\t\t\troomTypeId: this.fb.control('', Validators.required),\n\t\t});\n\t}\n\n\tbedroomDetails(): FormArray {\n\t\treturn this.form.get('bedrooms') as FormArray;\n\t}\n\n\tdecreaseBedroomCount(): void {\n\t\tif (this.bedroomCount > 1) {\n\t\t\tconst BEDROOMS = this.form.get('bedrooms') as FormArray;\n\t\t\tBEDROOMS.removeAt(this.bedroomCount - 1);\n\t\t\t--this.bedroomCount;\n\t\t}\n\t}\n\n\tincreaseBedroomCount(): void {\n\t\t++this.bedroomCount;\n\n\t\tconst BEDROOMS = this.form.get('bedrooms') as FormArray;\n\t\tBEDROOMS.push(this.createNewBedroomData());\n\t}\n\n\taddControl(): void {\n\t\tthis.form.addControl(\n\t\t\t'bedrooms',\n\t\t\tthis.fb.array([\n\t\t\t\tthis.fb.group({\n\t\t\t\t\tprice: this.fb.control('', [Validators.required, Validators.pattern(/(^[1-9]\\d{0,7}(\\.\\d{1,2})?$)/), NumberValidator()]),\n\t\t\t\t\troomTypeId: this.fb.control('', Validators.required),\n\t\t\t\t}),\n\t\t\t])\n\t\t);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.addControl();\n\t}\n}\n","<div>\n\t<h3 class=\"heading-3 fg-general-5 mb-2\">{{ 'n152' | translations }}</h3>\n\n\t<p class=\"fg-general-4 mb-4 fs-12px lh-16px fw-400\">{{ 'n3261' | translations }}</p>\n\n\t<div class=\"row justify-content-between align-items-center mb-4\">\n\t\t<div class=\"col\">\n\t\t\t<span class=\"d-inline-block lh-18px text-small-14px-regular fg-general-4\">{{ 'n3262' | translations }}</span>\n\t\t</div>\n\n\t\t<div class=\"col-auto add-btn\">\n\t\t\t<button mat-stroked-button class=\"bg-basic-1 round-btn px-0\" disableRipple (click)=\"decreaseBedroomCount()\" [disabled]=\"bedroomCount <= 1\" type=\"button\">\n\t\t\t\t<mat-icon class=\"fg-prim-2 fs-18px\">remove</mat-icon>\n\t\t\t</button>\n\n\t\t\t<input type=\"number\" class=\"text-small-14px-regular lh-18px fg-general-5 border-0 w-35px text-center\" [(ngModel)]=\"bedroomCount\" />\n\n\t\t\t<button mat-stroked-button class=\"bg-basic-1 round-btn px-0\" disableRipple type=\"button\" (click)=\"increaseBedroomCount()\">\n\t\t\t\t<mat-icon class=\"fg-prim-2\">add</mat-icon>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<form [formGroup]=\"form\">\n\t\t<div formArrayName=\"bedrooms\">\n\t\t\t<div *ngFor=\"let berdroom of bedroomDetails()?.controls; let i = index\">\n\t\t\t\t<div [formGroupName]=\"i\" class=\"bedroom-item px-3\">\n\t\t\t\t\t<div class=\"mt-3 mb-4 d-flex align-middle\">\n\t\t\t\t\t\t<span class=\"bed-icon me-1\"><mat-icon class=\"fg-info-3\">bed</mat-icon></span>\n\n\t\t\t\t\t\t<h4 class=\"d-inline-block bedroom-count heading-4\">{{ 'n3268' | translations }} {{ i + 1 }}</h4>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<mat-label class=\"mb-1 fg-general-4 text-body-regular\">{{ 'n3258' | translations }}</mat-label>\n\n\t\t\t\t\t<mat-form-field appearance=\"outline\">\n\t\t\t\t\t\t<mat-icon class=\"material-symbols-rounded me-1 fg-general-3 euro-icon\">euro</mat-icon>\n\n\t\t\t\t\t\t<input matInput class=\"text-body-regular fg-general-5 lh-18px price-field\" [placeholder]=\"'n1044' | translations\" formControlName=\"price\" />\n\n\t\t\t\t\t\t<span matSuffix class=\"pe-2 fg-general-2 text-body-regular\">{{ 'n351' | translations }}</span>\n\n\t\t\t\t\t\t<mat-error\n\t\t\t\t\t\t\t*ngIf=\"form.get('bedrooms.' + i + '.price')?.hasError('required') && form.get('bedrooms.' + i + '.price')?.touched; else otherError\"\n\t\t\t\t\t\t\tclass=\"text-caption-regular\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t\t\t</mat-error>\n\n\t\t\t\t\t\t<ng-template #otherError>\n\t\t\t\t\t\t\t<mat-error *ngIf=\"form.get('bedrooms.' + i + '.price')?.hasError && form.get('bedrooms.' + i + '.price')?.touched\" class=\"text-caption-regular\">\n\t\t\t\t\t\t\t\tInvalid input.Please enter a valid number.\n\t\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</mat-form-field>\n\n\t\t\t\t\t<mat-label class=\"mb-1 fg-general-4 text-body-regular\">{{ 'n3259' | translations }}</mat-label>\n\n\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"roomTypes$ | async as roomTypes\">\n\t\t\t\t\t\t<mat-select formControlName=\"roomTypeId\" [placeholder]=\"'n3260' | translations\" class=\"text-body-regular\">\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let data of roomTypes\" [value]=\"data?.id\" class=\"text-body-regular\">\n\t\t\t\t\t\t\t\t{{ data.name }}\n\t\t\t\t\t\t\t</mat-option>\n\t\t\t\t\t\t</mat-select>\n\n\t\t\t\t\t\t<mat-error\n\t\t\t\t\t\t\t*ngIf=\"form.get('bedrooms.' + i + '.roomTypeId')?.hasError('required') && form.get('bedrooms.' + i + '.roomTypeId')?.touched\"\n\t\t\t\t\t\t\tclass=\"text-caption-regular\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ 'n3113' | translations }}\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t</mat-form-field>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n","import { AfterViewInit, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Observable, takeUntil } from 'rxjs';\n\nimport { PropertyWorthState } from '@core/data-access/states/property-worth.state';\nimport { AisleType, PlaceAdDataStatus, PlaceAdTabIndex } from '@core/enums';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { DestroyService } from '@shared/services/destroy.service';\n@Component({\n    selector: 'findqo-place-ad-price',\n    templateUrl: './place-ad-price.component.html',\n    styleUrls: ['./place-ad-price.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdPriceComponent implements OnInit, AfterViewInit {\n\tconstructor(\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate fb: FormBuilder,\n\t\tprivate destroy: DestroyService,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate propertyWorthState: PropertyWorthState,\n\t\tprivate cd: ChangeDetectorRef,\n\t) {\n\t\tthis.adId$ = placeAdFacade.adId$;\n\t}\n\n\tform: FormGroup = this.fb.group({});\n\n\tupdatedStatus: PlaceAdDataStatus = 0;\n\tadId$: Observable<string>;\n\tisShareRoom = false; //to check if aisle is share residential(room)\n\tshareRoomBedroomCount = 1;\n\n\tonBack(): void {\n\t\tthis.placeAdService.onBack();\n\t}\n\n\tasync onNext(): Promise<boolean> {\n\t\ttry {\n\t\t\tif (this.isShareRoom) {\n\t\t\t\tthis.placeAdService.markFormArrayAsTouched(this.form?.get('bedrooms') as FormArray);\n\t\t\t} else {\n\t\t\t\tthis.placeAdService.markFormFieldTouched(this.form);\n\t\t\t}\n\n\t\t\tthis.placeAdService.checkForDataUpdates(this.form.value);\n\n\t\t\tif (this.form.valid) {\n\t\t\t\tif (this.updatedStatus !== PlaceAdDataStatus?.UPDATED) {\n\t\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\n\t\t\t\t\tif (this.placeAdFacade.getAdId()) {\n\t\t\t\t\t\t// this.placeAdFacade.updateAd(PlaceAdTabIndex.TAB_2).then(() => {\n\t\t\t\t\t\t//  this.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t\t\t\tthis.placeAdService.directTabIndexUpdate(PlaceAdTabIndex.TAB_2);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.placeAdService.directTabIndexUpdate(PlaceAdTabIndex.TAB_2);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tformValidation(): void {\n\t\tlet count = 0;\n\n\t\tthis.placeAdService\n\t\t\t.formValidationObservable(this.form)\n\t\t\t.pipe(takeUntil(this.destroy))\n\t\t\t.subscribe(([prev, next]) => {\n\t\t\t\tif (!this.form.valid) {\n\t\t\t\t\tthis.placeAdService.setStepsEnableStatus(PlaceAdTabIndex.TAB_1);\n\t\t\t\t\tthis.placeAdService.setTabIndex(PlaceAdTabIndex.TAB_1);\n\t\t\t\t} else {\n\t\t\t\t\tif (JSON.stringify(prev) !== JSON.stringify(next)) {\n\t\t\t\t\t\tcount++;\n\n\t\t\t\t\t\tif (this.placeAdFacade.getIsEditMode()) {\n\t\t\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.updatedStatus = PlaceAdDataStatus.UPDATED_AGAIN;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t//to patch edit ad data if any\n\tpatchEditAdData(): void {\n\t\tthis.placeAdFacade.editAdData$.pipe(takeUntil(this.destroy)).subscribe((editData) => {\n\t\t\tconst BEDROOM_ARRAY = this.form?.get('bedrooms') as FormArray;\n\t\t\tconst propertyValuationData = this.propertyWorthState.getValuationInfo();\n\n\t\t\tif (propertyValuationData?.roomTypeId) {\n\t\t\t\tBEDROOM_ARRAY?.controls.forEach((formGroup: FormGroup) => {\n\t\t\t\t\tformGroup?.patchValue({\n\t\t\t\t\t\troomTypeId: propertyValuationData.roomTypeId,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (editData?.bedrooms || editData?.price) {\n\t\t\t\tif (editData?.bedrooms?.length >= 1 && editData?.aisle?.reference === AisleType.SHARE_RESIDENTIAL) {\n\t\t\t\t\tthis.shareRoomBedroomCount = editData?.bedrooms?.length;\n\t\t\t\t\tconst BEDROOM_ARRAY = this.form.get('bedrooms') as FormArray;\n\t\t\t\t\tlet count = 0;\n\n\t\t\t\t\teditData?.bedrooms.forEach((data) => {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif (count === 1) {\n\t\t\t\t\t\t\tBEDROOM_ARRAY.controls.forEach((formGroup: FormGroup) => {\n\t\t\t\t\t\t\t\tformGroup.patchValue({\n\t\t\t\t\t\t\t\t\tprice: Number.parseFloat(data?.price?.replace(/,/g, '')),\n\t\t\t\t\t\t\t\t\troomTypeId: data?.roomType?.id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tBEDROOM_ARRAY.push(\n\t\t\t\t\t\t\t\tthis.fb.group({\n\t\t\t\t\t\t\t\t\tprice: Number.parseFloat(data?.price?.replace(/,/g, '')),\n\t\t\t\t\t\t\t\t\troomTypeId: data?.roomType?.id,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst UPDATED_VALUE = {\n\t\t\t\t\t\tprice: Number.parseFloat(editData?.price?.minValue.replace(/,/g, '')),\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.form.patchValue(UPDATED_VALUE);\n\t\t\t\t}\n\n\t\t\t\tthis.placeAdService.updatePlaceAdFormData(this.form);\n\t\t\t\tthis.updatedStatus = PlaceAdDataStatus?.UPDATED;\n\t\t\t\tthis.cd.detectChanges();\n\t\t\t}\n\t\t});\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.patchEditAdData();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.formValidation();\n\t\tthis.isShareRoom = this.placeAdFacade.getCurrentAisle()?.reference === AisleType.SHARE_RESIDENTIAL;\n\t}\n}\n","<!-- For all type of aisle except share-residential(room) -->\n<findqo-place-ad-price-general [form]=\"form\" *ngIf=\"!isShareRoom; else shareRoomTemplate\"></findqo-place-ad-price-general>\n\n<!-- For aisle share-residential(room) -->\n<ng-template #shareRoomTemplate>\n\t<findqo-place-ad-price-share-room [form]=\"form\" [bedroomCount]=\"shareRoomBedroomCount\"></findqo-place-ad-price-share-room>\n</ng-template>\n\n<!-- <findqo-place-ad-tab-buttons (nextTab)=\"onNext()\" [buttonLabel]=\"'n3210'\" *ngIf=\"adId$ | async; else otherButtons\"></findqo-place-ad-tab-buttons>\n\n<ng-template #otherButtons>\n\t<findqo-place-ad-tab-buttons (nextTab)=\"onNext()\" [buttonLabel]=\"'n292'\"></findqo-place-ad-tab-buttons>\n</ng-template> -->\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdPriceShareRoomComponent } from './place-ad-price-share-room.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdPriceShareRoomComponent],\n\timports: [SharedModule, MatInputModule, MatSelectModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdPriceShareRoomComponent],\n})\nexport class PlaceAdPriceShareRoomModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { PriceOnApplicationDialogComponent } from './price-on-application-dialog.component';\nimport { ButtonModule } from '@shared/components/button/button.module';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n\tdeclarations: [PriceOnApplicationDialogComponent],\n\timports: [SharedModule, ButtonModule, MatDialogModule],\n\texports: [PriceOnApplicationDialogComponent],\n})\nexport class PriceOnApplicationDialogModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { PlaceAdPriceShareRoomModule } from '../place-ad-price-share-room/place-ad-price-share-room.module';\nimport { PlaceAdPriceGeneralComponent } from './place-ad-price-general.component';\nimport { PriceOnApplicationDialogModule } from '../price-on-application-dialog/price-on-application-dialog.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdPriceGeneralComponent],\n\timports: [\n\t\tSharedModule,\n\t\tMatInputModule,\n\t\tMatCheckboxModule,\n\t\tMatSelectModule,\n\t\tPlaceAdTabButtonsModule,\n\t\tPlaceAdPriceShareRoomModule,\n\t\tPriceOnApplicationDialogModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t],\n\texports: [PlaceAdPriceGeneralComponent],\n})\nexport class PlaceAdPriceGeneralModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdPriceComponent } from './place-ad-price.component';\nimport { PlaceAdTabButtonsModule } from '../plac-ad-tab-buttons/place-ad-tab-buttons.module';\nimport { PlaceAdPriceShareRoomModule } from '../place-ad-price-share-room/place-ad-price-share-room.module';\nimport { PlaceAdPriceGeneralModule } from '../place-ad-price-general/place-ad-price-general.module';\n\n@NgModule({\n\tdeclarations: [PlaceAdPriceComponent],\n\timports: [SharedModule, PlaceAdTabButtonsModule, PlaceAdPriceGeneralModule, PlaceAdPriceShareRoomModule],\n\texports: [PlaceAdPriceComponent],\n})\nexport class PlaceAdPriceModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { Router } from '@angular/router';\nimport { Observable, of, switchMap, takeUntil } from 'rxjs';\n\nimport { AdPaymentStatus, AdStatus } from '@core/enums';\nimport { Ad, EditAdResponseData, PlaceAdFieldsSections, PlanTiers } from '@core/models';\nimport { ViewportService } from '@core/services/viewport.service';\nimport { environment } from '@environments/environment';\nimport { COUPON_PRICE } from '@feature/place-ad/place-ad.constant';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { DestroyService } from '@shared/services/destroy.service';\n\n@Component({\n    selector: 'findqo-place-ad-review',\n    templateUrl: './place-ad-review.component.html',\n    styleUrls: ['./place-ad-review.component.scss'],\n    providers: [DestroyService],\n    standalone: false\n})\nexport class PlaceAdReviewComponent implements OnInit {\n\tconstructor(\n\t\tpublic viewport: ViewportService,\n\t\tprivate placeAdfacade: PlaceAdFacade,\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate router: Router,\n\t\tprivate destroy: DestroyService\n\t) {\n\t\tthis.filterValues$ = this.placeAdfacade.placeAdControls$;\n\t\tthis.adData$ = this.placeAdfacade.getAdData$();\n\t\tthis.isFeaturedAd$ = placeAdfacade.isFeaturedAd$;\n\t\tthis.total$ = placeAdfacade.adPlanPrice$;\n\t\tthis.couponCode$ = placeAdfacade.getcouponCode$();\n\t\tthis.planTierDetails$ = placeAdfacade.planTierDetails$;\n\t}\n\teditAdData: EditAdResponseData;\n\tdefaultUserImg: string = environment.defaultAvatarImg;\n\ttotal$: Observable<number> = of(COUPON_PRICE);\n\tamenities = [];\n\tdisableBadgeSelection = false;\n\tselectedBadges: { id: string; name: string }[] = [];\n\tshowMoreProperties = false;\n\tisFeaturedAd$: Observable<boolean>;\n\tdetailBadges = [];\n\tdefaultAdImage = 'assets/images/place-an-ad/ad-review.svg';\n\tadData$: Observable<Ad>;\n\tfeatured = true;\n\tfilterValues$: Observable<PlaceAdFieldsSections>;\n\tcouponCode$: Observable<string>;\n\tisAdSubmitted = false;\n\tisBadgesUpdated = false; // to check if badge data is updated mainly in edit ad if it has badges already\n\tremoveBadges = false;\n\tisEditMode = false;\n\tplanTierDetails$: Observable<PlanTiers>;\n\n\t@Output() isPaying = new EventEmitter<boolean>();\n\n\tupdateExtrasValue(event: MatCheckbox, fromCheckBox: boolean, value): void {\n\t\tthis.isBadgesUpdated = true;\n\n\t\tif (!fromCheckBox) {\n\t\t\tevent.checked = !event.checked;\n\t\t}\n\n\t\tif (event.checked) {\n\t\t\tif (this.selectedBadges?.length < 3) {\n\t\t\t\tthis.selectedBadges.push(value);\n\t\t\t}\n\n\t\t\tthis.disableBadgeSelection = this.selectedBadges?.length === 3;\n\t\t} else {\n\t\t\tconst INDEX = this.selectedBadges?.findIndex((x) => x.id === event.value);\n\n\t\t\tif (INDEX !== -1) {\n\t\t\t\tthis.selectedBadges?.splice(INDEX, 1);\n\n\t\t\t\tthis.disableBadgeSelection = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tshowMore(): void {\n\t\tthis.showMoreProperties = !this.showMoreProperties;\n\t}\n\n\tasync onPay(): Promise<boolean> {\n\t\tthis.isPaying.emit(true);\n\t\ttry {\n\t\t\tif (!this.isAdSubmitted) {\n\t\t\t\tthis.isAdSubmitted = true;\n\t\t\t\tthis.placeAdfacade.setIsAllowNavigation$(true);\n\t\t\t\tconst EDIT_AD_DATA = this.placeAdfacade.getEditAdData();\n\n\t\t\t\tif (\n\t\t\t\t\tEDIT_AD_DATA?.adPayment?.status === AdPaymentStatus.PAID &&\n\t\t\t\t\tEDIT_AD_DATA?.adStatus?.status !== AdStatus.SOLD &&\n\t\t\t\t\tEDIT_AD_DATA?.adStatus?.status !== AdStatus.EXPIRED &&\n\t\t\t\t\tEDIT_AD_DATA?.adStatus?.status !== AdStatus.PAYMENT_PENDING &&\n\t\t\t\t\t!this.isBadgesUpdated\n\t\t\t\t) {\n\t\t\t\t\tthis.placeAdfacade.setIsCompletAdSubmitted(true);\n\t\t\t\t\tthis.router.navigate(['ad-submitted'], { queryParams: { adId: this.placeAdfacade.getAdId() } });\n\t\t\t\t} else {\n\t\t\t\t\tawait this.individualAccountPayment(); //update ad and stripe payment\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\taddBadgesToAd(): void {\n\t\tconst badges = [];\n\t\tObject.keys(this.selectedBadges).forEach((key) => {\n\t\t\tbadges.push(+this.selectedBadges[key]?.id);\n\t\t});\n\n\t\tthis.placeAdService.addIndividualControlData('badges', badges);\n\t}\n\n\t//TODO; in future check if the flow for individual and business can handle together then use one functionality for that instead of two\n\tasync individualAccountPayment(): Promise<void> {\n\t\tconst IS_FEATURED_AD = this.placeAdfacade.getIsFeaturedAd();\n\n\t\tif ((IS_FEATURED_AD && this.isBadgesUpdated) || this.removeBadges) {\n\t\t\tif (this.selectedBadges.length > 0) {\n\t\t\t\tthis.addBadgesToAd();\n\t\t\t} else {\n\t\t\t\tthis.placeAdService.addIndividualControlData('badges', []);\n\t\t\t}\n\n\t\t\t//add badges and make ad complete\n\t\t\tawait this.placeAdfacade\n\t\t\t\t.individualFeatureAdPayment()\n\t\t\t\t.then((data) => {\n\t\t\t\t\tif (data?.['url']) {\n\t\t\t\t\t\twindow.location.href = data?.['url'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.placeAdfacade.setIsCompletAdSubmitted(true);\n\t\t\t\t\t\tthis.router.navigate(['ad-submitted'], { queryParams: { adId: this.placeAdfacade.getAdId() } });\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => (this.isAdSubmitted = false));\n\t\t} else {\n\t\t\tif (!IS_FEATURED_AD) {\n\t\t\t\tthis.selectedBadges = [];\n\t\t\t}\n\n\t\t\tawait this.placeAdfacade\n\t\t\t\t.individualStandardAdPayment()\n\t\t\t\t.then((data) => {\n\t\t\t\t\tif (data?.['url']) {\n\t\t\t\t\t\twindow.location.href = data?.['url'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.placeAdfacade.setIsCompletAdSubmitted(true);\n\t\t\t\t\t\tthis.router.navigate(['ad-submitted'], { queryParams: { adId: this.placeAdfacade.getAdId() } });\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => (this.isAdSubmitted = false));\n\t\t}\n\t}\n\n\t//TODO: if in future if payment flow is same for both seller type then remove this\n\tbusinessAccountPayment(): void {\n\t\tif (this.placeAdfacade.getIsFeaturedAd() && this.selectedBadges?.length > 0 && this.isBadgesUpdated) {\n\t\t\tthis.addBadgesToAd();\n\t\t\tthis.placeAdfacade.setIsAllowNavigation$(true); //to set canDeactivate true;\n\n\t\t\t//add badges and make ad complete\n\t\t\tthis.placeAdfacade\n\t\t\t\t.businessFeaturedAdComplete()\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.placeAdfacade.setIsCompletAdSubmitted(true);\n\t\t\t\t\tthis.router.navigate(['ad-submitted'], { queryParams: { adId: this.placeAdfacade.getAdId() } });\n\t\t\t\t})\n\t\t\t\t.catch(() => (this.isAdSubmitted = false));\n\t\t} else {\n\t\t\tthis.selectedBadges = [];\n\t\t\tthis.placeAdService.deleteIndividualControl('badges');\n\t\t\tthis.placeAdfacade.setIsAllowNavigation$(true); //to set canDeactivate true;\n\n\t\t\tthis.placeAdfacade\n\t\t\t\t.businessAdWithoutBadges()\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.placeAdfacade.setIsCompletAdSubmitted(true);\n\t\t\t\t\tthis.router.navigate(['ad-submitted'], { queryParams: { adId: this.placeAdfacade.getAdId() } });\n\t\t\t\t})\n\t\t\t\t.catch(() => (this.isAdSubmitted = false));\n\t\t}\n\t}\n\n\tupdateBadges(): void {\n\t\tlet previousBadges = [];\n\t\tthis.placeAdfacade\n\t\t\t.getEditAdData$()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((editAdData) => {\n\t\t\t\t\tif (editAdData?.badges?.length > 0) {\n\t\t\t\t\t\tthis.selectedBadges = editAdData?.badges;\n\t\t\t\t\t\tpreviousBadges = this.selectedBadges;\n\t\t\t\t\t\tthis.isEditMode = true;\n\t\t\t\t\t\tif (this.selectedBadges?.length === 3) {\n\t\t\t\t\t\t\tthis.disableBadgeSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.isFeaturedAd$;\n\t\t\t\t}),\n\t\t\t\ttakeUntil(this.destroy)\n\t\t\t)\n\t\t\t.subscribe((isFeatured) => {\n\t\t\t\tif (!isFeatured) {\n\t\t\t\t\tthis.selectedBadges = [];\n\t\t\t\t\tthis.disableBadgeSelection = false;\n\t\t\t\t\tthis.removeBadges = previousBadges.length > 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedBadges = previousBadges;\n\t\t\t\t\tthis.isBadgesUpdated = false;\n\t\t\t\t\tthis.removeBadges = false;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tcanBeChecked(value): boolean {\n\t\treturn !!this.selectedBadges?.find((obj) => obj?.id === value?.id);\n\t}\n\n\t//reset amenities value on stand change\n\tprivate resetAmenities(): void {\n\t\tlet count = 0;\n\t\tthis.placeAdfacade.adStand$.pipe(takeUntil(this.destroy)).subscribe((stand) => {\n\t\t\tif (stand) {\n\t\t\t\tcount++;\n\n\t\t\t\tif (this.isEditMode && count < 2) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedBadges = [];\n\t\t\t\t\tthis.placeAdService.addIndividualControlData('badges', []);\n\t\t\t\t\tthis.disableBadgeSelection = false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tif (!this.adData$) {\n\t\t\tthis.editAdData = this.placeAdfacade.getEditAdData();\n\t\t}\n\n\t\tthis.detailBadges = this.placeAdService.getPropertiesDetailsBadge();\n\t\tthis.updateBadges();\n\t\tthis.resetAmenities();\n\t}\n}\n","<div\n\t*ngIf=\"{\n\t\tadData: adData$ | async,\n\t\tisFeaturedAd: isFeaturedAd$ | async,\n\t\tfilterValues: filterValues$ | async,\n\t\ttotal: total$ | async,\n\t\tcouponValue: couponCode$ | async,\n\t\tplanTierDetails: planTierDetails$ | async\n\t} as vm\"\n>\n\t<div class=\"row justify-content-center gap-5\" *ngIf=\"vm?.adData || editAdData\">\n\t\t<!-- Review Ad -->\n\t\t<div class=\"col-sm-6 px-0\">\n\t\t\t<h3 class=\"heading-3 fg-general-5\">{{ 'n311' | translations }}</h3>\n\n\t\t\t<div class=\"ad-details my-4\">\n\t\t\t\t<!-- TODO:Need to update the data here once API is ready -->\n\t\t\t\t<div\n\t\t\t\t\t*ngIf=\"vm.adData?.seller?.sellerTypeId === '2' || editAdData?.seller?.sellerTypeId === '2'\"\n\t\t\t\t\tclass=\"row justify-content-start align-items-center dealer-details gap-2\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"col-auto\">\n\t\t\t\t\t\t<img [src]=\"vm.adData?.seller?.picture || defaultUserImg || editAdData?.seller?.picture\" alt=\"Dealer Image\" class=\"dealer-img\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col overflow-hidden\">\n\t\t\t\t\t\t<p class=\"text-body-regular fg-general-5 text-truncate\">{{ vm.adData?.seller?.name || editAdData?.seller?.name }}</p>\n\n\t\t\t\t\t\t<p class=\"text-caption-regular fg-general-4\">{{ vm.adData?.seller?.tagline || editAdData?.seller?.tagline }}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"row overflow-hidden\">\n\t\t\t\t\t<div class=\"col-lg position-relative\" *ngIf=\"!vm?.isFeaturedAd; else featueredAdsTemplate\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t[src]=\"vm.adData?.images[0]?.url || editAdData?.images[0]?.url | adImagePipe\"\n\t\t\t\t\t\t\talt=\"Place Ad Image\"\n\t\t\t\t\t\t\tclass=\"ad-img image-skeleton-loader\"\n\t\t\t\t\t\t\tfindqoAdImage\n\t\t\t\t\t\t\tpriority\n\t\t\t\t\t\t\tfill\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<!-- Featured ads image  -->\n\t\t\t\t\t<ng-template #featueredAdsTemplate>\n\t\t\t\t\t\t<div class=\"row gap-1 gap-sm-2\">\n\t\t\t\t\t\t\t<div class=\"large-photo flex-grow-1\">\n\t\t\t\t\t\t\t\t<div class=\"bg-general-1 image-container position-relative\">\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t[ngSrc]=\"vm.adData?.images[0]?.url || editAdData?.images[0]?.url | adImagePipe\"\n\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{ 'object-fit-contain': vm.adData?.images?.length <= 2 }\"\n\t\t\t\t\t\t\t\t\t\tclass=\"image-1 h-100 image-skeleton-loader\"\n\t\t\t\t\t\t\t\t\t\t[alt]=\"vm.adData?.title\"\n\t\t\t\t\t\t\t\t\t\tfindqoAdImage\n\t\t\t\t\t\t\t\t\t\tpriority\n\t\t\t\t\t\t\t\t\t\tfill\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t@if (vm.adData?.images.length > 2 || editAdData?.images.length > 2) {\n\t\t\t\t\t\t\t\t<div class=\"col-sm-auto small-photos ad-style d-flex flex-sm-column justify-content-between gap-1 gap-sm-0\">\n\t\t\t\t\t\t\t\t\t<div *ngFor=\"let img of [1, 2]; let i = index\" class=\"bg-general-2 sub-image position-relative\">\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t[ngSrc]=\"vm.adData?.images[i + 1]?.url || editAdData?.images[i + 1]?.url | adImagePipe\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"other-images image-skeleton-loader\"\n\t\t\t\t\t\t\t\t\t\t\t[class.gallery-img]=\"i === 1\"\n\t\t\t\t\t\t\t\t\t\t\t[alt]=\"vm.adData?.title || editAdData?.title\"\n\t\t\t\t\t\t\t\t\t\t\tfindqoAdImage\n\t\t\t\t\t\t\t\t\t\t\tpriority\n\t\t\t\t\t\t\t\t\t\t\tfill\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<div class=\"py-3 py-sm-4 px-2 px-sm-3 position-relative ad-review-details w-100\" [ngClass]=\"vm?.isFeaturedAd ? 'col-auto' : 'col'\">\n\t\t\t\t\t\t<div class=\"d-flex justify-content-between\">\n\t\t\t\t\t\t\t<span class=\"text-body-medium lh-18px fg-general-5\">{{ vm.adData?.title || editAdData?.title }}</span>\n\n\t\t\t\t\t\t\t<span class=\"d-block px-2 bg-info-1 fg-info-3 rounded-1 text-small-12px-regular h-25px\" *ngIf=\"vm?.isFeaturedAd\">\n\t\t\t\t\t\t\t\t{{ 'n3309' | translations }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ng-container *ngFor=\"let badge of detailBadges\">\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclass=\"me-2 text-caption-regular lh-18px align-middle fg-general-4\"\n\t\t\t\t\t\t\t\t\t*ngIf=\"\n\t\t\t\t\t\t\t\t\t\t(vm.adData?.[badge?.property] && vm.adData?.[badge?.property] !== '0') ||\n\t\t\t\t\t\t\t\t\t\t(editAdData?.[badge?.property] && editAdData?.[badge?.property] !== '0')\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<mat-icon class=\"detail-icon fg-general-4\">{{ badge?.icon }}</mat-icon>\n\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"badge?.property === 'propertySize'; else showBadgeValue\">\n\t\t\t\t\t\t\t\t\t\t{{ vm.adData?.[badge?.property]?.value || editAdData?.[badge?.property]?.value }}\n\t\t\t\t\t\t\t\t\t\t{{ vm.adData?.[badge?.property]?.parameter || editAdData?.[badge?.property]?.parameter }}\n\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t<ng-template #showBadgeValue>\n\t\t\t\t\t\t\t\t\t\t<span>{{ vm.adData?.[badge?.property] || editAdData?.[badge?.property] }}</span>\n\t\t\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"mt-2 mb-3 fg-general-4 text-caption-regular\" *ngIf=\"!viewport?.mobile\">\n\t\t\t\t\t\t\t<mat-icon class=\"fg-general-4 detail-icon me-0\">location_on</mat-icon>\n\n\t\t\t\t\t\t\t<span class=\"d-inline-block lh-18px\">{{ vm.adData?.location?.county || editAdData?.location?.county }}</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div *ngIf=\"selectedBadges?.length > 0 && vm.isFeaturedAd\">\n\t\t\t\t\t\t\t<span *ngFor=\"let badge of selectedBadges\" class=\"selected-badge text-caption-regular bg-info-1 fg-info-3\">\n\t\t\t\t\t\t\t\t{{ badge?.name }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"text-body-regular fg-general-5 pt-3 mt-auto d-flex justify-content-between\">\n\t\t\t\t\t\t\t<span *ngIf=\"vm.adData\">\n\t\t\t\t\t\t\t\t{{ vm?.adData?.price | adPrice: vm?.adData?.rentalPeriod }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span *ngIf=\"editAdData && !vm.adData\">\n\t\t\t\t\t\t\t\t{{ editAdData?.price | adPrice: editAdData?.rentalPeriod?.toString() }}\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<div *ngIf=\"viewport?.mobile\">\n\t\t\t\t\t\t\t\t<mat-icon class=\"fg-general-4 detail-icon me-0\">location_on</mat-icon>\n\n\t\t\t\t\t\t\t\t<span class=\"d-inline-block lh-18px\">{{ vm.adData?.location?.county || editAdData?.location?.county }}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ng-container *ngIf=\"vm.isFeaturedAd && vm.filterValues?.amenities[0]?.values?.length > 0\">\n\t\t\t\t<h3 class=\"heading-3 fg-general-5 px-3 px-sm-0\">{{ 'n3066' | translations }}</h3>\n\n\t\t\t\t<p class=\"text-caption-regular fg-general-4 my-2 px-3 px-sm-0\">{{ 'n3067' | translations }}</p>\n\n\t\t\t\t<div class=\"row justify-content-between align-items-center row-cols-2 px-3 px-sm-0\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"col checkbox-list pb-3\"\n\t\t\t\t\t\t*ngFor=\"let value of vm.filterValues?.amenities[0]?.values | placeAdExtrasSlice: showMoreProperties : viewport?.mobile; let i = index\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclass=\"d-flex justify-content-between align-items-center checkbox-item p-3 fg-general-4 cursor-pointer\"\n\t\t\t\t\t\t\t(click)=\"updateExtrasValue(badgeCheckBox, false, value)\"\n\t\t\t\t\t\t\t[ngClass]=\"{ 'checked-badge': badgeCheckBox.checked, 'pe-none': !badgeCheckBox.checked && disableBadgeSelection }\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"text-body-regular fg-general-4\" [class.fg-info-3]=\"badgeCheckBox.checked\" [class.text-caption-regular]=\"viewport?.mobile\">\n\t\t\t\t\t\t\t\t{{ value?.name }}\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<mat-checkbox\n\t\t\t\t\t\t\t\t[value]=\"value?.id\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclass=\"fs-14px fs-sm-16px fw-400 lh-22px fg-general-4 review-checkbox\"\n\t\t\t\t\t\t\t\t[disabled]=\"!badgeCheckBox.checked && disableBadgeSelection\"\n\t\t\t\t\t\t\t\t(click)=\"$event.stopImmediatePropagation(); updateExtrasValue(badgeCheckBox, true, value)\"\n\t\t\t\t\t\t\t\t[ngModel]=\"canBeChecked(value)\"\n\t\t\t\t\t\t\t\t#badgeCheckBox\n\t\t\t\t\t\t\t></mat-checkbox>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<a class=\"highlight-btn cursor-pointer text-decoration-none fg-info-3 text-body-regular ps-3 ps-sm-0\" (click)=\"showMore()\" *ngIf=\"viewport?.mobile\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{{ !showMoreProperties ? ('n3068' | translations) : ('n3092' | translations) }}\n\n\t\t\t\t\t\t<mat-icon class=\"material-icons-round fg-info-3 ms-2 highlight-arrow\">\n\t\t\t\t\t\t\t{{ !showMoreProperties ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}\n\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<!-- Summary -->\n\t\t<div class=\"col-sm-auto px-0\" [class.w-311px]=\"!viewport?.mobile\">\n\t\t\t<h3 class=\"heading-3 fg-general-5 mb-4 ps-3 ps-sm-0\">{{ 'n283' | translations }}</h3>\n\n\t\t\t<div class=\"bg-general-1 p-3 rounded-sm-1\">\n\t\t\t\t<p class=\"text-body-regular fg-general-5\">\n\t\t\t\t\t{{ 'n3065' | translations }}:\n\n\t\t\t\t\t<span class=\"ms-1 text-body-regular fg-general-5\">{{ vm.adData?.aisle?.name || editAdData?.aisle?.name | titlecase }}</span>\n\t\t\t\t</p>\n\n\t\t\t\t<p class=\"fg-general-4 d-flex justify-content-between text-body-regular pt-4\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{{ vm.isFeaturedAd ? ('n3335' | translations | titlecase) : ('n3340' | translations | titlecase) }}\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span class=\"fg-general-5\">\n\t\t\t\t\t\t<span *ngIf=\"vm?.total === 0\" class=\"strike-through fg-general-3 me-2\">\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\tvm?.isFeaturedAd\n\t\t\t\t\t\t\t\t\t? (vm?.planTierDetails?.individualAccount[1]?.features[0]?.price?.price\n\t\t\t\t\t\t\t\t\t\t| currency: vm?.planTierDetails?.individualAccount[1]?.features[0]?.price?.currency)\n\t\t\t\t\t\t\t\t\t: (vm?.planTierDetails?.individualAccount[0]?.features[0]?.price?.price\n\t\t\t\t\t\t\t\t\t\t| currency: vm?.planTierDetails?.individualAccount[0]?.features[0]?.price?.currency)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{{ vm?.total | currency: 'EUR' }}\n\t\t\t\t\t</span>\n\t\t\t\t</p>\n\n\t\t\t\t<div class=\"d-flex justify-content-between mt-4\">\n\t\t\t\t\t<h4 class=\"heading-4 fg-general-5\">\n\t\t\t\t\t\t{{ 'n379' | translations }}\n\t\t\t\t\t</h4>\n\n\t\t\t\t\t<h4 class=\"heading-4 fg-general-5\">\n\t\t\t\t\t\t{{ vm?.total | currency: 'EUR' }}\n\t\t\t\t\t</h4>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<!-- <findqo-review-and-pay-buttons (nextTab)=\"onPay()\"></findqo-review-and-pay-buttons> -->\n","import { Component, EventEmitter, Output } from '@angular/core';\n\nimport { ViewportService } from '@core/services/viewport.service';\nimport { COUPON_PRICE } from '@feature/place-ad/place-ad.constant';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { ButtonType } from '@shared/components/button/button.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'findqo-review-and-pay-buttons',\n    templateUrl: './review-and-pay-buttons.component.html',\n    styleUrls: ['./review-and-pay-buttons.component.scss'],\n    standalone: false\n})\nexport class ReviewAndPayButtonsComponent {\n\tconstructor(private placeAdFacade: PlaceAdFacade, public viewport: ViewportService, private placeAdService: PlaceAdService) {\n\t\tthis.planPrice$ = this.placeAdFacade.adPlanPrice$;\n\t}\n\n\t@Output() nextTab = new EventEmitter();\n\n\treadonly buttonType = ButtonType;\n\tplanPrice$: Observable<number>;\n\n\tonBack(): void {\n\t\tthis.placeAdService.onBack();\n\t}\n\n\tonPay(): void {\n\t\tthis.nextTab.emit();\n\t}\n}\n","<div class=\"w-100 container-fluid position-fixed bottom-0 border-top bg-basic-1\">\n\t<div class=\"row mx-auto p-3 review-btns justify-content-between align-items-center\">\n\t\t<div class=\"col-sm-auto order-1 order-sm-0\" [ngClass]=\"!viewport?.mobile ? 'w-125px' : 'mt-14px'\">\n\t\t\t<findqo-button\n\t\t\t\tbtnClass=\"text-small-14px-regular w-100 h-100\"\n\t\t\t\tclass=\"d-block\"\n\t\t\t\t[label]=\"'n459' | translations\"\n\t\t\t\t[btnType]=\"buttonType.STROKED\"\n\t\t\t\t(clicked)=\"onBack()\"\n\t\t\t></findqo-button>\n\t\t</div>\n\n\t\t<div class=\"col-sm-auto order-0 order-sm-1\" [class.w-125px]=\"!viewport?.mobile\">\n\t\t\t<findqo-button\n\t\t\t\tbtnClass=\"text-small-14px-regular w-100 h-100\"\n\t\t\t\tclass=\"d-block\"\n\t\t\t\tlabel=\"{{ 'n319' | translations }}&nbsp; {{ planPrice$ | async | currency : 'EUR' }}\"\n\t\t\t\t[btnType]=\"buttonType.FILLED\"\n\t\t\t\t(clicked)=\"onPay()\"\n\t\t\t\ttype=\"submit\"\n\t\t\t></findqo-button>\n\t\t</div>\n\t</div>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { ReviewAndPayButtonsComponent } from './review-and-pay-buttons.component';\nimport { ButtonModule } from '@shared/components/button/button.module';\n\n@NgModule({\n\tdeclarations: [ReviewAndPayButtonsComponent],\n\timports: [SharedModule, ButtonModule],\n\texports: [ReviewAndPayButtonsComponent],\n})\nexport class ReviewAndPayButtonsModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { PlaceAdReviewComponent } from './place-ad-review.component';\nimport { ReviewAndPayButtonsModule } from '../review-and-pay-buttons/review-and-pay-buttons.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [PlaceAdReviewComponent],\n\timports: [SharedModule, MatCheckboxModule, ReviewAndPayButtonsModule, FormsModule, ReactiveFormsModule],\n\texports: [PlaceAdReviewComponent],\n})\nexport class PlaceAdReviewModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n    selector: 'findqo-progress-spinner',\n    imports: [MatProgressSpinnerModule],\n    template: `\n\t\t<div class=\"overlay\">\n\t\t\t<mat-spinner diameter=\"64\"></mat-spinner>\n\t\t</div>\n\t`,\n    styles: `\n\t\t.overlay {\n\t\t\tposition: fixed;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100vw;\n\t\t\theight: 100vh;\n\t\t\tbackground: rgba(0, 0, 0, 0.1);\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tz-index: var(--z-index-progress-spinner);\n\t\t}\n\t\t.mat-mdc-progress-spinner {\n\t\t\t--mdc-circular-progress-active-indicator-color: var(--info-3);\n\t\t}\n\t`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressSpinnerComponent {}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n@Component({\n    selector: 'findqo-place-ad-email-form',\n    imports: [MatInputModule, MatFormFieldModule, FormsModule, ReactiveFormsModule],\n    template: `\n\t\t<form [formGroup]=\"form\">\n\t\t\t<mat-label class=\"text-body-regular fg-general-4\" for=\"email\">Contact Email</mat-label>\n\t\t\t<mat-form-field class=\"mt-2\" id=\"email\" appearance=\"outline\">\n\t\t\t\t<input matInput type=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" />\n\n\t\t\t\t@if (form.get('email').invalid) {\n\t\t\t\t\t<mat-error class=\"text-caption-regular\">Email is required</mat-error>\n\t\t\t\t}\n\t\t\t</mat-form-field>\n\t\t</form>\n\t`\n})\nexport class PlaceAdEmailFormComponent {\n\t@Input() form!: FormGroup;\n}\n","import { inject, Injectable } from '@angular/core';\nimport { forkJoin, from } from 'rxjs';\nimport { catchError, filter, finalize, tap } from 'rxjs/operators';\nimport { MatStepper } from '@angular/material/stepper';\nimport { SnackService } from '@core/services/snack.service';\nimport { AuthService } from '@core/data-access/services/auth.service';\nimport { ProfileDisabledDialogComponent } from '@feature/place-ad/components/profile-disabled-dialog/profile-disabled-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MyProfileFacade } from '@feature/my-profile/my-profile.facade';\n\nexport enum PlaceAdStepType {\n\tPROPERTY_DETAILS,\n\tAMENETIES_AND_DESCRIPTION,\n\tUPLOADS,\n\tCONTACT,\n\tAD_TIERS,\n\tREVIEW,\n}\n\nexport interface PlaceAdStep {\n\ttype: PlaceAdStepType;\n\tlabel: string;\n\tcompleted: boolean;\n\tisLoading: boolean;\n\tcustomClass?: string;\n\tonNext: (matStepper: MatStepper, step: PlaceAdStep) => void;\n}\n\n@Injectable()\nexport class PlaceAdStepperService {\n\tprivate auth = inject(AuthService);\n\tprivate readonly snackService = inject(SnackService);\n\tprivate readonly dialog = inject(MatDialog);\n\tprivate userFacade = inject(MyProfileFacade);\n\n\thandleOnNext(stepper: MatStepper, step: PlaceAdStep, actions: (() => Promise<boolean>)[], onSubmitForm?: () => Promise<boolean>): void {\n\t\tstep.isLoading = true; // Start loading\n\n\t\tthis.userFacade.getProfile().subscribe({\n\t\t\tnext: (res) => {\n\t\t\t\tstep.isLoading = false;\n\t\t\t\tif (res.isDisabled === '1') {\n\t\t\t\t\tthis.dialog.open(ProfileDisabledDialogComponent, {\n\t\t\t\t\t\tpanelClass: 'profile-disabled-dialog',\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!onSubmitForm) {\n\t\t\t\t\tstep.isLoading = true;\n\t\t\t\t}\n\t\t\t\t// Execute all actions concurrently\n\t\t\t\tforkJoin(actions.map((action) => from(action())))\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\tstep.completed = false;\n\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tfinalize(() => {\n\t\t\t\t\t\t\tif (!onSubmitForm) {\n\t\t\t\t\t\t\t\tstep.isLoading = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ttap((results) => {\n\t\t\t\t\t\t\tconst hasErrors = results.includes(false);\n\n\t\t\t\t\t\t\tif (hasErrors) {\n\t\t\t\t\t\t\t\tthis.showFormErrorSnackbar();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Mark step as incomplete if any action fails\n\t\t\t\t\t\t\tstep.completed = !hasErrors;\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tfilter((results) => !results.includes(false)) // Proceed only if all actions succeed\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe(() => {\n\t\t\t\t\t\tif (onSubmitForm) {\n\t\t\t\t\t\t\tstep.isLoading = true;\n\n\t\t\t\t\t\t\tfrom(onSubmitForm()) // Execute submit form\n\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\tfinalize(() => {\n\t\t\t\t\t\t\t\t\t\tstep.isLoading = false; // Ensure loading state is reset\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.subscribe((finalResult) => {\n\t\t\t\t\t\t\t\t\tif (finalResult) {\n\t\t\t\t\t\t\t\t\t\tstep.completed = true;\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => stepper.next()); // Proceed to the next step\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstep.completed = true;\n\t\t\t\t\t\t\tsetTimeout(() => stepper.next()); // Proceed to the next step\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tstep.isLoading = false; // Stop loading on error\n\t\t\t\tthis.snackService.open({\n\t\t\t\t\tdata: { message: 'Something went wrong, please try again.' },\n\t\t\t\t\tpanelClass: 'snackbar-error',\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n\n\tshowFormErrorSnackbar(): void {\n\t\tthis.snackService.open({\n\t\t\tdata: { message: 'Please fill out all required fields.' },\n\t\t\tpanelClass: 'snackbar-error',\n\t\t});\n\t}\n}\n","import { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { AsyncPipe, CurrencyPipe, Location, NgClass, isPlatformBrowser } from '@angular/common';\nimport { ChangeDetectorRef, Component, HostListener, Inject, OnDestroy, OnInit, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatStepper, MatStepperModule } from '@angular/material/stepper';\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { PlaceAdExitDialogComponent } from '@core/components/header/components/place-ad-header/place-ad-exit-dialog/place-ad-exit-dialog.component';\nimport { APP_ROUTE } from '@core/constants';\nimport { AuthService } from '@core/data-access/services/auth.service';\nimport { PropertyWorthState } from '@core/data-access/states/property-worth.state';\nimport { AisleType, AuthType, PlaceAdPlansId, PlaceAdType, SectionType, SellerType, StorageType } from '@core/enums';\nimport { Ad, ClientUser, EditAdResponseData } from '@core/models';\nimport { StorageService } from '@core/services/storage.service';\nimport { AppEmailValidator } from '@core/validators/email.validator';\nimport { AuthDialogV2Component } from '@feature/auth/v2/auth-dialog-v2.component';\nimport { InvalidSubscriptionDialogComponent } from '@feature/place-ad/components/invalid-subscription-dialog/invalid-subscription-dialog.component';\nimport { PlaceAdAmenitiesComponent } from '@feature/place-ad/components/place-ad-amenities/place-ad-amenities.component';\nimport { PlaceAdAmenitiesModule } from '@feature/place-ad/components/place-ad-amenities/place-ad-amenities.module';\nimport { PlaceAdAuthFacade } from '@feature/place-ad/components/place-ad-contact/palce-ad-auth.facade';\nimport { PlaceAdContactComponent } from '@feature/place-ad/components/place-ad-contact/place-ad-contact.component';\nimport { PlaceAdContactModule } from '@feature/place-ad/components/place-ad-contact/place-ad-contact.module';\nimport { PlaceAdDescriptionComponent } from '@feature/place-ad/components/place-ad-description/place-ad-description.component';\nimport { PlaceAdDescriptionModule } from '@feature/place-ad/components/place-ad-description/place-ad-description.module';\nimport { PlaceAdDetailsComponent } from '@feature/place-ad/components/place-ad-details/place-ad-details.component';\nimport { PlaceAdDetailsModule } from '@feature/place-ad/components/place-ad-details/place-ad-details.module';\nimport { PlaceAdLocationComponent } from '@feature/place-ad/components/place-ad-location/place-ad-location.component';\nimport { PlaceAdLocationModule } from '@feature/place-ad/components/place-ad-location/place-ad-location.module';\nimport { PlaceAdPhotoComponent } from '@feature/place-ad/components/place-ad-photo/place-ad-photo.component';\nimport { PlaceAdPhotoModule } from '@feature/place-ad/components/place-ad-photo/place-ad-photo.module';\nimport { PlaceAdPlansComponent } from '@feature/place-ad/components/place-ad-plans/place-ad-plans.component';\nimport { PlaceAdPlansModule } from '@feature/place-ad/components/place-ad-plans/place-ad-plans.module';\nimport { PlaceAdPriceComponent } from '@feature/place-ad/components/place-ad-price/place-ad-price.component';\nimport { PlaceAdPriceModule } from '@feature/place-ad/components/place-ad-price/place-ad-price.module';\nimport { PlaceAdReviewComponent } from '@feature/place-ad/components/place-ad-review/place-ad-review.component';\nimport { PlaceAdReviewModule } from '@feature/place-ad/components/place-ad-review/place-ad-review.module';\nimport { ProfileDisabledDialogComponent } from '@feature/place-ad/components/profile-disabled-dialog/profile-disabled-dialog.component';\nimport { TOTAL_STEPS } from '@feature/place-ad/place-ad.constant';\nimport { PlaceAdFacade } from '@feature/place-ad/place-ad.facade';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { ProgressSpinnerComponent } from '@shared/components/progress-spinner/progress-spinner.component';\nimport { DestroyService } from '@shared/services/destroy.service';\nimport { Observable, catchError, filter, finalize, firstValueFrom, forkJoin, from, of, switchMap, takeUntil, tap } from 'rxjs';\nimport { PlaceAdEmailFormComponent } from './place-ad-email-form/place-ad-email-form.component';\nimport { PlaceAdStep, PlaceAdStepType, PlaceAdStepperService } from './place-ad-form.service';\n@Component({\n    selector: 'findqo-place-ad-form-page',\n    imports: [\n        AsyncPipe,\n        CurrencyPipe,\n        NgClass,\n        MatIconModule,\n        MatStepperModule,\n        MatButtonModule,\n        MatProgressSpinnerModule,\n        PlaceAdLocationModule,\n        PlaceAdPriceModule,\n        PlaceAdDetailsModule,\n        PlaceAdAmenitiesModule,\n        PlaceAdDescriptionModule,\n        PlaceAdPhotoModule,\n        PlaceAdContactModule,\n        PlaceAdPlansModule,\n        PlaceAdReviewModule,\n        ProgressSpinnerComponent,\n        PlaceAdEmailFormComponent,\n    ],\n    template: `\n\t\t@if (\n\t\t\t{\n\t\t\t\tisLoggedIn: placeAdAuthFacade.isLoggedIn$ | async,\n\t\t\t\tuser: placeAdAuthFacade.user$ | async\n\t\t\t};\n\t\t\tas vm\n\t\t) {\n\t\t\t<div class=\"bg-basic-1 position-relative\">\n\t\t\t\t<mat-stepper #stepper linear [disableRipple]=\"true\" (selectionChange)=\"onStepChange($event)\">\n\t\t\t\t\t@for (step of steps; track step) {\n\t\t\t\t\t\t<mat-step [completed]=\"step.completed\">\n\t\t\t\t\t\t\t<ng-template matStepLabel>\n\t\t\t\t\t\t\t\t{{ step.type === stepType.AMENETIES_AND_DESCRIPTION && hideAmenities ? 'Description' : step.label }}\n\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t\t<ng-template matStepContent>\n\t\t\t\t\t\t\t\t<div class=\"container\" [ngClass]=\"step.customClass\">\n\t\t\t\t\t\t\t\t\t@switch (step.type) {\n\t\t\t\t\t\t\t\t\t\t@case (stepType.PROPERTY_DETAILS) {\n\t\t\t\t\t\t\t\t\t\t\t@if (!vm.isLoggedIn) {\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3 pb-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-email-form [form]=\"form\"></findqo-place-ad-email-form>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-location></findqo-place-ad-location>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-price></findqo-place-ad-price>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-details></findqo-place-ad-details>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t@case (stepType.AMENETIES_AND_DESCRIPTION) {\n\t\t\t\t\t\t\t\t\t\t\t@if (!hideAmenities) {\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-amenities></findqo-place-ad-amenities>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-description></findqo-place-ad-description>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t@case (stepType.UPLOADS) {\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-photo></findqo-place-ad-photo>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t@case (stepType.CONTACT) {\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-contact [previousContactDetails]=\"previousContactDetails$ | async\"></findqo-place-ad-contact>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t@case (stepType.AD_TIERS) {\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-plans></findqo-place-ad-plans>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t@case (stepType.REVIEW) {\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<findqo-place-ad-review (isPaying)=\"handlePayingEvent($event)\"></findqo-place-ad-review>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t@if (step.isLoading) {\n\t\t\t\t\t\t\t\t\t<findqo-progress-spinner></findqo-progress-spinner>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t</mat-step>\n\t\t\t\t\t}\n\n\t\t\t\t\t<ng-template matStepperIcon=\"edit\">\n\t\t\t\t\t\t<mat-icon>check</mat-icon>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</mat-stepper>\n\t\t\t\t<div class=\"position-fixed bottom-0 start-0 w-100 border-top bg-basic-1 p-3 z-1\">\n\t\t\t\t\t<div class=\"action-buttons-container d-flex justify-content-between align-items-center gap-3 m-auto px-3\">\n\t\t\t\t\t\t<button class=\"text-body-regular\" mat-stroked-button color=\"primary\" (click)=\"onPreviousStep()\">Back</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"text-body-regular position-relative\"\n\t\t\t\t\t\t\tmat-flat-button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t[disabled]=\"!this.placeAdDetailsComponent?.controls?.length\"\n\t\t\t\t\t\t\t(click)=\"handleNextStepButton(vm.isLoggedIn, vm.user)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\tvm.isLoggedIn\n\t\t\t\t\t\t\t\t\t? stepper?.selectedIndex === stepType.REVIEW\n\t\t\t\t\t\t\t\t\t\t? 'Pay ' + (planPrice$ | async | currency: 'EUR')\n\t\t\t\t\t\t\t\t\t\t: 'Save & Next'\n\t\t\t\t\t\t\t\t\t: 'Login to Continue'\n\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\t@if (!this.placeAdDetailsComponent?.controls?.length) {\n\t\t\t\t\t\t\t\t<mat-spinner class=\"position-absolute top-50 start-50 translate-middle\" diameter=\"16\"></mat-spinner>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t}\n\t`,\n    styles: `\n\t\tmat-stepper {\n\t\t\tmargin-bottom: 69px;\n\t\t\t.container {\n\t\t\t\tmax-width: 600px;\n\t\t\t\tpadding: 0;\n\t\t\t\t&--uploads {\n\t\t\t\t\tmax-width: 1232px;\n\t\t\t\t}\n\t\t\t\t&--ad-tiers,\n\t\t\t\t&--review {\n\t\t\t\t\tmax-width: fit-content;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.action-buttons-container {\n\t\t\tmax-width: 600px;\n\t\t\tbutton {\n\t\t\t\tmin-width: 125px;\n\t\t\t}\n\t\t}\n\t`,\n    providers: [PlaceAdStepperService, PlaceAdAuthFacade]\n})\nexport class PlaceAdFormPage implements OnInit, OnDestroy {\n\tconstructor(\n\t\tprivate placeAdService: PlaceAdService,\n\t\tprivate placeAdFacade: PlaceAdFacade,\n\t\tprivate destroy: DestroyService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate matDialog: MatDialog,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tprivate storageService: StorageService,\n\t\tprivate router: Router,\n\t\tprivate location: Location,\n\t\tprivate stepperService: PlaceAdStepperService,\n\t\tprivate fb: FormBuilder,\n\t\tpublic placeAdAuthFacade: PlaceAdAuthFacade,\n\t\tprivate authService: AuthService,\n\t\tprivate propertyWorthState: PropertyWorthState,\n\t\t@Inject(PLATFORM_ID) private platformId,\n\t) {}\n\n\t@HostListener('window:beforeunload', ['$event'])\n\thandleBeforeUnload(event: BeforeUnloadEvent): void {\n\t\tif (!this.isPaying) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.returnValue = true;\n\t\t}\n\t}\n\n\t@ViewChild(PlaceAdLocationComponent) placeAdLocationComponent!: PlaceAdLocationComponent;\n\t@ViewChild(PlaceAdPriceComponent) placeAdPriceComponent!: PlaceAdPriceComponent;\n\t@ViewChild(PlaceAdDetailsComponent) placeAdDetailsComponent!: PlaceAdDetailsComponent;\n\t@ViewChild(PlaceAdAmenitiesComponent) placeAdAmenitiesComponent!: PlaceAdAmenitiesComponent;\n\t@ViewChild(PlaceAdDescriptionComponent) placeAdDescriptionComponent!: PlaceAdDescriptionComponent;\n\t@ViewChild(PlaceAdPhotoComponent) placeAdPhotoComponent!: PlaceAdPhotoComponent;\n\t@ViewChild(PlaceAdContactComponent) placeAdContactComponent!: PlaceAdContactComponent;\n\t@ViewChild(PlaceAdPlansComponent) placeAdPlansComponent!: PlaceAdPlansComponent;\n\t@ViewChild(PlaceAdReviewComponent) placeAdReviewComponent!: PlaceAdReviewComponent;\n\t@ViewChild('stepper') stepper!: MatStepper;\n\n\t// TODO: Use this form as a parent form for Place Ad forms and share with the child components.\n\treadonly form = this.fb.group({\n\t\temail: ['', [Validators.required, AppEmailValidator.validateEmailPattern()]],\n\t});\n\treadonly stepType = PlaceAdStepType;\n\treadonly steps: PlaceAdStep[] = [\n\t\t{\n\t\t\ttype: PlaceAdStepType.PROPERTY_DETAILS,\n\t\t\tlabel: 'Property Details',\n\t\t\tcompleted: false,\n\t\t\tisLoading: false,\n\t\t\tonNext: (stepper: MatStepper, step: PlaceAdStep) => {\n\t\t\t\tthis.stepperService.handleOnNext(\n\t\t\t\t\tstepper,\n\t\t\t\t\tstep,\n\t\t\t\t\t[() => this.placeAdLocationComponent.onNext(), () => this.placeAdPriceComponent.onNext(), () => this.placeAdDetailsComponent.onNext()],\n\t\t\t\t\t() => this.placeAdDetailsComponent.onSubmitForm(),\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: PlaceAdStepType.AMENETIES_AND_DESCRIPTION,\n\t\t\tlabel: 'Amenities & Description',\n\t\t\tcompleted: false,\n\t\t\tisLoading: false,\n\t\t\tonNext: (stepper: MatStepper, step: PlaceAdStep) => {\n\t\t\t\tthis.stepperService.handleOnNext(stepper, step, [\n\t\t\t\t\t...(this.placeAdAmenitiesComponent?.onNext() ? [() => this.placeAdAmenitiesComponent.onNext()] : []),\n\t\t\t\t\t() => this.placeAdDescriptionComponent.onNext(),\n\t\t\t\t]);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: PlaceAdStepType.UPLOADS,\n\t\t\tlabel: 'Uploads',\n\t\t\tcompleted: false,\n\t\t\tisLoading: false,\n\t\t\tcustomClass: 'container--uploads',\n\t\t\tonNext: (stepper: MatStepper, step: PlaceAdStep) => {\n\t\t\t\tthis.stepperService.handleOnNext(stepper, step, [() => this.placeAdPhotoComponent.onNext()]);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: PlaceAdStepType.CONTACT,\n\t\t\tlabel: 'Contacts',\n\t\t\tisLoading: false,\n\t\t\tcompleted: false,\n\t\t\tonNext: (stepper: MatStepper, step: PlaceAdStep) => {\n\t\t\t\tthis.stepperService.handleOnNext(stepper, step, [() => this.placeAdContactComponent.onNext()]);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: PlaceAdStepType.AD_TIERS,\n\t\t\tlabel: 'Ad Tiers',\n\t\t\tcustomClass: 'container--ad-tiers',\n\t\t\tisLoading: false,\n\t\t\tcompleted: false,\n\t\t\tonNext: (stepper: MatStepper, step: PlaceAdStep) => {\n\t\t\t\tthis.stepperService.handleOnNext(stepper, step, [() => this.placeAdPlansComponent.onNext()]);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: PlaceAdStepType.REVIEW,\n\t\t\tlabel: 'Review',\n\t\t\tcustomClass: 'container--review',\n\t\t\tisLoading: false,\n\t\t\tcompleted: false,\n\t\t\tonNext: (stepper: MatStepper, step: PlaceAdStep) => {\n\t\t\t\tthis.stepperService.handleOnNext(stepper, step, [() => this.placeAdReviewComponent.onPay()]);\n\t\t\t},\n\t\t},\n\t];\n\tadData$: Observable<Ad>;\n\teditAdDetails: EditAdResponseData;\n\tstepEnableStatus = 0;\n\tisEditMode = false;\n\thideAmenities = false;\n\ttotalTabs$ = this.placeAdService.totalTabs$;\n\tishareResidential = false; //to check selected aisle is share residential\n\tsectionReference: string;\n\treadonly sectionType = SectionType;\n\tpreviousContactDetails$ = this.placeAdFacade.getContactDetails$();\n\tplanPrice$ = this.placeAdFacade.adPlanPrice$;\n\tisPaying = false;\n\n\thandlePayingEvent(isPaying: boolean) {\n\t\tthis.isPaying = isPaying;\n\t}\n\n\tonStepChange(event: StepperSelectionEvent): void {\n\t\twindow.scrollTo({ top: 0, behavior: 'smooth' }); // Scroll to top nicely\n\t\tconst currentStep = this.steps.find((step) => step.type === event.selectedIndex);\n\t\tif (currentStep) {\n\t\t\tswitch (currentStep.type) {\n\t\t\t\tcase PlaceAdStepType.CONTACT:\n\t\t\t\t\tif (this.placeAdFacade.getIsAdUpdated() || this.placeAdFacade.getAdId()) {\n\t\t\t\t\t\tthis.placeAdFacade.fetchLatestAdData$().subscribe((adData) => {\n\t\t\t\t\t\t\tif (adData) {\n\t\t\t\t\t\t\t\tthis.placeAdFacade.setAdData(adData);\n\t\t\t\t\t\t\t\tthis.placeAdFacade.setIsAdUpdated(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\thandleNextStepButton(isLoggedIn: boolean, user: ClientUser): void {\n\t\twindow.scrollTo({ top: 0, behavior: 'smooth' }); // Scroll to top nicely\n\t\tconst SELLER_TYPE_ID = this.placeAdFacade.getSellerTypeId();\n\t\tconst TOTAL_TABS = this.placeAdService.getTotalTabs();\n\t\tconst IS_SUBSCRIPTION_ACTIVE = this.placeAdPlansComponent?.subscriptionInfo?.status !== this.placeAdPlansComponent?.subscriptionStatus.EXPIRED;\n\t\tconst currentStep = this.steps.find((step) => step.type === this.stepper.selectedIndex);\n\t\tif (!IS_SUBSCRIPTION_ACTIVE && SELLER_TYPE_ID === this.placeAdPlansComponent?.sellerType?.BUSINESS && TOTAL_TABS - 7 === 1) {\n\t\t\tthis.matDialog.open(InvalidSubscriptionDialogComponent, {\n\t\t\t\tmaxWidth: '375px',\n\t\t\t\twidth: '95%',\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tswitch (currentStep.type) {\n\t\t\tcase PlaceAdStepType.PROPERTY_DETAILS:\n\t\t\t\tif (!isLoggedIn) {\n\t\t\t\t\tthis.onLogin().subscribe(() => {\n\t\t\t\t\t\tthis.openVerifyOtDialog(currentStep);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcurrentStep.onNext(this.stepper, currentStep);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase PlaceAdStepType.CONTACT:\n\t\t\t\tif (!user?.name) {\n\t\t\t\t\tthis.onSubmitContactForm(currentStep);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentStep.onNext(this.stepper, currentStep);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcurrentStep.onNext(this.stepper, currentStep);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tonPreviousStep(): void {\n\t\tconst SELLER_TYPE_ID = this.placeAdFacade.getSellerTypeId();\n\t\tconst TOTAL_TABS = this.placeAdService.getTotalTabs();\n\t\tconst IS_SUBSCRIPTION_ACTIVE = this.placeAdPlansComponent?.subscriptionInfo?.status !== this.placeAdPlansComponent?.subscriptionStatus?.EXPIRED;\n\n\t\tif (this.stepper.selectedIndex === PlaceAdStepType.PROPERTY_DETAILS) {\n\t\t\tthis.location.back();\n\t\t} else if (!IS_SUBSCRIPTION_ACTIVE && SELLER_TYPE_ID === this.placeAdPlansComponent?.sellerType.BUSINESS && TOTAL_TABS - 7 === 1) {\n\t\t\tthis.matDialog.open(InvalidSubscriptionDialogComponent, {\n\t\t\t\tmaxWidth: '375px',\n\t\t\t\twidth: '95%',\n\t\t\t});\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.stepper.previous();\n\t\t}\n\t}\n\n\tonSelectedIndexChange(event): void {\n\t\tthis.placeAdService.setTabIndex(event);\n\t}\n\n\tgetStepStatus(): void {\n\t\tthis.placeAdService.stepsEnableStatus$.pipe(takeUntil(this.destroy)).subscribe((status) => {\n\t\t\tthis.stepEnableStatus = status;\n\t\t});\n\t}\n\n\t//to fetch filter data and  also edit data if its in edit mode\n\tfetchData(): void {\n\t\tconst EDIT_DETAILS: EditAdResponseData = this.route.snapshot.data?.['editAdDetails']?.editData;\n\t\tconst SECTION = this.route.snapshot.params?.['section'];\n\t\tconst AISLE = this.route.snapshot.params?.['aisle'];\n\n\t\tif (EDIT_DETAILS) {\n\t\t\tthis.placeAdFacade.setEditAdData(EDIT_DETAILS);\n\t\t\tthis.placeAdFacade.setAdId(EDIT_DETAILS?.id);\n\t\t\tthis.isEditMode = true;\n\t\t\tthis.placeAdService.setIsNextButtonDisabled(false);\n\t\t\tthis.placeAdFacade.loadUser(); // to get user business account if any\n\t\t\tthis.storageService.removeItem('agentId');\n\t\t} else {\n\t\t\tthis.isEditMode = false;\n\t\t}\n\n\t\tthis.placeAdFacade.getAdDetails(EDIT_DETAILS, SECTION, AISLE); // to fetch filter values of place ad fields and fetch edit ad data if any\n\t}\n\n\tasync canDeactivate(_route?: ActivatedRouteSnapshot): Promise<boolean> {\n\t\treturn firstValueFrom(this.placeAdFacade.isAllowNavigation$).then((allow) => {\n\t\t\tif (allow || +this.authService.user()?.isDisabled) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn firstValueFrom(\n\t\t\t\t\tthis.matDialog\n\t\t\t\t\t\t.open(PlaceAdExitDialogComponent, { height: 'auto', width: '375px', disableClose: true, panelClass: 'place-ad-exit-dialog' })\n\t\t\t\t\t\t.afterClosed(),\n\t\t\t\t).then((canNavigate) => {\n\t\t\t\t\t// If user not want to exit, keep the browseer's location history tree\n\t\t\t\t\tif (!canNavigate) {\n\t\t\t\t\t\tconst currentUrlTree = this.router.createUrlTree([], _route);\n\t\t\t\t\t\tconst currentUrl = currentUrlTree.toString();\n\t\t\t\t\t\tthis.location.go(currentUrl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn canNavigate;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tdynamicallyUpdateTabs(): void {\n\t\tthis.placeAdFacade.adStand$.pipe(takeUntil(this.destroy)).subscribe((standId) => {\n\t\t\tif (standId) {\n\t\t\t\tthis.placeAdService.setTotalTabs(standId === '5' ? 7 : TOTAL_STEPS(this.placeAdFacade.getCurrentSection().reference));\n\t\t\t\tthis.hideAmenities = standId === '5';\n\n\t\t\t\tif (this.hideAmenities) {\n\t\t\t\t\tthis.placeAdService.deleteIndividualControl(PlaceAdType.PROPERTY_EXTRAS);\n\t\t\t\t\tthis.cd.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfetchPreviousContactDetails(): void {\n\t\tif (this.sectionReference === SectionType.PROPERTIES_FOR_SALE && this.authService?.user()) {\n\t\t\tthis.placeAdFacade.fetchPreviousContactDetails();\n\t\t}\n\t}\n\n\tprivate onLogin(): Observable<unknown> {\n\t\tthis.steps[PlaceAdStepType.PROPERTY_DETAILS].isLoading = true;\n\t\tthis.form.markAllAsTouched();\n\n\t\treturn forkJoin([\n\t\t\tfrom(this.placeAdLocationComponent.onNext()),\n\t\t\tthis.placeAdPriceComponent.onNext(),\n\t\t\tthis.placeAdDetailsComponent.onNext(),\n\t\t\tof(this.form.valid),\n\t\t]).pipe(\n\t\t\ttap((results) => {\n\t\t\t\tif (results.includes(false)) {\n\t\t\t\t\tthis.stepperService.showFormErrorSnackbar();\n\t\t\t\t\tthis.steps[PlaceAdStepType.PROPERTY_DETAILS].isLoading = false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\tfilter((results) => !results.includes(false)), // Proceed only if all validations pass\n\t\t\tswitchMap(() => this.placeAdAuthFacade.requestEmailOtp(this.form.get('email').value)), // Request OTP\n\t\t\tfinalize(() => (this.steps[PlaceAdStepType.PROPERTY_DETAILS].isLoading = false)),\n\t\t);\n\t}\n\n\tprivate openVerifyOtDialog(currentStep: PlaceAdStep): void {\n\t\tthis.matDialog\n\t\t\t.open(AuthDialogV2Component, {\n\t\t\t\tdisableClose: true,\n\t\t\t\tpanelClass: 'auth-dialog',\n\t\t\t\tdata: {\n\t\t\t\t\tauthType: AuthType.GUEST_VERIFY_EMAIL,\n\t\t\t\t\temail: this.form.get('email').value,\n\t\t\t\t\tdisableBackButton: true,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.afterClosed()\n\t\t\t.subscribe((dialogResult) => {\n\t\t\t\tif (dialogResult?.isClosed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst user = dialogResult as ClientUser;\n\t\t\t\tif (+user?.isDisabled) {\n\t\t\t\t\tthis.handleDisabledUser();\n\t\t\t\t} else {\n\t\t\t\t\tcurrentStep.onNext(this.stepper, currentStep); // Proceed to the next step\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate handleDisabledUser(): void {\n\t\tthis.matDialog\n\t\t\t.open(ProfileDisabledDialogComponent, { panelClass: 'profile-disabled-dialog' })\n\t\t\t.afterClosed()\n\t\t\t.subscribe(() => this.router.navigateByUrl(APP_ROUTE.home));\n\t}\n\n\tprivate onSubmitContactForm(currentStep: PlaceAdStep): void {\n\t\tconst form = this.placeAdContactComponent.form;\n\t\tform.markAllAsTouched();\n\n\t\tif (!form.valid) {\n\t\t\tthis.stepperService.showFormErrorSnackbar();\n\t\t\treturn;\n\t\t}\n\n\t\tconst contactStep = this.steps[PlaceAdStepType.CONTACT];\n\t\tcontactStep.isLoading = true;\n\n\t\tthis.placeAdAuthFacade\n\t\t\t.updateUserName(form.get('name').value)\n\t\t\t.pipe(\n\t\t\t\tcatchError((error) => {\n\t\t\t\t\tcontactStep.isLoading = false;\n\t\t\t\t\tthrow error;\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.subscribe(() => currentStep.onNext(this.stepper, currentStep));\n\t}\n\tmarkAllStepsAsCompleted(): void {\n\t\tfor (let i = 0; i < this.steps.length - 1; i++) {\n\t\t\tthis.steps[i].completed = true; // Mark all steps except the last one as completed\n\t\t}\n\t\tthis.cd.detectChanges(); // Force UI update\n\t\tthis.stepper.selectedIndex = 4;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.propertyWorthState.setValuationInfo(null);\n\t\tthis.placeAdFacade.resetPlaceAd();\n\t}\n\n\tngOnInit(): void {\n\t\t// Handles specific ad status cases like expired or payment-pending\n\t\tthis.handleAdStatus();\n\n\t\t// Initializes section and aisle if ad is new and no aisle is selected\n\t\tthis.handleNewAdWithoutAisle();\n\n\t\t// Handles return from a payment session and sets plan tier, price, and UI state if editing an ad with a selected payment plan\n\t\tthis.handleSessionId();\n\n\t\t// Common setup tasks\n\t\tthis.getStepStatus();\n\t\tthis.fetchData();\n\t\tthis.dynamicallyUpdateTabs();\n\n\t\t// Set flags used in UI logic\n\t\tthis.ishareResidential = this.placeAdFacade.getCurrentAisle().reference === AisleType.SHARE_RESIDENTIAL;\n\t\tthis.sectionReference = this.placeAdFacade.getCurrentSection().reference;\n\n\t\t// Restore previously entered contact info if any\n\t\tthis.fetchPreviousContactDetails();\n\t}\n\n\tprivate handleAdStatus(): void {\n\t\tconst adStatus = this.route.snapshot.data?.['editAdDetails']?.editData?.adStatus?.status;\n\t\tconst sessionId = this.route.snapshot.queryParams?.['sessionId'];\n\n\t\t// If the ad is expired or awaiting payment and sessionId is not present\n\t\tif (adStatus === 'expired' || (adStatus === 'payment-pending' && !sessionId)) {\n\t\t\tthis.fetchData();\n\t\t\tthis.markAllStepsAsCompleted();\n\t\t\tthis.adData$ = this.placeAdFacade.getAdData$();\n\t\t}\n\t\tconst propertyValuationData = this.propertyWorthState.getValuationInfo();\n\n\t\tif (propertyValuationData) {\n\t\t\tthis.form.patchValue({\n\t\t\t\temail: propertyValuationData?.email,\n\t\t\t});\n\n\t\t\t// Prefill email if available from valuation data\n\t\t\tthis.form.patchValue({ email: propertyValuationData['email'] });\n\n\t\t\t// Set section and aisle based on query data\n\t\t\tconst SECTION = this.placeAdFacade.getSection(propertyValuationData['section']);\n\n\t\t\tthis.placeAdFacade.setSection(SECTION);\n\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.SECTION, SECTION?.id);\n\n\t\t\t// Default to INDIVIDUAL seller type for non-business users\n\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.SELLER_TYPE, SellerType.INDIVIDUAL);\n\t\t\tthis.placeAdService.setCurrentSellerId(SellerType.INDIVIDUAL);\n\n\t\t\tconst AISLE = this.placeAdFacade.getAisle(propertyValuationData.section, propertyValuationData.aisle);\n\t\t\tthis.placeAdFacade.setAisle(AISLE);\n\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType?.AISLE, AISLE?.id);\n\t\t\tthis.placeAdService.setTotalTabs(TOTAL_STEPS(propertyValuationData.section));\n\t\t}\n\t}\n\n\tprivate handleNewAdWithoutAisle(): void {\n\t\tconst hasNoAisle = !this.placeAdFacade.getCurrentAisle();\n\t\tconst isNotEdit = !this.route.snapshot.data?.['editAdDetails']?.editData;\n\n\t\tif (hasNoAisle && isNotEdit) {\n\t\t\tconst sectionPath = this.route.snapshot.url[1]?.path;\n\t\t\tconst aislePath = this.route.snapshot.url[2]?.path;\n\n\t\t\tconst section = this.placeAdFacade.getSection(sectionPath);\n\t\t\tconst aisle = this.placeAdFacade.getAisle(sectionPath, aislePath);\n\n\t\t\t// Initialize section and aisle from route URL\n\t\t\tthis.placeAdFacade.setSection(section);\n\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.SECTION, section?.id);\n\n\t\t\t// Load previously selected seller type from session storage, if available\n\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\tconst sellerType = sessionStorage.getItem(StorageType.CURRENT_SELLER_TYPE);\n\t\t\t\tif (sellerType) {\n\t\t\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.SELLER_TYPE, sellerType);\n\t\t\t\t\tthis.placeAdService.setCurrentSellerId(sellerType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.placeAdFacade.setAisle(aisle);\n\t\t\tthis.placeAdService.addIndividualControlData(PlaceAdType.AISLE, aisle?.id);\n\t\t\tthis.placeAdService.setTotalTabs(TOTAL_STEPS(sectionPath));\n\t\t}\n\t}\n\n\tprivate handleSessionId(): void {\n\t\tconst sessionId = this.route.snapshot.queryParams?.['sessionId'];\n\n\t\t// Handles state restoration after a successful session (e.g. payment)\n\t\tif (sessionId) {\n\t\t\tthis.fetchData();\n\t\t\tthis.steps.forEach((step) => (step.completed = true));\n\n\t\t\tthis.cd.detectChanges(); // Refresh UI state\n\n\t\t\tthis.stepper.selectedIndex = 5; // Move user to the confirmation/review step\n\n\t\t\tthis.cd.detectChanges();\n\n\t\t\tthis.adData$ = this.placeAdFacade.getAdData$();\n\t\t}\n\t\tconst tier = this.route.snapshot.data?.['editAdDetails']?.editData?.adPayment?.planTier;\n\n\t\tif (tier) {\n\t\t\tconst totalTabs = this.placeAdService.getTotalTabs();\n\t\t\tthis.placeAdService.setTabIndex(totalTabs);\n\t\t\tthis.placeAdService.setStepsEnableStatus(totalTabs);\n\n\t\t\tconst isFeatured = tier.reference === 'featured-ad';\n\t\t\tthis.placeAdFacade.setIsFeaturedAd(isFeatured);\n\n\t\t\t// Set plan ID based on tier type\n\t\t\tconst planId = isFeatured ? PlaceAdPlansId.FEATURED_AD : PlaceAdPlansId.STANDARD_AD;\n\t\t\tthis.placeAdFacade.setSelectedPlanTierId(planId);\n\n\t\t\tthis.placeAdFacade.loadPlanTiers().then((planTiers) => {\n\t\t\t\tconst planDetails = planTiers.individualAccount;\n\t\t\t\tconst price = isFeatured ? planDetails?.[1]?.features[0]?.price?.price : planDetails?.[0]?.features[0]?.price?.price;\n\n\t\t\t\tthis.placeAdFacade.setAdPlanPrice(+price);\n\t\t\t});\n\t\t}\n\t}\n}\n"],"mappings":"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","names":["_c0","_c1","_c0","importantProperties","from","item","AutoScrollVerticalDirection","AutoScrollHorizontalDirection","isTouchEvent","_c2","_c1","_c0","_c1","event","_c0","_c1","_c2","_c0","_c0","BEDROOM_ARRAY","_c2","_c1","_c3","_c0","PlaceAdStepType","_c1"],"x_google_ignoreList":[0,1,43]}