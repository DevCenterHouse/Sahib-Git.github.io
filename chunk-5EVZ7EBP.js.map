{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/app/core/services/structured-data.service.ts"],
  "sourcesContent": ["import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { StructureDataId } from '@core/enums';\nimport { Ad, Seo } from '@core/models';\n\ninterface Offer {\n\t'@context': string;\n\t'@type': string;\n\tavailability: string;\n\tpriceCurrency: string;\n\tseller: {\n\t\t'@type': string;\n\t\tname: string;\n\t};\n\tprice?: string;\n}\n\ninterface RealEstateListing {\n\t'@context': string;\n\t'@type': string;\n\tname: string;\n\turl: string;\n\tmainEntityOfPage: string;\n\timage: string[];\n\tdescription: string;\n\toffers: Offer;\n\tadditionalProperty: object[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class StructuredDataService {\n\tprivate renderer: Renderer2;\n\n\tconstructor(\n\t\t@Inject(DOCUMENT) private document: Document,\n\t\tprivate readonly rendererFactory: RendererFactory2\n\t) {\n\t\tthis.renderer = this.rendererFactory.createRenderer(null, null);\n\t}\n\n\t/**\n\t * Generates structured data for real estate listings and adds it to the document head.\n\t * @param ads - Array of ad objects containing the property details.\n\t * @param mainEntityOfPage - The main entity of the page (e.g., the page URL).\n\t */\n\tgenerateRealEstateList(ads: Ad[], seo: Seo, mainEntityOfPage: string): void {\n\t\tconst existingScriptElement = this.document.getElementById(StructureDataId.PROPERTY_LISTING);\n\n\t\t// Remove the existing script element if it exists\n\t\tif (existingScriptElement) {\n\t\t\tthis.renderer.removeChild(this.document.head, existingScriptElement);\n\t\t}\n\n\t\t// Create the structured data JSON\n\t\tconst json = this.createSchemaJson(ads, seo, mainEntityOfPage);\n\t\tconst scriptContent = JSON.stringify(json);\n\n\t\t// Create a new script element and set its properties\n\t\tconst scriptElement = this.renderer.createElement('script');\n\t\tthis.renderer.setAttribute(scriptElement, 'type', 'application/ld+json');\n\t\tthis.renderer.setAttribute(scriptElement, 'id', StructureDataId.PROPERTY_LISTING);\n\t\tconst text = this.renderer.createText(scriptContent);\n\t\tthis.renderer.appendChild(scriptElement, text);\n\n\t\t// Append the new script element to the document head\n\t\tthis.renderer.appendChild(this.document.head, scriptElement);\n\t}\n\n\tgenerateWebsite(section: 'rent' | 'share' | 'sale'): void {\n\t\tconst existingScriptElement = this.document.getElementById(StructureDataId.FINDQO_WEBSITE);\n\n\t\t// Remove the existing script element if it exists\n\t\tif (existingScriptElement) {\n\t\t\tthis.renderer.removeChild(this.document.head, existingScriptElement);\n\t\t}\n\n\t\tconst alternateName =\n\t\t\tsection === 'rent'\n\t\t\t\t? 'Discover Properties for Rent in Ireland – Apartments, Houses & More'\n\t\t\t\t: section === 'sale'\n\t\t\t\t\t? 'Affordable Homes and Properties for Sale – Search Listings Now'\n\t\t\t\t\t: 'Shared Accommodation – Rooms and Flats for Sharing in Ireland';\n\n\t\t// Create the structured data JSON\n\t\tconst json = {\n\t\t\t'@context': 'http://schema.org',\n\t\t\t'@type': 'Website',\n\t\t\tname: 'FindQo.ie',\n\t\t\talternateName: alternateName,\n\t\t\turl: 'https://findqo.ie',\n\t\t};\n\t\tconst scriptContent = JSON.stringify(json);\n\n\t\t// Create a new script element and set its properties\n\t\tconst scriptElement = this.renderer.createElement('script');\n\t\tthis.renderer.setAttribute(scriptElement, 'type', 'application/ld+json');\n\t\tthis.renderer.setAttribute(scriptElement, 'id', StructureDataId.FINDQO_WEBSITE);\n\t\tconst text = this.renderer.createText(scriptContent);\n\t\tthis.renderer.appendChild(scriptElement, text);\n\n\t\t// Append the new script element to the document head\n\t\tthis.renderer.appendChild(this.document.head, scriptElement);\n\t}\n\n\t/**\n\t * Removes the structured data script element from the document head.\n\t */\n\tdestroyScript(): void {\n\t\tconst scriptElements = this.document.querySelectorAll('script[type=\"application/ld+json\"]');\n\t\tscriptElements.forEach((script) => {\n\t\t\tthis.renderer.removeChild(this.document.head, script);\n\t\t});\n\t}\n\n\t/**\n\t * Creates a JSON-LD structured data object for the given ads.\n\t * @param ads - Array of ad objects.\n\t * @param mainEntityOfPage - The main entity of the page (e.g., the page URL).\n\t * @returns A JSON object representing the structured data.\n\t */\n\tprivate createSchemaJson(ads: Ad[], seo: Seo, mainEntityOfPage: string): object {\n\t\treturn {\n\t\t\t'@context': 'https://schema.org',\n\t\t\t'@type': 'WebPage',\n\t\t\tname: seo.title,\n\t\t\tdescription: seo.description,\n\t\t\t'@graph': [this.createBreadcrumbListSchema(seo.title, mainEntityOfPage)],\n\t\t};\n\t}\n\n\t/**\n\t * Creates a structured data object for a single ad.\n\t * @param ad - An ad object containing property details.\n\t * @param mainEntityOfPage - The main entity of the page (e.g., the page URL).\n\t * @returns A structured data object for the ad.\n\t */\n\tcreateProductSchema(ad: Ad, mainEntityOfPage: string) {\n\t\tconst { title, adlink, description, price, images, seller, bedroomCount, bathroomCount, propertySize, ber } = ad;\n\n\t\tconst additionalProperties = [\n\t\t\tbedroomCount && {\n\t\t\t\t'@type': 'PropertyValue',\n\t\t\t\tname: 'Number of Bedrooms',\n\t\t\t\tvalue: bedroomCount,\n\t\t\t},\n\t\t\tbathroomCount && {\n\t\t\t\t'@type': 'PropertyValue',\n\t\t\t\tname: 'Number of Bathrooms',\n\t\t\t\tvalue: bathroomCount,\n\t\t\t},\n\t\t\tpropertySize && {\n\t\t\t\t'@type': 'QuantitativeValue',\n\t\t\t\tname: 'Size',\n\t\t\t\tvalue: propertySize,\n\t\t\t\tunitCode: 'MTR',\n\t\t\t},\n\t\t\tber && {\n\t\t\t\t'@type': 'PropertyValue',\n\t\t\t\tname: 'Building Energy Rating (BER)',\n\t\t\t\tvalue: ber,\n\t\t\t},\n\t\t].filter(Boolean); // Remove any falsy values\n\n\t\tconst offers: Offer = {\n\t\t\t'@context': 'https://schema.org',\n\t\t\t'@type': 'Offer',\n\t\t\tavailability: 'https://schema.org/InStock',\n\t\t\tpriceCurrency: 'EUR',\n\t\t\tprice: price.minValue,\n\t\t\tseller: {\n\t\t\t\t'@type': 'Organization',\n\t\t\t\tname: seller?.name,\n\t\t\t},\n\t\t};\n\n\t\tconst existingScriptElement = this.document.getElementById(StructureDataId.PROPERTY_DETAIL);\n\n\t\t// Remove the existing script element if it exists\n\t\tif (existingScriptElement) {\n\t\t\tthis.renderer.removeChild(this.document.head, existingScriptElement);\n\t\t}\n\n\t\t// Create the structured data JSON\n\t\tconst json = {\n\t\t\t'@context': 'https://schema.org',\n\t\t\t'@type': 'Product',\n\t\t\tname: title,\n\t\t\t// alternatName: section === 'properties-for-rent' ? 'Properties for Rent in Ireland' : 'Properties for Sale in Ireland',\n\t\t\turl: adlink,\n\t\t\tmainEntityOfPage: `${mainEntityOfPage}`,\n\t\t\timage: images.slice(0, 4).map((image) => image.url),\n\t\t\tdescription: description,\n\t\t\toffers,\n\t\t\tadditionalProperty: additionalProperties,\n\t\t};\n\t\tconst scriptContent = JSON.stringify(json);\n\n\t\t// Create a new script element and set its properties\n\t\tconst scriptElement = this.renderer.createElement('script');\n\t\tthis.renderer.setAttribute(scriptElement, 'type', 'application/ld+json');\n\t\tthis.renderer.setAttribute(scriptElement, 'id', StructureDataId.PROPERTY_DETAIL);\n\t\tconst text = this.renderer.createText(scriptContent);\n\t\tthis.renderer.appendChild(scriptElement, text);\n\n\t\t// Append the new script element to the document head\n\t\tthis.renderer.appendChild(this.document.head, scriptElement);\n\t}\n\n\t// TODO: When the Ad list breadcrumb is improved, we can add more items in the list.\n\tprivate createBreadcrumbListSchema(name: string, mainEntityOfPage: string) {\n\t\treturn {\n\t\t\t'@context': 'https://schema.org',\n\t\t\t'@type': 'BreadcrumbList',\n\t\t\titemListElement: [\n\t\t\t\t{\n\t\t\t\t\t'@type': 'ListItem',\n\t\t\t\t\tposition: 1,\n\t\t\t\t\tname: 'Home',\n\t\t\t\t\titem: 'https://findqo.ie/',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'@type': 'ListItem',\n\t\t\t\t\tposition: 2,\n\t\t\t\t\tname,\n\t\t\t\t\titem: `https://findqo.ie${mainEntityOfPage}`,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
