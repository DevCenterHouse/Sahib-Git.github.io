{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/assets/scss/utils/_mixins.scss", "apps/findqo-ireland/src/app/feature/my-profile/v2/components/business-account-v2/business-account-v2.component.scss", "node_modules/bootstrap/scss/mixins/_breakpoints.scss"],
  "sourcesContent": ["@import 'bootstrap/scss/functions', 'bootstrap/scss/variables', 'bootstrap/scss/mixins';\n\n// NOTE: The breakpoints should be same the as breakpoint observer in APP.INITIALIZER\n// Breakpoints are same with the Bootstrap v5.0.\n// @links https://getbootstrap.com/docs/5.0/layout/breakpoints/\n\n/* BOOTSTRAP BREAKPOINT MIXINS */\n// Min-width\n// @include media-breakpoint-up(sm) { ... }\n// @include media-breakpoint-up(md) { ... }\n// @include media-breakpoint-up(lg) { ... }\n// @include media-breakpoint-up(xl) { ... }\n// @include media-breakpoint-up(xxl) { ... }\n\n// Single breakpoint\n// @include media-breakpoint-only(xs) { ... }\n// @include media-breakpoint-only(sm) { ... }\n// @include media-breakpoint-only(md) { ... }\n// @include media-breakpoint-only(lg) { ... }\n// @include media-breakpoint-only(xl) { ... }\n// @include media-breakpoint-only(xxl) { ... }\n\n// No media query necessary for xs breakpoint as it's effectively `@media (max-width: 0) { ... }`\n// @include media-breakpoint-down(sm) { ... }\n// @include media-breakpoint-down(md) { ... }\n// @include media-breakpoint-down(lg) { ... }\n// @include media-breakpoint-down(xl) { ... }\n// @include media-breakpoint-down(xxl) { ... }\n\n// TODO: Removed the custom mixins belowe as we will now use the mixins from Bootstrap for media queries.\n\n// xs - sm\n@mixin mobile-only {\n\t@media all and (max-width: 576px) {\n\t\t@content;\n\t}\n}\n\n// xs - md\n@mixin mobile-and-small-tablet-only {\n\t@media all and (max-width: 768px) {\n\t\t@content;\n\t}\n}\n\n// sm - xl\n@mixin tablet-only {\n\t@media all and (min-width: 576px) and (max-width: 1199px) {\n\t\t@content;\n\t}\n}\n\n// xl up\n@mixin desktop-only {\n\t@media all and (min-width: 1200px) {\n\t\t@content;\n\t}\n}\n\n// xxl up\n@mixin big-desktop-only {\n\t@media all and (min-width: 1400px) {\n\t\t@content;\n\t}\n}\n", "@import 'assets/scss/utils/mixins';\n\n.photo-tip {\n\tpadding: 8px;\n\tbackground: var(--general-1);\n\tborder-radius: 4px;\n}\n\n.account-photo {\n\twidth: 172px;\n\theight: 125px;\n\tborder-radius: 10px;\n\tobject-fit: cover;\n}\n\n.enable-save-btn {\n\tbackground-color: var(--prim-2) !important;\n\tcolor: var(--basic-1) !important;\n}\n\n.disable-save-btn {\n\tbackground-color: var(--neutral-2) !important;\n\tcolor: var(--neutral-3) !important;\n}\n\n.image-section {\n\tposition: relative;\n\tdisplay: inline-block;\n}\n\n.spinner {\n\tposition: absolute;\n\ttop: 175px;\n\tleft: 34%;\n\tz-index: 1;\n}\n\ninput.search-location {\n\tborder: 1px solid var(--general-2);\n\theight: 40px !important;\n\tborder-radius: 4px;\n\n\t&:focus {\n\t\toutline: unset !important;\n\t}\n}\n\n@include media-breakpoint-down(sm) {\n\t.account-photo-section {\n\t\tborder-radius: 4px;\n\t\tborder: 1px solid var(--general-2);\n\t\tpadding: 16px;\n\t}\n\n\t.button-border {\n\t\tborder-top: 1px solid var(--neutral-2);\n\t\tz-index: 999;\n\t\tbackground: var(--basic-1);\n\t}\n}\n\n.inviter-info {\n\tborder-radius: 4px;\n\tbackground-color: var(--info-1);\n\tborder: 1px solid var(--info-2);\n}\n\n.inviter-icon {\n\twidth: 20px;\n\theight: 20px;\n\tfont-size: 20px;\n\toverflow: unset;\n}\n\n.address-area {\n\tresize: none;\n}\n\n.search-container {\n\tposition: sticky;\n\ttop: 0;\n\tbackground-color: var(--basic-1);\n\tz-index: 100;\n}\n\n.container,\n.button-container > div {\n\tmax-width: 600px !important;\n}\n\n.button-container {\n\tz-index: 2;\n}\n\n.pb-96px {\n\tpadding-bottom: 96px !important;\n}\n\n.border-top {\n\tborder-color: var(--neutral-2) !important;\n}\n\n.h-16px {\n\theight: 16px !important;\n}\n\n.w-80px {\n\twidth: 80px !important;\n}\n", "// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],
  "mappings": ";ACEA,CAAA;AACC,WAAA;AACA,cAAA,IAAA;AACA,iBAAA;;AAGD,CAAA;AACC,SAAA;AACA,UAAA;AACA,iBAAA;AACA,cAAA;;AAGD,CAAA;AACC,oBAAA,IAAA;AACA,SAAA,IAAA;;AAGD,CAAA;AACC,oBAAA,IAAA;AACA,SAAA,IAAA;;AAGD,CAAA;AACC,YAAA;AACA,WAAA;;AAGD,CAAA;AACC,YAAA;AACA,OAAA;AACA,QAAA;AACA,WAAA;;AAGD,KAAA,CAAA;AACC,UAAA,IAAA,MAAA,IAAA;AACA,UAAA;AACA,iBAAA;;AAEA,KAAA,CALD,eAKC;AACC,WAAA;;ACiCE,OAAA,CAAA,SAAA,EAAA;AD5BH,GAAA;AACC,mBAAA;AACA,YAAA,IAAA,MAAA,IAAA;AACA,aAAA;;AAGD,GAAA;AACC,gBAAA,IAAA,MAAA,IAAA;AACA,aAAA;AACA,gBAAA,IAAA;;;AAIF,CAAA;AACC,iBAAA;AACA,oBAAA,IAAA;AACA,UAAA,IAAA,MAAA,IAAA;;AAGD,CAAA;AACC,SAAA;AACA,UAAA;AACA,aAAA;AACA,YAAA;;AAGD,CAAA;AACC,UAAA;;AAGD,CAAA;AACC,YAAA;AACA,OAAA;AACA,oBAAA,IAAA;AACA,WAAA;;AAGD,CAAA;AAAA,CAAA,iBAAA,EAAA;AAEC,aAAA;;AAGD,CALA;AAMC,WAAA;;AAGD,CAAA;AACC,kBAAA;;AAGD,CAAA;AACC,gBAAA,IAAA;;AAGD,CAAA;AACC,UAAA;;AAGD,CAAA;AACC,SAAA;;",
  "names": []
}
