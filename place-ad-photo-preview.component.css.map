{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/assets/scss/utils/_mixins.scss", "apps/findqo-ireland/src/app/feature/place-ad/components/place-ad-photo-preview/place-ad-photo-preview.component.scss", "node_modules/bootstrap/scss/mixins/_breakpoints.scss"],
  "sourcesContent": ["@import 'bootstrap/scss/functions', 'bootstrap/scss/variables', 'bootstrap/scss/mixins';\n\n// NOTE: The breakpoints should be same the as breakpoint observer in APP.INITIALIZER\n// Breakpoints are same with the Bootstrap v5.0.\n// @links https://getbootstrap.com/docs/5.0/layout/breakpoints/\n\n/* BOOTSTRAP BREAKPOINT MIXINS */\n// Min-width\n// @include media-breakpoint-up(sm) { ... }\n// @include media-breakpoint-up(md) { ... }\n// @include media-breakpoint-up(lg) { ... }\n// @include media-breakpoint-up(xl) { ... }\n// @include media-breakpoint-up(xxl) { ... }\n\n// Single breakpoint\n// @include media-breakpoint-only(xs) { ... }\n// @include media-breakpoint-only(sm) { ... }\n// @include media-breakpoint-only(md) { ... }\n// @include media-breakpoint-only(lg) { ... }\n// @include media-breakpoint-only(xl) { ... }\n// @include media-breakpoint-only(xxl) { ... }\n\n// No media query necessary for xs breakpoint as it's effectively `@media (max-width: 0) { ... }`\n// @include media-breakpoint-down(sm) { ... }\n// @include media-breakpoint-down(md) { ... }\n// @include media-breakpoint-down(lg) { ... }\n// @include media-breakpoint-down(xl) { ... }\n// @include media-breakpoint-down(xxl) { ... }\n\n// TODO: Removed the custom mixins belowe as we will now use the mixins from Bootstrap for media queries.\n\n// xs - sm\n@mixin mobile-only {\n\t@media all and (max-width: 576px) {\n\t\t@content;\n\t}\n}\n\n// xs - md\n@mixin mobile-and-small-tablet-only {\n\t@media all and (max-width: 768px) {\n\t\t@content;\n\t}\n}\n\n// sm - xl\n@mixin tablet-only {\n\t@media all and (min-width: 576px) and (max-width: 1199px) {\n\t\t@content;\n\t}\n}\n\n// xl up\n@mixin desktop-only {\n\t@media all and (min-width: 1200px) {\n\t\t@content;\n\t}\n}\n\n// xxl up\n@mixin big-desktop-only {\n\t@media all and (min-width: 1400px) {\n\t\t@content;\n\t}\n}\n", "@import 'assets/scss/utils/mixins';\n\n.ad-details {\n\tborder-radius: 10px;\n\n\t@include media-breakpoint-up(sm) {\n\t\tborder: 2px solid var(--info-1);\n\t}\n\n\t@include media-breakpoint-up(xl) {\n\t\tbox-shadow: 0 0 30px rgba(0, 0, 0, 0.2);\n\t}\n}\n\n.dealer-details {\n\tpadding: 10px 16px;\n\tborder-bottom: 1px solid var(--neutral-2);\n\tborder-radius: 10px 10px 0 0;\n}\n\n.image-container {\n\theight: 200px;\n\n\t@include media-breakpoint-up(sm) {\n\t\theight: 180px;\n\t}\n}\n\n.large-photo {\n\tflex: 1;\n\n\t@include media-breakpoint-up(sm) {\n\t\twidth: 216px;\n\t}\n}\n\n.small-photos {\n\t@include media-breakpoint-up(sm) {\n\t\twidth: 216px;\n\t}\n}\n\n.sub-image {\n\theight: 111px;\n\twidth: 100%;\n\n\t@include media-breakpoint-up(sm) {\n\t\theight: 86px;\n\t}\n}\n\n.other-images {\n\twidth: 100%;\n\tobject-fit: cover;\n\theight: 100%;\n\tborder-radius: 4px;\n\n\t@include media-breakpoint-up(sm) {\n\t\theight: 121px;\n\t\tborder-radius: unset;\n\t}\n}\n\n.dealer-img {\n\twidth: 55px;\n\theight: 40px;\n\tobject-fit: cover;\n\tborder-radius: 5px;\n}\n\n.h-25px {\n\theight: 25px;\n\tline-height: 25px;\n}\n\n.detail-icon {\n\tdisplay: inline-block !important;\n\tmargin-inline-end: 4px;\n\tfont-size: 16px;\n\twidth: 16px;\n\theight: 16px;\n\tvertical-align: middle;\n}\n\n.image-1 {\n\twidth: 100%;\n\tobject-fit: cover;\n\tborder-radius: 4px;\n\n\t@include media-breakpoint-up(sm) {\n\t\tborder-radius: unset;\n\t}\n}\n\n.border-bottom-10px {\n\tborder-bottom-right-radius: 10px;\n\tborder-bottom-left-radius: 10px;\n}\n\n.border-top-5px {\n\tborder-top-left-radius: 5px;\n\tborder-top-right-radius: 5px;\n}\n", "// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],
  "mappings": ";ACEA,CAAA;AACC,iBAAA;;AC4DG,OAAA,CAAA,SAAA,EAAA;AD7DJ,GAAA;AAIE,YAAA,IAAA,MAAA,IAAA;;;ACyDE,OAAA,CAAA,SAAA,EAAA;AD7DJ,GAAA;AAQE,gBAAA,EAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;;AAIF,CAAA;AACC,WAAA,KAAA;AACA,iBAAA,IAAA,MAAA,IAAA;AACA,iBAAA,KAAA,KAAA,EAAA;;AAGD,CAAA;AACC,UAAA;;AC0CG,OAAA,CAAA,SAAA,EAAA;AD3CJ,GAAA;AAIE,YAAA;;;AAIF,CAAA;AACC,QAAA;;ACkCG,OAAA,CAAA,SAAA,EAAA;ADnCJ,GAAA;AAIE,WAAA;;;AC+BE,OAAA,CAAA,SAAA,EAAA;AD3BJ,GAAA;AAEE,WAAA;;;AAIF,CAAA;AACC,UAAA;AACA,SAAA;;ACmBG,OAAA,CAAA,SAAA,EAAA;ADrBJ,GAAA;AAKE,YAAA;;;AAIF,CAAA;AACC,SAAA;AACA,cAAA;AACA,UAAA;AACA,iBAAA;;ACQG,OAAA,CAAA,SAAA,EAAA;ADZJ,GAAA;AAOE,YAAA;AACA,mBAAA;;;AAIF,CAAA;AACC,SAAA;AACA,UAAA;AACA,cAAA;AACA,iBAAA;;AAGD,CAAA;AACC,UAAA;AACA,eAAA;;AAGD,CAAA;AACC,WAAA;AACA,qBAAA;AACA,aAAA;AACA,SAAA;AACA,UAAA;AACA,kBAAA;;AAGD,CAAA;AACC,SAAA;AACA,cAAA;AACA,iBAAA;;ACxBG,OAAA,CAAA,SAAA,EAAA;ADqBJ,GAAA;AAME,mBAAA;;;AAIF,CAAA;AACC,8BAAA;AACA,6BAAA;;AAGD,CAAA;AACC,0BAAA;AACA,2BAAA;;",
  "names": []
}
