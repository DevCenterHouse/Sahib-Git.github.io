{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/app/core/data-access/states/enquiry.state.ts", "apps/findqo-ireland/src/app/core/data-access/apis/agent-hub.ts", "apps/findqo-ireland/src/app/feature/agent-hub/agent-hub.facade.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { Inquiry } from '@core/models';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class EnquiryState {\n\tprivate readonly _isLoading$ = new BehaviorSubject<boolean>(false);\n\tprivate readonly _enquiry$ = new BehaviorSubject<Inquiry>(undefined);\n\n\tget isLoading$() {\n\t\treturn this._isLoading$.asObservable();\n\t}\n\n\tget enquiry$() {\n\t\treturn this._enquiry$.asObservable();\n\t}\n\n\tsetLoading(status: boolean) {\n\t\tthis._isLoading$.next(status);\n\t}\n\n\tsetEnquiry(enquiry: Inquiry) {\n\t\tthis._enquiry$.next(enquiry);\n\t}\n}\n", "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { API } from '@core/constants';\nimport { Ad, Agent, AgentEnquiries } from '@core/models';\nimport { CommonUtil } from '@core/utils/common.util';\nimport { map, Observable } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class AgentHubApi {\n\tconstructor(private http: HttpClient) {}\n\n\tgetAgentAds(request?: Params): Observable<Ad[]> {\n\t\treturn this.http.get<Ad[]>(API.agentHub.ads, {\n\t\t\tparams: CommonUtil.createHttpParams(request),\n\t\t});\n\t}\n\n\tgetAgentList(): Observable<Agent[]> {\n\t\treturn this.http\n\t\t\t.get(API.agents.agentList, {\n\t\t\t\tparams: {\n\t\t\t\t\tstatus: '2',\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(map((response: { data: Agent[] }) => response?.data));\n\t}\n\n\tgetAgentsList(request?: Params): Observable<Agent[]> {\n\t\treturn this.http.get<Agent[]>(API.agents.base, {\n\t\t\tparams: CommonUtil.createHttpParams(request),\n\t\t});\n\t}\n\n\tgetAgentEnquiries(request?: Params): Observable<AgentEnquiries[]> {\n\t\treturn this.http.get<AgentEnquiries[]>(API.agentHub.enquiries, {\n\t\t\tparams: CommonUtil.createHttpParams(request),\n\t\t});\n\t}\n}\n", "import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AdsApi } from '@core/data-access/apis/ads.api';\nimport { EnquiryState } from '@core/data-access/states/enquiry.state';\nimport { Inquiry } from '@core/models';\nimport { SnackService } from '@core/services/snack.service';\nimport { Params } from '@angular/router';\nimport { AgentHubApi } from '@core/data-access/apis/agent-hub';\nimport { AgentsState } from '@core/data-access/states/agents.state';\nimport { Ad, Agent, AgentEnquiries, AgentPageMetaData, GetAdStatusListResponse, SectionAisle } from '@core/models';\nimport { AdsState } from '@shared/states/ads.state';\nimport { BehaviorSubject, catchError, finalize, map, Observable, switchMap } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class AgentHubFacade {\n\tconstructor(\n\t\tprivate agentHubApi: AgentHubApi,\n\t\tprivate adsApi: AdsApi,\n\t\tprivate adState: AdsState,\n\t\tprivate agentState: AgentsState,\n\t\tprivate readonly enquiryState: EnquiryState,\n\t\tprivate readonly snackService: SnackService\n\t) {}\n\n\tprivate readonly _agencyList$ = new BehaviorSubject<Ad[]>([]);\n\tprivate readonly _enquiryList$ = new BehaviorSubject<AgentEnquiries[]>([]);\n\tprivate readonly _agentsList$ = new BehaviorSubject<AgentEnquiries[]>([]);\n\n\tprivate readonly _pageMetaData$ = new BehaviorSubject<AgentPageMetaData>(undefined!);\n\tprivate readonly _aisleList$ = new BehaviorSubject<SectionAisle[]>([]);\n\tprivate readonly _agentList$ = new BehaviorSubject<Agent[]>([]);\n\tprivate readonly _isLoading$ = new BehaviorSubject<boolean>(false);\n\n\tget agentsList$(): Observable<AgentEnquiries[]> {\n\t\treturn this._agentsList$.asObservable();\n\t}\n\n\tget enquiryList$(): Observable<AgentEnquiries[]> {\n\t\treturn this._enquiryList$.asObservable();\n\t}\n\n\tget agencyList$(): Observable<Ad[]> {\n\t\treturn this._agencyList$.asObservable();\n\t}\n\n\tget pageMetaData$(): Observable<AgentPageMetaData> {\n\t\treturn this.agentState.agentsMetaData$;\n\t}\n\n\tgetAgentList$(): Observable<Agent[]> {\n\t\treturn this._agentList$.asObservable();\n\t}\n\n\tgetAisleList$(): Observable<SectionAisle[]> {\n\t\treturn this._aisleList$.asObservable();\n\t}\n\n\tgetAdsStatusList$(): Observable<GetAdStatusListResponse[]> {\n\t\treturn this.adState.adStatusList$;\n\t}\n\n\tisLoading$(): Observable<boolean> {\n\t\treturn this._isLoading$.asObservable();\n\t}\n\n\tsetIsLoading(isLoading: boolean): void {\n\t\tthis._isLoading$.next(isLoading);\n\t}\n\n\tsetAisleList(aisles: SectionAisle[]): void {\n\t\tthis._aisleList$.next(aisles);\n\t}\n\n\tsetAgencyList(agencyList: Ad[]): void {\n\t\tthis._agencyList$.next(agencyList);\n\t}\n\n\tsetEnquiryList(enquiryList: AgentEnquiries[]): void {\n\t\tthis._enquiryList$.next(enquiryList);\n\t}\n\n\tsetAgentsList(enquiryList: AgentEnquiries[]): void {\n\t\tthis._agentsList$.next(enquiryList);\n\t}\n\n\tsetPageMetaData(pageMetaData: AgentPageMetaData): void {\n\t\treturn this._pageMetaData$.next(pageMetaData);\n\t}\n\n\tsetAgentList(agent): void {\n\t\tthis._agentList$.next(agent);\n\t}\n\n\tloadAgentList(): void {\n\t\tthis.agentHubApi.getAgentList().subscribe((agents) => {\n\t\t\tthis.setAgentList(agents);\n\t\t});\n\t}\n\n\tloadAdStatusList(): void {\n\t\tthis.adsApi.getAdsStatusList().subscribe((adStatusList: GetAdStatusListResponse[]) => {\n\t\t\tconst filteredAdStatusList = adStatusList.filter((status) => status?.reference !== 'all');\n\n\t\t\tthis.adState.setAdStatusList(filteredAdStatusList);\n\t\t});\n\t}\n\n\tloadAgencyList$(params: Params): Observable<Ad> {\n\t\tthis.setIsLoading(true);\n\t\treturn this.agentHubApi.getAgentAds(params).pipe(\n\t\t\tfinalize(() => {\n\t\t\t\tthis.setIsLoading(false);\n\t\t\t}),\n\t\t\tmap((response: any) => {\n\t\t\t\tthis.setAgencyList(response?.data);\n\t\t\t\tthis.setPageMetaData(response.meta);\n\n\t\t\t\treturn {\n\t\t\t\t\t...response,\n\t\t\t\t\tdata: response.data,\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t}\n\n\tloadEnquiryList$(params: Params): Observable<AgentEnquiries> {\n\t\tthis.setIsLoading(true);\n\t\treturn this.agentHubApi.getAgentEnquiries(params).pipe(\n\t\t\tfinalize(() => {\n\t\t\t\tthis.setIsLoading(false);\n\t\t\t}),\n\t\t\tmap((response: any) => {\n\t\t\t\tthis.setEnquiryList(response?.data);\n\t\t\t\tthis.setPageMetaData(response.meta);\n\n\t\t\t\treturn {\n\t\t\t\t\t...response,\n\t\t\t\t\tdata: response.data,\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t}\n\n\tloadAgentsList$(params: Params): Observable<AgentEnquiries> {\n\t\tthis.setIsLoading(true);\n\t\treturn this.agentHubApi.getAgentsList(params).pipe(\n\t\t\tfinalize(() => {\n\t\t\t\tthis.setIsLoading(false);\n\t\t\t}),\n\t\t\tmap((response: any) => {\n\t\t\t\tthis.setAgentsList(response?.data);\n\t\t\t\tthis.setPageMetaData(response.meta);\n\n\t\t\t\treturn {\n\t\t\t\t\t...response,\n\t\t\t\t\tdata: response.data,\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t}\n\n\tgetEnquiry$(): Observable<Inquiry> {\n\t\treturn this.enquiryState.enquiry$;\n\t}\n\n\tgetIsLoading$(): Observable<boolean> {\n\t\treturn this.enquiryState.isLoading$;\n\t}\n\n\tmarkAsPending(enquiryId: string, body: { completionStatus: string }): void {\n\t\tthis.adsApi\n\t\t\t.changeEnquiryStatus(enquiryId, body)\n\t\t\t.pipe(\n\t\t\t\tcatchError((response: HttpErrorResponse) => {\n\t\t\t\t\tconst ERROR_MESSAGE = response?.error?.error?.errors[0]?.messages[0];\n\n\t\t\t\t\tthis.snackService.open({\n\t\t\t\t\t\tdata: { message: ERROR_MESSAGE },\n\t\t\t\t\t\tpanelClass: ['snackbar-error'],\n\t\t\t\t\t});\n\n\t\t\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t\t\t}),\n\t\t\t\tswitchMap(() => this.adsApi.getEnquiryById(enquiryId)),\n\t\t\t\tmap((res) => res.data)\n\t\t\t)\n\t\t\t.subscribe((enquiry: Inquiry) => this.enquiryState.setEnquiry(enquiry));\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
