{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/app/core/guards/place-ad/place-ad-business-account.guard.ts", "apps/findqo-ireland/src/app/core/guards/place-ad/place-ad-disabled-account.guard.ts", "apps/findqo-ireland/src/app/core/guards/place-ad/place-ad-section.guard.ts", "apps/findqo-ireland/src/app/core/guards/place-ad/place-ad-steps.guard.ts", "apps/findqo-ireland/src/app/feature/place-ad/place-ad-routing.module.ts", "apps/findqo-ireland/src/app/feature/place-ad/place-ad.module.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, of, switchMap } from 'rxjs';\nimport { APP_ROUTE } from '@core/constants';\nimport { MyProfileFacade } from '@feature/my-profile/my-profile.facade';\nimport { AuthService } from '@core/data-access/services/auth.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class PlaceAdSBusinessAccountGuard {\n\tconstructor(\n\t\tprivate readonly router: Router,\n\t\tprivate readonly userFacade: MyProfileFacade,\n\t\tprivate authService: AuthService\n\t) {}\n\n\t// to prevent user from going to place ad business account\n\tcanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t\treturn this.authService.user()\n\t\t\t? this.userFacade.getProfile().pipe(\n\t\t\t\t\tswitchMap((res) => {\n\t\t\t\t\t\tif (!+res?.hasBusinessProfile) {\n\t\t\t\t\t\t\tthis.router.navigate([APP_ROUTE.placeAdCategory], { queryParams: { sellerTypeId: '1' } });\n\t\t\t\t\t\t\treturn of(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of(true);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t: of(null).pipe(\n\t\t\t\t\tswitchMap(() => {\n\t\t\t\t\t\tthis.router.navigate([APP_ROUTE.placeAdCategory], { queryParams: { sellerTypeId: '1' } });\n\t\t\t\t\t\treturn of(false);\n\t\t\t\t\t})\n\t\t\t\t);\n\t}\n}\n", "import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '@core/data-access/services/auth.service';\nimport { ClientUser } from '@core/models';\nimport { MyProfileFacade } from '@feature/my-profile/my-profile.facade';\nimport { ProfileDisabledDialogComponent } from '@feature/place-ad/components/profile-disabled-dialog/profile-disabled-dialog.component';\nimport { Observable, of, switchMap } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class PlaceAdDisabledAccountGuard {\n\tconstructor(\n\t\tprivate dialog: MatDialog,\n\t\tprivate readonly userFacade: MyProfileFacade,\n\t\tprivate authService: AuthService\n\t) {}\n\n\tcanActivate(route: ActivatedRoute): Observable<boolean> {\n\t\treturn this.authService.user()\n\t\t\t? this.userFacade.getProfile().pipe(\n\t\t\t\t\tswitchMap((res: ClientUser) => {\n\t\t\t\t\t\tconst IS_BUSINESS_POSTING_AD_ROUTE = route.routeConfig.path === 'category' && route.queryParams?.['sellerTypeId'] === '2';\n\t\t\t\t\t\tconst IS_INDIVIDUAL_POSTING_AD_ROUTE = route.routeConfig.path === 'category' && route.queryParams?.['sellerTypeId'] === '1';\n\n\t\t\t\t\t\tconst IS_ACCOUNT_DISABLED = +res.isDisabled;\n\t\t\t\t\t\tconst IS_BUSINESS_PROFILE_DISABLED = +res?.businessProfile?.isDisabled;\n\n\t\t\t\t\t\tif (IS_INDIVIDUAL_POSTING_AD_ROUTE && IS_ACCOUNT_DISABLED) {\n\t\t\t\t\t\t\tthis.dialog.open(ProfileDisabledDialogComponent, {\n\t\t\t\t\t\t\t\tpanelClass: 'profile-disabled-dialog',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn of(false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (IS_BUSINESS_POSTING_AD_ROUTE && IS_BUSINESS_PROFILE_DISABLED) {\n\t\t\t\t\t\t\tthis.dialog.open(ProfileDisabledDialogComponent, {\n\t\t\t\t\t\t\t\tpanelClass: 'profile-disabled-dialog',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn of(false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn of(true);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t: of(true);\n\t}\n}\n", "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { SECTION_LIST } from '@feature/place-ad/place-ad.constant';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class PlaceAdSectionGuard {\n\tconstructor(private location: Location) {}\n\n\t//to allow go to place ad sections page only if sellertypeId and valid section is there so that to prevent user from going to thsi route manually without completing previous steps\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t\tconst IS_SECTION_VALID = !!route.params['section'] && !!SECTION_LIST.find((value) => value === route.params['section']);\n\n\t\tif (route.queryParams?.['sellerTypeId'] && IS_SECTION_VALID) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.location.back();\n\t\t\treturn false;\n\t\t}\n\t}\n}\n", "import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { PropertyWorthState } from '@core/data-access/states/property-worth.state';\nimport { PlaceAdService } from '@feature/place-ad/place-ad.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class PlaceAdStepsGuard {\n\tconstructor(\n\t\tprivate readonly placeAdService: PlaceAdService,\n\t\tprivate location: Location,\n\t\tprivate propertyWorthState: PropertyWorthState,\n\t) {}\n\n\t//to allow routing to place ad steps page only if sectioId and aisleId is there so that to prevent user from going to thsi route manually without completing previous steps\n\tcanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t\tconst DATA = this.placeAdService.getPlaceAdData();\n\t\tconst propertyWorthData = this.propertyWorthState.getValuationInfo();\n\n\t\tif ((DATA?.sectionId && DATA?.aisleId) || propertyWorthData) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.location.back();\n\t\t\treturn false;\n\t\t}\n\t}\n}\n", "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ROUTE_PATH } from '@core/constants';\nimport { ConfirmLeaveGuard } from '@core/guards/confirm-leave.guard';\nimport { PlaceAdSBusinessAccountGuard } from '@core/guards/place-ad/place-ad-business-account.guard';\nimport { PlaceAdDisabledAccountGuard } from '@core/guards/place-ad/place-ad-disabled-account.guard';\nimport { PlaceAdSectionGuard } from '@core/guards/place-ad/place-ad-section.guard';\nimport { PlaceAdStepsGuard } from '@core/guards/place-ad/place-ad-steps.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tloadChildren: () => import('./pages/place-ad-page/place-ad.module').then((m) => m.PlaceAdModule),\n\t\tcanActivate: [PlaceAdSBusinessAccountGuard],\n\t},\n\t{\n\t\tpath: ROUTE_PATH.placeAd.category,\n\t\tloadChildren: () => import('./pages/place-ad-category/place-ad-category.module').then((m) => m.PlaceAdCategoryModule),\n\t\tcanActivate: [PlaceAdDisabledAccountGuard],\n\t},\n\t{\n\t\tpath: ROUTE_PATH.placeAd.section,\n\t\tloadChildren: () => import('./pages/place-ad-section/place-ad-section.module').then((m) => m.PlaceAdSectionModule),\n\t\tcanActivate: [PlaceAdSectionGuard],\n\t},\n\t{\n\t\tpath: ROUTE_PATH.placeAd.steps,\n\t\tloadComponent: () => import('./pages/place-ad-form-page/place-ad-form-page.component').then((c) => c.PlaceAdFormPage),\n\t\tcanActivate: [PlaceAdStepsGuard],\n\t\tcanDeactivate: [ConfirmLeaveGuard],\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class PlaceAdRoutingModule {}\n", "import { NgModule } from '@angular/core';\nimport { PlaceAdRoutingModule } from './place-ad-routing.module';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [PlaceAdRoutingModule],\n})\nexport class PlaceAdModule {}\n"],
  "mappings": "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",
  "names": []
}
