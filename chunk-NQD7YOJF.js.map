{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/app/core/data-access/apis/ads.api.ts"],
  "sourcesContent": ["import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { API } from '@core/constants';\nimport { AdListKind } from '@core/enums';\nimport { SortType } from '@core/enums/sort.enum';\nimport {\n\tAd,\n\tCommonItem,\n\tCommonResponse,\n\tGetAdListResponse,\n\tGetAdStatusListResponse,\n\tGetLatestAdListResponse,\n\tInquiry,\n\tPageMetaData,\n\tReportAd,\n\tSendInquiry,\n\tplanTiers,\n} from '@core/models';\nimport { CACHE_REQUEST } from '@core/services/http-cache.service';\nimport { CommonUtil } from '@core/utils/common.util';\nimport { Observable, map } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class AdsApi {\n\tconstructor(private http: HttpClient) {}\n\n\tgetAdList(request?: Params): Observable<GetAdListResponse> {\n\t\treturn this.http\n\t\t\t.get<GetAdListResponse>(API.ads.adList, {\n\t\t\t\tparams: CommonUtil.createHttpParams(request),\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tmap((response: GetAdListResponse) => {\n\t\t\t\t\t// Enhance metadata with SEO title including count\n\t\t\t\t\tconst { meta: metadata, kind } = response;\n\t\t\t\t\tconst seoTitle = metadata?.seo?.title || '';\n\t\t\t\t\tconst isListWithCount = +metadata?.total > 1 && kind === AdListKind.LIST && !seoTitle.toLowerCase().includes('bedroom');\n\n\t\t\t\t\tconst titleWithCount = isListWithCount ? `${metadata.total} ${seoTitle}` : seoTitle;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...response,\n\t\t\t\t\t\tmeta: {\n\t\t\t\t\t\t\t...metadata,\n\t\t\t\t\t\t\tseo: {\n\t\t\t\t\t\t\t\t...metadata?.seo,\n\t\t\t\t\t\t\t\ttitleWithCount,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t);\n\t}\n\n\tgetAgentAdList(id: string, request?: Params): Observable<GetAdListResponse> {\n\t\treturn this.http.get<GetAdListResponse>(API.ads.agentAdList(id), {\n\t\t\tparams: CommonUtil.createHttpParams(request),\n\t\t});\n\t}\n\n\tgetMyAds(request?: Params): Observable<GetAdListResponse> {\n\t\treturn this.http.get<GetAdListResponse>(API.myAds.myAdList, {\n\t\t\tparams: CommonUtil.createHttpParams(request),\n\t\t});\n\t}\n\n\tgetAdsStatusList(): Observable<GetAdStatusListResponse[]> {\n\t\treturn this.http\n\t\t\t.get<CommonResponse<GetAdStatusListResponse[]>>(API.ads.adStatusList, {\n\t\t\t\tparams: {\n\t\t\t\t\twithCount: 1,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(map((adStatusList: CommonResponse<GetAdStatusListResponse[]>) => adStatusList.data));\n\t}\n\n\tgetLatestAdList(request: { section: string; aisle: string; perPage: number }): Observable<Ad[]> {\n\t\treturn this.http\n\t\t\t.get<GetAdListResponse>(API.ads.adList, {\n\t\t\t\tparams: CommonUtil.createHttpParams({\n\t\t\t\t\t...request,\n\t\t\t\t\tsort: SortType.DATE_LATEST,\n\t\t\t\t}),\n\t\t\t})\n\t\t\t.pipe(map((response: GetAdListResponse) => (response.kind === AdListKind.LIST ? response.data.map((ad) => ({ ...ad, price: { ...ad.price } })) : [])));\n\t}\n\n\tgetLatestAds(): Observable<GetLatestAdListResponse> {\n\t\treturn this.http.get<GetLatestAdListResponse>(API.ads.latestAdList, {\n\t\t\tcontext: new HttpContext().set(CACHE_REQUEST, {\n\t\t\t\tcached: true,\n\t\t\t\tttl: 300000,\n\t\t\t}),\n\t\t});\n\t}\n\n\tgetAdDetail(id: string): Observable<Ad> {\n\t\treturn this.http.get(API.ads.adDetail(id)).pipe(map((response: CommonResponse<Ad>) => response?.data));\n\t}\n\n\tgetFavourtiesAds(): Observable<Ad[]> {\n\t\treturn this.http\n\t\t\t.get<GetAdListResponse>(API.favorites.favoritesList, {\n\t\t\t\tparams: CommonUtil.createHttpParams({}),\n\t\t\t})\n\t\t\t.pipe(map((response: GetAdListResponse) => response.data));\n\t}\n\n\tdeleteFavoriteAd(ad: Ad): Observable<CommonResponse<Record<string, never>>> {\n\t\treturn this.http.delete(API.favorites.deleteFavoriteAd(ad.id));\n\t}\n\n\tsaveFavoriteAd(ad: Ad): Observable<CommonResponse<Record<string, never>>> {\n\t\treturn this.http.post<CommonResponse<Record<string, never>>>(API.favorites.saveFavoriteAd(ad.id), {});\n\t}\n\n\tdeleteAd(adId: string): Observable<CommonResponse<Record<string, never>>> {\n\t\treturn this.http.delete(API.ads.deleteAd(adId));\n\t}\n\n\tsoldAd(adId: string): Observable<CommonResponse<Record<string, never>>> {\n\t\treturn this.http.post(API.ads.soldAd(adId), {});\n\t}\n\n\tsendInquiry(adId: string, body: SendInquiry): Observable<CommonResponse<Inquiry>> {\n\t\treturn this.http.post(API.inquiry.sendInquiry(adId), body);\n\t}\n\n\tgetInquiry(request?: Params): Observable<{ data: Inquiry[]; meta: PageMetaData }> {\n\t\treturn this.http.get<{ data: Inquiry[]; meta: PageMetaData }>(API.inquiry.getInquiry, {\n\t\t\tparams: CommonUtil.createHttpParams(request),\n\t\t});\n\t}\n\n\tgetReportAdReasons(): Observable<CommonItem[]> {\n\t\treturn this.http\n\t\t\t.get<CommonResponse<CommonItem[]>>(API.reportAds.getReportReasons, {\n\t\t\t\tcontext: new HttpContext().set(CACHE_REQUEST, {\n\t\t\t\t\tcached: true,\n\t\t\t\t\tttl: 300000,\n\t\t\t\t}),\n\t\t\t})\n\t\t\t.pipe(map((response: CommonResponse<CommonItem[]>) => response?.data));\n\t}\n\n\treportAd(reportAd: ReportAd, adId: string): Observable<CommonResponse<Record<string, never>>> {\n\t\treturn this.http.post(API.reportAds.reportAd(adId), reportAd);\n\t}\n\n\tgetAdsPrice(): Observable<planTiers> {\n\t\treturn this.http.get<{ data: planTiers }>(API.pricing.adsPricing).pipe(\n\t\t\tmap((response) => {\n\t\t\t\treturn response.data;\n\t\t\t}),\n\t\t);\n\t}\n\n\tgetInquiryList(request?: Params): Observable<{ data: Inquiry[]; meta: PageMetaData }> {\n\t\treturn this.http.get<{ data: Inquiry[]; meta: PageMetaData }>(API.inquiry.getInquiry, {\n\t\t\tparams: CommonUtil.createHttpParams(request),\n\t\t});\n\t}\n\n\treSubmitEnquiry(adId: string, enquiryId: string, body: SendInquiry): Observable<CommonResponse<Inquiry>> {\n\t\treturn this.http.patch<CommonResponse<Inquiry>>(API.inquiry.reSubmitInquiry(adId, enquiryId), body);\n\t}\n\n\tgetPdfContent(pdfSignedUrl: string): Observable<Blob> {\n\t\treturn this.http.get(pdfSignedUrl, { responseType: 'blob' });\n\t}\n\n\ttrackPhoneCall(id: string, body = {}): Observable<CommonResponse<object>> {\n\t\treturn this.http.post<CommonResponse<object>>(API.trackPhoneCall(id), body);\n\t}\n\n\tgetEnquiryById(id: string): Observable<CommonResponse<Inquiry>> {\n\t\treturn this.http.get<CommonResponse<Inquiry>>(API.inquiry.enquiryById(id));\n\t}\n\n\tchangeEnquiryStatus(enquiryId: string, body): Observable<CommonResponse<object>> {\n\t\treturn this.http.patch<CommonResponse<object>>(API.inquiry.changeEnquiryStatus(enquiryId), body);\n\t}\n\tunpublishAd(adId: string, updatestatus: string): Observable<CommonResponse<object>> {\n\t\treturn this.http.patch<CommonResponse<object>>(API.ads.updateStatus(adId), {\n\t\t\treference: updatestatus,\n\t\t});\n\t}\n\n\tupdateAdStatus(adId: string, updatestatus: string): Observable<CommonResponse<object>> {\n\t\treturn this.http.patch<CommonResponse<object>>(API.ads.updateStatus(adId), {\n\t\t\treference: updatestatus,\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
