{"version":3,"sources":["node_modules/perf-marks/dist/es2020/is-nodejs-env.js","node_modules/perf-marks/dist/es2020/is-user-timing-api-supported.js","node_modules/perf-marks/dist/es2020/is-performance-observable-supported.js","node_modules/perf-marks/dist/es2020/marks.js","node_modules/ngx-skeleton-loader/fesm2020/ngx-skeleton-loader.mjs"],"sourcesContent":["/**\n * Boolean with the result of the check if package\n * is running on the browser or in a NodeJS environment\n *\n * @returns boolean\n *\n */\nconst isNodeJSEnv = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n// Interesting fact:\n// Some bundlers are resolving `process`, so it needs to check for process.release.name\n// since it's a NodeJS only environment value.\n// More details in https://nodejs.org/api/process.html#process_process_release\nexport { isNodeJSEnv };","/**\n * Boolean with the result of the check if User Timing API\n * is supported for the current browser/NodeJS version\n *\n * @returns boolean\n *\n */\nconst isUserTimingAPISupported = typeof performance !== 'undefined' && typeof performance.now !== 'undefined' && typeof performance.mark === 'function' && typeof performance.measure === 'function' && (typeof performance.clearMarks === 'function' || typeof performance.clearMeasures === 'function');\nexport { isUserTimingAPISupported };","/**\n * Boolean with the result of the check if PerformanceObservable\n * is supported for the current browser/NodeJS version\n *\n * @returns boolean\n *\n */\nconst isPerformanceObservableSupported = typeof PerformanceObserver !== 'undefined' &&\n// eslint-disable-next-line compat/compat\ntypeof PerformanceObserver.prototype !== 'undefined' &&\n// eslint-disable-next-line compat/compat\ntypeof PerformanceObserver.prototype.constructor === 'function';\nexport { isPerformanceObservableSupported };","import { isUserTimingAPISupported } from './is-user-timing-api-supported';\nimport { isPerformanceObservableSupported } from './is-performance-observable-supported';\nimport { isNodeJSEnv } from './is-nodejs-env';\n// Map() is not used in order to decrease the bundle\nlet marksMap = {};\nlet marksObserver = {};\n/**\n * Get the current time based on User Timing API or Date\n *\n * @returns number\n *\n */\nconst getTimeNow = () => isUserTimingAPISupported ? performance.now() : Date.now();\n/**\n * Clear marks and measure of performance event\n *\n * @param markName - Performance marker to be checked\n *\n * @returns void\n *\n */\nconst clear = markName => {\n  marksMap[markName] = undefined;\n  // Removes PerformanceObserver references from memory\n  if (!!marksObserver[markName]) {\n    marksObserver[markName] = undefined;\n  }\n  if (!isUserTimingAPISupported) {\n    return;\n  }\n  // Some versions of NodeJS doesn't support this method\n  if (!isNodeJSEnv) {\n    performance.clearMeasures(markName);\n  }\n  performance.clearMarks(markName);\n};\n/**\n * Start performance measure of event\n *\n * @param markName - Performance marker to be started\n *\n * @returns number\n *\n */\nconst start = markName => {\n  if (isUserTimingAPISupported) {\n    if (isNodeJSEnv && isPerformanceObservableSupported) {\n      // eslint-disable-next-line compat/compat\n      const obs = new PerformanceObserver(list => {\n        marksObserver[markName] = list.getEntries().find(f => f.name === markName);\n        obs.disconnect();\n      });\n      obs.observe({\n        entryTypes: ['measure']\n      });\n    }\n    performance.mark(markName);\n  }\n  marksMap[markName] = getTimeNow();\n};\n/**\n * Finishes performance measure of event and\n * clear marks and measure if applicable\n *\n * @param markName - Performance marker to be checked\n * @param markNameToCompare - Optional mark to compare to\n *\n * @returns PerfMarksPerformanceEntry\n *\n */\nconst end = (markName, markNameToCompare) => {\n  try {\n    const startTime = marksMap[markName];\n    if (!isUserTimingAPISupported) {\n      return startTime ? {\n        duration: getTimeNow() - startTime,\n        startTime,\n        entryType: 'measure',\n        name: markName\n      } : {};\n    }\n    // If there's no User Timing mark to be compared with,\n    // the package will create one to be used for better comparison\n    if (!markNameToCompare) {\n      performance.mark(`${markName}-end`);\n    }\n    performance.measure(markName, markName, markNameToCompare || `${markName}-end`);\n    if (isNodeJSEnv) {\n      if (!!marksObserver[markName]) {\n        return marksObserver[markName];\n      }\n      return startTime ? {\n        duration: getTimeNow() - startTime,\n        startTime,\n        entryType: 'measure',\n        name: markName\n      } : {};\n    }\n    const entry = performance.getEntriesByName(markName).pop();\n    return entry || {};\n  } catch (e) {\n    // If previous mark was missing for some reason, this will throw.\n    // This could only happen if something in event loop crashed\n    // in an unexpected place earlier.\n    // Don't pile on with more errors.\n    return {};\n  } finally {\n    // Clear marks immediately to avoid growing buffer.\n    clear(markName);\n    // Clear marks used for comparison in case of it's value was passed\n    // If the mark to compare is not passed, it should remove the one we create with `-end` suffix\n    clear(markNameToCompare || `${markName}-end`);\n  }\n};\n/**\n * Clear all marks and measures of performance event\n *\n * @returns void\n *\n */\nconst clearAll = () => {\n  marksMap = {};\n  marksObserver = {};\n  if (!isUserTimingAPISupported) {\n    return;\n  }\n  // Some versions of NodeJS doesn't support this method\n  if (!isNodeJSEnv) {\n    performance.clearMeasures();\n  }\n  performance.clearMarks();\n};\nexport { start, end, clear, clearAll, isUserTimingAPISupported, isPerformanceObservableSupported };","import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\"];\nconst _c1 = (a0, a1, a2, a3, a4) => ({\n  \"custom-content\": a0,\n  circle: a1,\n  progress: a2,\n  \"progress-dark\": a3,\n  pulse: a4\n});\nfunction NgxSkeletonLoaderComponent_div_0_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"appearance  === 'custom-content'\"]);\n  }\n}\nfunction NgxSkeletonLoaderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, NgxSkeletonLoaderComponent_div_0_ng_content_1_Template, 1, 0, \"ng-content\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction5(5, _c1, ctx_r0.appearance === \"custom-content\", ctx_r0.appearance === \"circle\", ctx_r0.animation === \"progress\", ctx_r0.animation === \"progress-dark\", ctx_r0.animation === \"pulse\"))(\"ngStyle\", ctx_r0.theme);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel)(\"aria-valuetext\", ctx_r0.loadingText);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.appearance === \"custom-content\");\n  }\n}\nconst NGX_SKELETON_LOADER_CONFIG = new InjectionToken('ngx-skeleton-loader.config');\nclass NgxSkeletonLoaderComponent {\n  constructor(config) {\n    this.config = config;\n    const {\n      appearance = 'line',\n      animation = 'progress',\n      theme = null,\n      loadingText = 'Loading...',\n      count = 1,\n      ariaLabel = 'loading'\n    } = config || {};\n    this.appearance = appearance;\n    this.animation = animation;\n    this.theme = theme;\n    this.loadingText = loadingText;\n    this.count = count;\n    this.items = [];\n    this.ariaLabel = ariaLabel;\n  }\n  ngOnInit() {\n    start('NgxSkeletonLoader:Rendered');\n    start('NgxSkeletonLoader:Loaded');\n    this.validateInputValues();\n  }\n  validateInputValues() {\n    // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)\n    if (!/^\\d+$/.test(`${this.count}`)) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'count' a numeric value. Forcing default to \"1\".`);\n      }\n      this.count = 1;\n    }\n    //Force count to 1 when custom-content is used\n    if (this.appearance === 'custom-content') {\n      // Shows error message only in Development\n      if (isDevMode() && this.count !== 1) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` enforces elements with \"custom-content\" appearance as DOM nodes. Forcing \"count\" to \"1\".`);\n        this.count = 1;\n      }\n    }\n    this.items.length = this.count;\n    const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n    if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n      }\n      this.animation = 'progress';\n    }\n    if (['circle', 'line', 'custom-content', ''].indexOf(String(this.appearance)) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'appearance' as: circle or line or custom-content or empty string. Forcing default to \"''\".`);\n      }\n      this.appearance = '';\n    }\n    if (Boolean(this.config?.theme?.extendsFromRoot) && this.theme !== null) {\n      // Shows error message only in Development\n      this.theme = {\n        ...this.config.theme,\n        ...this.theme\n      };\n    }\n  }\n  ngOnChanges(changes) {\n    // Avoiding multiple calls for the same input in case there's no changes in the fields\n    // Checking if the fields that require validation are available and if they were changed\n    // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.\n    if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {\n      return;\n    }\n    this.validateInputValues();\n  }\n  ngAfterViewInit() {\n    end('NgxSkeletonLoader:Rendered');\n  }\n  ngOnDestroy() {\n    end('NgxSkeletonLoader:Loaded');\n  }\n}\n/** @nocollapse */\nNgxSkeletonLoaderComponent.ɵfac = function NgxSkeletonLoaderComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgxSkeletonLoaderComponent)(i0.ɵɵdirectiveInject(NGX_SKELETON_LOADER_CONFIG, 8));\n};\n/** @nocollapse */\nNgxSkeletonLoaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxSkeletonLoaderComponent,\n  selectors: [[\"ngx-skeleton-loader\"]],\n  inputs: {\n    count: \"count\",\n    loadingText: \"loadingText\",\n    appearance: \"appearance\",\n    animation: \"animation\",\n    ariaLabel: \"ariaLabel\",\n    theme: \"theme\"\n  },\n  standalone: false,\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"skeleton-loader\", \"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"0\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"0\", 1, \"skeleton-loader\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngIf\"]],\n  template: function NgxSkeletonLoaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NgxSkeletonLoaderComponent_div_0_Template, 2, 11, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgStyle],\n  styles: [\".skeleton-loader[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader[_ngcontent-%COMP%]:after, .skeleton-loader[_ngcontent-%COMP%]:before{box-sizing:border-box}.skeleton-loader.circle[_ngcontent-%COMP%]{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%]{transform:translateZ(0)}.skeleton-loader.progress[_ngcontent-%COMP%]:after, .skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:after, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{box-sizing:border-box}.skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{animation:_ngcontent-%COMP%_progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content[_ngcontent-%COMP%]{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%], .skeleton-loader.custom-content[_ngcontent-%COMP%], .skeleton-loader.progress[_ngcontent-%COMP%]{animation:none}.skeleton-loader.progress[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%], .skeleton-loader.custom-content[_ngcontent-%COMP%]{background-image:none}}@keyframes _ngcontent-%COMP%_progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes _ngcontent-%COMP%_pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\"],\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSkeletonLoaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-skeleton-loader',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n  'custom-content': appearance === 'custom-content',\\n  circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\\n\\n\\n\\n\",\n      styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress{animation:none}.skeleton-loader.progress,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_SKELETON_LOADER_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    count: [{\n      type: Input\n    }],\n    loadingText: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass NgxSkeletonLoaderModule {\n  static forRoot(config) {\n    return {\n      ngModule: NgxSkeletonLoaderModule,\n      providers: [{\n        provide: NGX_SKELETON_LOADER_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n}\n/** @nocollapse */\nNgxSkeletonLoaderModule.ɵfac = function NgxSkeletonLoaderModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgxSkeletonLoaderModule)();\n};\n/** @nocollapse */\nNgxSkeletonLoaderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxSkeletonLoaderModule\n});\n/** @nocollapse */\nNgxSkeletonLoaderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSkeletonLoaderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxSkeletonLoaderComponent],\n      imports: [CommonModule],\n      exports: [NgxSkeletonLoaderComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-skeleton-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_SKELETON_LOADER_CONFIG, NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };\n\n"],"mappings":"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","names":[],"x_google_ignoreList":[0,1,2,3,4]}