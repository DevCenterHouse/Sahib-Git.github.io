{
  "version": 3,
  "sources": ["apps/findqo-ireland/src/app/shared/components/commercial-lead-ai-response/commercial-lead-ai-response.component.ts"],
  "sourcesContent": ["import { NgTemplateOutlet } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, Input, computed } from '@angular/core';\nimport { CommercialLeadAIResponse } from '@core/models';\n\n@Component({\n    selector: 'findqo-commercial-lead-ai-response',\n    imports: [NgTemplateOutlet],\n    template: `\n\t\t@if (isStringResponse()) {\n\t\t\t<div class=\"ai-content ai-hub-lead\" [innerHTML]=\"aiResponse\"></div>\n\t\t} @else {\n\t\t\t<p class=\"mb-4\">{{ parsedResponse().summary }}</p>\n\n\t\t\t<section>\n\t\t\t\t<h2 class=\"mb-3\">Office Spaces in {{ parsedResponse().primary_location }}</h2>\n\t\t\t\t@for (item of parsedResponse().offices; track item; let i = $index) {\n\t\t\t\t\t<ng-container *ngTemplateOutlet=\"officeBlock; context: { item: item, i: i }\"></ng-container>\n\t\t\t\t}\n\t\t\t</section>\n\n\t\t\t<section class=\"mt-4\">\n\t\t\t\t<h2 class=\"mb-3\">Alternative Locations</h2>\n\t\t\t\t@for (item of parsedResponse().alternative_locations; track item; let i = $index) {\n\t\t\t\t\t<ng-container *ngTemplateOutlet=\"officeBlock; context: { item: item, i: i }\"></ng-container>\n\t\t\t\t}\n\t\t\t</section>\n\n\t\t\t<ng-template #officeBlock let-item=\"item\" let-i=\"i\">\n\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t<p class=\"mb-2\">{{ i + 1 }}. {{ item.office_name }}</p>\n\t\t\t\t\t<ul class=\"mb-0\">\n\t\t\t\t\t\t<li>Monthly Rent: {{ item.monthly_rent }}</li>\n\t\t\t\t\t\t<li>Office Configuration: {{ item.configuration }}</li>\n\t\t\t\t\t\t<li>Area Insights: {{ item.area_insights }}</li>\n\t\t\t\t\t\t<li>Address: {{ item.address }}</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a [href]=\"item.listing_link\" target=\"_blank\" rel=\"noopener\">View Listing</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</ng-template>\n\t\t}\n\t`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CommercialLeadAIResponseComponent {\n\t@Input() aiResponse!: CommercialLeadAIResponse | string;\n\n\treadonly isStringResponse = computed(() => typeof this.aiResponse === 'string');\n\n\treadonly parsedResponse = computed<CommercialLeadAIResponse | null>(() => {\n\t\tconst val = this.aiResponse;\n\t\treturn typeof val === 'string' ? null : val;\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
